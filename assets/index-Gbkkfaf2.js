var H7=Object.defineProperty;var G7=(n,e,t)=>e in n?H7(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var Q1=(n,e,t)=>(G7(n,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();/**
* @vue/shared v3.4.14
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Xn(n,e){const t=new Set(n.split(","));return e?i=>t.has(i.toLowerCase()):i=>t.has(i)}const oe={},Q2=[],et=()=>{},V7=()=>!1,e4=n=>n.charCodeAt(0)===111&&n.charCodeAt(1)===110&&(n.charCodeAt(2)>122||n.charCodeAt(2)<97),qn=n=>n.startsWith("onUpdate:"),be=Object.assign,Yn=(n,e)=>{const t=n.indexOf(e);t>-1&&n.splice(t,1)},W7=Object.prototype.hasOwnProperty,Z1=(n,e)=>W7.call(n,e),G1=Array.isArray,b3=n=>n4(n)==="[object Map]",k7=n=>n4(n)==="[object Set]",X1=n=>typeof n=="function",Te=n=>typeof n=="string",t4=n=>typeof n=="symbol",pe=n=>n!==null&&typeof n=="object",Z5=n=>(pe(n)||X1(n))&&X1(n.then)&&X1(n.catch),X7=Object.prototype.toString,n4=n=>X7.call(n),q7=n=>n4(n).slice(8,-1),Y7=n=>n4(n)==="[object Object]",jn=n=>Te(n)&&n!=="NaN"&&n[0]!=="-"&&""+parseInt(n,10)===n,O0=Xn(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),i4=n=>{const e=Object.create(null);return t=>e[t]||(e[t]=n(t))},j7=/-(\w)/g,r3=i4(n=>n.replace(j7,(e,t)=>t?t.toUpperCase():"")),K7=/\B([A-Z])/g,u3=i4(n=>n.replace(K7,"-$1").toLowerCase()),$5=i4(n=>n.charAt(0).toUpperCase()+n.slice(1)),M4=i4(n=>n?`on${$5(n)}`:""),x2=(n,e)=>!Object.is(n,e),S4=(n,e)=>{for(let t=0;t<n.length;t++)n[t](e)},G0=(n,e,t)=>{Object.defineProperty(n,e,{configurable:!0,enumerable:!1,value:t})},Z7=n=>{const e=parseFloat(n);return isNaN(e)?n:e};let N9;const J5=()=>N9||(N9=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function Kn(n){if(G1(n)){const e={};for(let t=0;t<n.length;t++){const i=n[t],r=Te(i)?e6(i):Kn(i);if(r)for(const s in r)e[s]=r[s]}return e}else if(Te(n)||pe(n))return n}const $7=/;(?![^(]*\))/g,J7=/:([^]+)/,Q7=/\/\*[^]*?\*\//g;function e6(n){const e={};return n.replace(Q7,"").split($7).forEach(t=>{if(t){const i=t.split(J7);i.length>1&&(e[i[0].trim()]=i[1].trim())}}),e}function Zn(n){let e="";if(Te(n))e=n;else if(G1(n))for(let t=0;t<n.length;t++){const i=Zn(n[t]);i&&(e+=i+" ")}else if(pe(n))for(const t in n)n[t]&&(e+=t+" ");return e.trim()}const t6="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",n6=Xn(t6);function Q5(n){return!!n||n===""}/**
* @vue/reactivity v3.4.14
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let st;class i6{constructor(e=!1){this.detached=e,this._active=!0,this.effects=[],this.cleanups=[],this.parent=st,!e&&st&&(this.index=(st.scopes||(st.scopes=[])).push(this)-1)}get active(){return this._active}run(e){if(this._active){const t=st;try{return st=this,e()}finally{st=t}}}on(){st=this}off(){st=this.parent}stop(e){if(this._active){let t,i;for(t=0,i=this.effects.length;t<i;t++)this.effects[t].stop();for(t=0,i=this.cleanups.length;t<i;t++)this.cleanups[t]();if(this.scopes)for(t=0,i=this.scopes.length;t<i;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!e){const r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0,this._active=!1}}}function r6(n,e=st){e&&e.active&&e.effects.push(n)}function s6(){return st}let d2;class $n{constructor(e,t,i,r){this.fn=e,this.trigger=t,this.scheduler=i,this.active=!0,this.deps=[],this._dirtyLevel=2,this._trackId=0,this._runnings=0,this._shouldSchedule=!1,this._depsLength=0,r6(this,r)}get dirty(){if(this._dirtyLevel===1){E2();for(let e=0;e<this._depsLength;e++){const t=this.deps[e];if(t.computed&&(o6(t.computed),this._dirtyLevel>=2))break}this._dirtyLevel<2&&(this._dirtyLevel=0),b2()}return this._dirtyLevel>=2}set dirty(e){this._dirtyLevel=e?2:0}run(){if(this._dirtyLevel=0,!this.active)return this.fn();let e=qt,t=d2;try{return qt=!0,d2=this,this._runnings++,O9(this),this.fn()}finally{F9(this),this._runnings--,d2=t,qt=e}}stop(){var e;this.active&&(O9(this),F9(this),(e=this.onStop)==null||e.call(this),this.active=!1)}}function o6(n){return n.value}function O9(n){n._trackId++,n._depsLength=0}function F9(n){if(n.deps&&n.deps.length>n._depsLength){for(let e=n._depsLength;e<n.deps.length;e++)ei(n.deps[e],n);n.deps.length=n._depsLength}}function ei(n,e){const t=n.get(e);t!==void 0&&e._trackId!==t&&(n.delete(e),n.size===0&&n.cleanup())}let qt=!0,mn=0;const ti=[];function E2(){ti.push(qt),qt=!1}function b2(){const n=ti.pop();qt=n===void 0?!0:n}function Jn(){mn++}function Qn(){for(mn--;!mn&&gn.length;)gn.shift()()}function ni(n,e,t){if(e.get(n)!==n._trackId){e.set(n,n._trackId);const i=n.deps[n._depsLength];i!==e?(i&&ei(i,n),n.deps[n._depsLength++]=e):n._depsLength++}}const gn=[];function ii(n,e,t){Jn();for(const i of n.keys())if(n.get(i)===i._trackId){if(i._dirtyLevel<e&&!(i._runnings&&!i.allowRecurse)){const r=i._dirtyLevel;i._dirtyLevel=e,r===0&&(i._shouldSchedule=!0,i.trigger())}i.scheduler&&i._shouldSchedule&&(!i._runnings||i.allowRecurse)&&(i._shouldSchedule=!1,gn.push(i.scheduler))}Qn()}const ri=(n,e)=>{const t=new Map;return t.cleanup=n,t.computed=e,t},_n=new WeakMap,p2=Symbol(""),vn=Symbol("");function Ve(n,e,t){if(qt&&d2){let i=_n.get(n);i||_n.set(n,i=new Map);let r=i.get(t);r||i.set(t,r=ri(()=>i.delete(t))),ni(d2,r)}}function Ct(n,e,t,i,r,s){const o=_n.get(n);if(!o)return;let a=[];if(e==="clear")a=[...o.values()];else if(t==="length"&&G1(n)){const l=Number(i);o.forEach((c,u)=>{(u==="length"||!t4(u)&&u>=l)&&a.push(c)})}else switch(t!==void 0&&a.push(o.get(t)),e){case"add":G1(n)?jn(t)&&a.push(o.get("length")):(a.push(o.get(p2)),b3(n)&&a.push(o.get(vn)));break;case"delete":G1(n)||(a.push(o.get(p2)),b3(n)&&a.push(o.get(vn)));break;case"set":b3(n)&&a.push(o.get(p2));break}Jn();for(const l of a)l&&ii(l,2);Qn()}const a6=Xn("__proto__,__v_isRef,__isVue"),si=new Set(Object.getOwnPropertyNames(Symbol).filter(n=>n!=="arguments"&&n!=="caller").map(n=>Symbol[n]).filter(t4)),B9=l6();function l6(){const n={};return["includes","indexOf","lastIndexOf"].forEach(e=>{n[e]=function(...t){const i=ee(this);for(let s=0,o=this.length;s<o;s++)Ve(i,"get",s+"");const r=i[e](...t);return r===-1||r===!1?i[e](...t.map(ee)):r}}),["push","pop","shift","unshift","splice"].forEach(e=>{n[e]=function(...t){E2(),Jn();const i=ee(this)[e].apply(this,t);return Qn(),b2(),i}}),n}function c6(n){const e=ee(this);return Ve(e,"has",n),e.hasOwnProperty(n)}class oi{constructor(e=!1,t=!1){this._isReadonly=e,this._shallow=t}get(e,t,i){const r=this._isReadonly,s=this._shallow;if(t==="__v_isReactive")return!r;if(t==="__v_isReadonly")return r;if(t==="__v_isShallow")return s;if(t==="__v_raw")return i===(r?s?S6:ui:s?ci:li).get(e)||Object.getPrototypeOf(e)===Object.getPrototypeOf(i)?e:void 0;const o=G1(e);if(!r){if(o&&Z1(B9,t))return Reflect.get(B9,t,i);if(t==="hasOwnProperty")return c6}const a=Reflect.get(e,t,i);return(t4(t)?si.has(t):a6(t))||(r||Ve(e,"get",t),s)?a:Ye(a)?o&&jn(t)?a:a.value:pe(a)?r?hi(a):n9(a):a}}class ai extends oi{constructor(e=!1){super(!1,e)}set(e,t,i,r){let s=e[t];if(!this._shallow){const l=U3(s);if(!xn(i)&&!U3(i)&&(s=ee(s),i=ee(i)),!G1(e)&&Ye(s)&&!Ye(i))return l?!1:(s.value=i,!0)}const o=G1(e)&&jn(t)?Number(t)<e.length:Z1(e,t),a=Reflect.set(e,t,i,r);return e===ee(r)&&(o?x2(i,s)&&Ct(e,"set",t,i):Ct(e,"add",t,i)),a}deleteProperty(e,t){const i=Z1(e,t);e[t];const r=Reflect.deleteProperty(e,t);return r&&i&&Ct(e,"delete",t,void 0),r}has(e,t){const i=Reflect.has(e,t);return(!t4(t)||!si.has(t))&&Ve(e,"has",t),i}ownKeys(e){return Ve(e,"iterate",G1(e)?"length":p2),Reflect.ownKeys(e)}}class u6 extends oi{constructor(e=!1){super(!0,e)}set(e,t){return!0}deleteProperty(e,t){return!0}}const h6=new ai,f6=new u6,d6=new ai(!0),e9=n=>n,r4=n=>Reflect.getPrototypeOf(n);function J3(n,e,t=!1,i=!1){n=n.__v_raw;const r=ee(n),s=ee(e);t||(x2(e,s)&&Ve(r,"get",e),Ve(r,"get",s));const{has:o}=r4(r),a=i?e9:t?s9:r9;if(o.call(r,e))return a(n.get(e));if(o.call(r,s))return a(n.get(s));n!==r&&n.get(e)}function Q3(n,e=!1){const t=this.__v_raw,i=ee(t),r=ee(n);return e||(x2(n,r)&&Ve(i,"has",n),Ve(i,"has",r)),n===r?t.has(n):t.has(n)||t.has(r)}function e0(n,e=!1){return n=n.__v_raw,!e&&Ve(ee(n),"iterate",p2),Reflect.get(n,"size",n)}function z9(n){n=ee(n);const e=ee(this);return r4(e).has.call(e,n)||(e.add(n),Ct(e,"add",n,n)),this}function H9(n,e){e=ee(e);const t=ee(this),{has:i,get:r}=r4(t);let s=i.call(t,n);s||(n=ee(n),s=i.call(t,n));const o=r.call(t,n);return t.set(n,e),s?x2(e,o)&&Ct(t,"set",n,e):Ct(t,"add",n,e),this}function G9(n){const e=ee(this),{has:t,get:i}=r4(e);let r=t.call(e,n);r||(n=ee(n),r=t.call(e,n)),i&&i.call(e,n);const s=e.delete(n);return r&&Ct(e,"delete",n,void 0),s}function V9(){const n=ee(this),e=n.size!==0,t=n.clear();return e&&Ct(n,"clear",void 0,void 0),t}function t0(n,e){return function(i,r){const s=this,o=s.__v_raw,a=ee(o),l=e?e9:n?s9:r9;return!n&&Ve(a,"iterate",p2),o.forEach((c,u)=>i.call(r,l(c),l(u),s))}}function n0(n,e,t){return function(...i){const r=this.__v_raw,s=ee(r),o=b3(s),a=n==="entries"||n===Symbol.iterator&&o,l=n==="keys"&&o,c=r[n](...i),u=t?e9:e?s9:r9;return!e&&Ve(s,"iterate",l?vn:p2),{next(){const{value:h,done:f}=c.next();return f?{value:h,done:f}:{value:a?[u(h[0]),u(h[1])]:u(h),done:f}},[Symbol.iterator](){return this}}}}function Ut(n){return function(...e){return n==="delete"?!1:n==="clear"?void 0:this}}function p6(){const n={get(s){return J3(this,s)},get size(){return e0(this)},has:Q3,add:z9,set:H9,delete:G9,clear:V9,forEach:t0(!1,!1)},e={get(s){return J3(this,s,!1,!0)},get size(){return e0(this)},has:Q3,add:z9,set:H9,delete:G9,clear:V9,forEach:t0(!1,!0)},t={get(s){return J3(this,s,!0)},get size(){return e0(this,!0)},has(s){return Q3.call(this,s,!0)},add:Ut("add"),set:Ut("set"),delete:Ut("delete"),clear:Ut("clear"),forEach:t0(!0,!1)},i={get(s){return J3(this,s,!0,!0)},get size(){return e0(this,!0)},has(s){return Q3.call(this,s,!0)},add:Ut("add"),set:Ut("set"),delete:Ut("delete"),clear:Ut("clear"),forEach:t0(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(s=>{n[s]=n0(s,!1,!1),t[s]=n0(s,!0,!1),e[s]=n0(s,!1,!0),i[s]=n0(s,!0,!0)}),[n,t,e,i]}const[m6,g6,_6,v6]=p6();function t9(n,e){const t=e?n?v6:_6:n?g6:m6;return(i,r,s)=>r==="__v_isReactive"?!n:r==="__v_isReadonly"?n:r==="__v_raw"?i:Reflect.get(Z1(t,r)&&r in i?t:i,r,s)}const x6={get:t9(!1,!1)},y6={get:t9(!1,!0)},M6={get:t9(!0,!1)},li=new WeakMap,ci=new WeakMap,ui=new WeakMap,S6=new WeakMap;function E6(n){switch(n){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function b6(n){return n.__v_skip||!Object.isExtensible(n)?0:E6(q7(n))}function n9(n){return U3(n)?n:i9(n,!1,h6,x6,li)}function T6(n){return i9(n,!1,d6,y6,ci)}function hi(n){return i9(n,!0,f6,M6,ui)}function i9(n,e,t,i,r){if(!pe(n)||n.__v_raw&&!(e&&n.__v_isReactive))return n;const s=r.get(n);if(s)return s;const o=b6(n);if(o===0)return n;const a=new Proxy(n,o===2?i:t);return r.set(n,a),a}function e3(n){return U3(n)?e3(n.__v_raw):!!(n&&n.__v_isReactive)}function U3(n){return!!(n&&n.__v_isReadonly)}function xn(n){return!!(n&&n.__v_isShallow)}function fi(n){return e3(n)||U3(n)}function ee(n){const e=n&&n.__v_raw;return e?ee(e):n}function di(n){return G0(n,"__v_skip",!0),n}const r9=n=>pe(n)?n9(n):n,s9=n=>pe(n)?hi(n):n;class pi{constructor(e,t,i,r){this._setter=t,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this.effect=new $n(()=>e(this._value),()=>W9(this,1)),this.effect.computed=this,this.effect.active=this._cacheable=!r,this.__v_isReadonly=i}get value(){const e=ee(this);return(!e._cacheable||e.effect.dirty)&&x2(e._value,e._value=e.effect.run())&&W9(e,2),w6(e),e._value}set value(e){this._setter(e)}get _dirty(){return this.effect.dirty}set _dirty(e){this.effect.dirty=e}}function A6(n,e,t=!1){let i,r;const s=X1(n);return s?(i=n,r=et):(i=n.get,r=n.set),new pi(i,r,s||!r,t)}function w6(n){qt&&d2&&(n=ee(n),ni(d2,n.dep||(n.dep=ri(()=>n.dep=void 0,n instanceof pi?n:void 0))))}function W9(n,e=2,t){n=ee(n);const i=n.dep;i&&ii(i,e)}function Ye(n){return!!(n&&n.__v_isRef===!0)}function R6(n){return Ye(n)?n.value:n}const C6={get:(n,e,t)=>R6(Reflect.get(n,e,t)),set:(n,e,t,i)=>{const r=n[e];return Ye(r)&&!Ye(t)?(r.value=t,!0):Reflect.set(n,e,t,i)}};function mi(n){return e3(n)?n:new Proxy(n,C6)}/**
* @vue/runtime-core v3.4.14
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Yt(n,e,t,i){let r;try{r=i?n(...i):n()}catch(s){s4(s,e,t)}return r}function ut(n,e,t,i){if(X1(n)){const s=Yt(n,e,t,i);return s&&Z5(s)&&s.catch(o=>{s4(o,e,t)}),s}const r=[];for(let s=0;s<n.length;s++)r.push(ut(n[s],e,t,i));return r}function s4(n,e,t,i=!0){const r=e?e.vnode:null;if(e){let s=e.parent;const o=e.proxy,a=`https://vuejs.org/errors/#runtime-${t}`;for(;s;){const c=s.ec;if(c){for(let u=0;u<c.length;u++)if(c[u](n,o,a)===!1)return}s=s.parent}const l=e.appContext.config.errorHandler;if(l){Yt(l,null,10,[n,o,a]);return}}P6(n,t,r,i)}function P6(n,e,t,i=!0){console.error(n)}let N3=!1,yn=!1;const Ce=[];let mt=0;const t3=[];let Ht=null,u2=0;const gi=Promise.resolve();let o9=null;function L6(n){const e=o9||gi;return n?e.then(this?n.bind(this):n):e}function D6(n){let e=mt+1,t=Ce.length;for(;e<t;){const i=e+t>>>1,r=Ce[i],s=O3(r);s<n||s===n&&r.pre?e=i+1:t=i}return e}function a9(n){(!Ce.length||!Ce.includes(n,N3&&n.allowRecurse?mt+1:mt))&&(n.id==null?Ce.push(n):Ce.splice(D6(n.id),0,n),_i())}function _i(){!N3&&!yn&&(yn=!0,o9=gi.then(xi))}function I6(n){const e=Ce.indexOf(n);e>mt&&Ce.splice(e,1)}function U6(n){G1(n)?t3.push(...n):(!Ht||!Ht.includes(n,n.allowRecurse?u2+1:u2))&&t3.push(n),_i()}function k9(n,e,t=N3?mt+1:0){for(;t<Ce.length;t++){const i=Ce[t];if(i&&i.pre){if(n&&i.id!==n.uid)continue;Ce.splice(t,1),t--,i()}}}function vi(n){if(t3.length){const e=[...new Set(t3)].sort((t,i)=>O3(t)-O3(i));if(t3.length=0,Ht){Ht.push(...e);return}for(Ht=e,u2=0;u2<Ht.length;u2++)Ht[u2]();Ht=null,u2=0}}const O3=n=>n.id==null?1/0:n.id,N6=(n,e)=>{const t=O3(n)-O3(e);if(t===0){if(n.pre&&!e.pre)return-1;if(e.pre&&!n.pre)return 1}return t};function xi(n){yn=!1,N3=!0,Ce.sort(N6);try{for(mt=0;mt<Ce.length;mt++){const e=Ce[mt];e&&e.active!==!1&&Yt(e,null,14)}}finally{mt=0,Ce.length=0,vi(),N3=!1,o9=null,(Ce.length||t3.length)&&xi()}}function O6(n,e,...t){if(n.isUnmounted)return;const i=n.vnode.props||oe;let r=t;const s=e.startsWith("update:"),o=s&&e.slice(7);if(o&&o in i){const u=`${o==="modelValue"?"model":o}Modifiers`,{number:h,trim:f}=i[u]||oe;f&&(r=t.map(m=>Te(m)?m.trim():m)),h&&(r=t.map(Z7))}let a,l=i[a=M4(e)]||i[a=M4(r3(e))];!l&&s&&(l=i[a=M4(u3(e))]),l&&ut(l,n,6,r);const c=i[a+"Once"];if(c){if(!n.emitted)n.emitted={};else if(n.emitted[a])return;n.emitted[a]=!0,ut(c,n,6,r)}}function yi(n,e,t=!1){const i=e.emitsCache,r=i.get(n);if(r!==void 0)return r;const s=n.emits;let o={},a=!1;if(!X1(n)){const l=c=>{const u=yi(c,e,!0);u&&(a=!0,be(o,u))};!t&&e.mixins.length&&e.mixins.forEach(l),n.extends&&l(n.extends),n.mixins&&n.mixins.forEach(l)}return!s&&!a?(pe(n)&&i.set(n,null),null):(G1(s)?s.forEach(l=>o[l]=null):be(o,s),pe(n)&&i.set(n,o),o)}function o4(n,e){return!n||!e4(e)?!1:(e=e.slice(2).replace(/Once$/,""),Z1(n,e[0].toLowerCase()+e.slice(1))||Z1(n,u3(e))||Z1(n,e))}let _t=null,Mi=null;function V0(n){const e=_t;return _t=n,Mi=n&&n.type.__scopeId||null,e}function F6(n,e=_t,t){if(!e||n._n)return n;const i=(...r)=>{i._d&&e8(-1);const s=V0(e);let o;try{o=n(...r)}finally{V0(s),i._d&&e8(1)}return o};return i._n=!0,i._c=!0,i._d=!0,i}function E4(n){const{type:e,vnode:t,proxy:i,withProxy:r,props:s,propsOptions:[o],slots:a,attrs:l,emit:c,render:u,renderCache:h,data:f,setupState:m,ctx:g,inheritAttrs:v}=n;let p,d;const w=V0(n);try{if(t.shapeFlag&4){const b=r||i,B=b;p=dt(u.call(B,b,h,s,m,f,g)),d=l}else{const b=e;p=dt(b.length>1?b(s,{attrs:l,slots:a,emit:c}):b(s,null)),d=e.props?l:B6(l)}}catch(b){A3.length=0,s4(b,n,1),p=m2(F3)}let y=p;if(d&&v!==!1){const b=Object.keys(d),{shapeFlag:B}=y;b.length&&B&7&&(o&&b.some(qn)&&(d=z6(d,o)),y=s3(y,d))}return t.dirs&&(y=s3(y),y.dirs=y.dirs?y.dirs.concat(t.dirs):t.dirs),t.transition&&(y.transition=t.transition),p=y,V0(w),p}const B6=n=>{let e;for(const t in n)(t==="class"||t==="style"||e4(t))&&((e||(e={}))[t]=n[t]);return e},z6=(n,e)=>{const t={};for(const i in n)(!qn(i)||!(i.slice(9)in e))&&(t[i]=n[i]);return t};function H6(n,e,t){const{props:i,children:r,component:s}=n,{props:o,children:a,patchFlag:l}=e,c=s.emitsOptions;if(e.dirs||e.transition)return!0;if(t&&l>=0){if(l&1024)return!0;if(l&16)return i?X9(i,o,c):!!o;if(l&8){const u=e.dynamicProps;for(let h=0;h<u.length;h++){const f=u[h];if(o[f]!==i[f]&&!o4(c,f))return!0}}}else return(r||a)&&(!a||!a.$stable)?!0:i===o?!1:i?o?X9(i,o,c):!0:!!o;return!1}function X9(n,e,t){const i=Object.keys(e);if(i.length!==Object.keys(n).length)return!0;for(let r=0;r<i.length;r++){const s=i[r];if(e[s]!==n[s]&&!o4(t,s))return!0}return!1}function G6({vnode:n,parent:e},t){for(;e;){const i=e.subTree;if(i.suspense&&i.suspense.activeBranch===n&&(i.el=n.el),i===n)(n=e.vnode).el=t,e=e.parent;else break}}const V6=Symbol.for("v-ndc"),W6=n=>n.__isSuspense;function k6(n,e){e&&e.pendingBranch?G1(n)?e.effects.push(...n):e.effects.push(n):U6(n)}const X6=Symbol.for("v-scx"),q6=()=>B0(X6),i0={};function b4(n,e,t){return Si(n,e,t)}function Si(n,e,{immediate:t,deep:i,flush:r,once:s,onTrack:o,onTrigger:a}=oe){if(e&&s){const R=e;e=(...L)=>{R(...L),B()}}const l=Fe,c=R=>i===!0?R:K2(R,i===!1?1:void 0);let u,h=!1,f=!1;if(Ye(n)?(u=()=>n.value,h=xn(n)):e3(n)?(u=()=>c(n),h=!0):G1(n)?(f=!0,h=n.some(R=>e3(R)||xn(R)),u=()=>n.map(R=>{if(Ye(R))return R.value;if(e3(R))return c(R);if(X1(R))return Yt(R,l,2)})):X1(n)?e?u=()=>Yt(n,l,2):u=()=>(m&&m(),ut(n,l,3,[g])):u=et,e&&i){const R=u;u=()=>K2(R())}let m,g=R=>{m=y.onStop=()=>{Yt(R,l,4),m=y.onStop=void 0}},v;if(u4)if(g=et,e?t&&ut(e,l,3,[u(),f?[]:void 0,g]):u(),r==="sync"){const R=q6();v=R.__watcherHandles||(R.__watcherHandles=[])}else return et;let p=f?new Array(n.length).fill(i0):i0;const d=()=>{if(!(!y.active||!y.dirty))if(e){const R=y.run();(i||h||(f?R.some((L,t1)=>x2(L,p[t1])):x2(R,p)))&&(m&&m(),ut(e,l,3,[R,p===i0?void 0:f&&p[0]===i0?[]:p,g]),p=R)}else y.run()};d.allowRecurse=!!e;let w;r==="sync"?w=d:r==="post"?w=()=>ze(d,l&&l.suspense):(d.pre=!0,l&&(d.id=l.uid),w=()=>a9(d));const y=new $n(u,et,w),b=s6(),B=()=>{y.stop(),b&&Yn(b.effects,y)};return e?t?d():p=y.run():r==="post"?ze(y.run.bind(y),l&&l.suspense):y.run(),v&&v.push(B),B}function Y6(n,e,t){const i=this.proxy,r=Te(n)?n.includes(".")?Ei(i,n):()=>i[n]:n.bind(i,i);let s;X1(e)?s=e:(s=e.handler,t=e);const o=q3(this),a=Si(r,s.bind(i),t);return o(),a}function Ei(n,e){const t=e.split(".");return()=>{let i=n;for(let r=0;r<t.length&&i;r++)i=i[t[r]];return i}}function K2(n,e,t=0,i){if(!pe(n)||n.__v_skip)return n;if(e&&e>0){if(t>=e)return n;t++}if(i=i||new Set,i.has(n))return n;if(i.add(n),Ye(n))K2(n.value,e,t,i);else if(G1(n))for(let r=0;r<n.length;r++)K2(n[r],e,t,i);else if(k7(n)||b3(n))n.forEach(r=>{K2(r,e,t,i)});else if(Y7(n))for(const r in n)K2(n[r],e,t,i);return n}function i2(n,e,t,i){const r=n.dirs,s=e&&e.dirs;for(let o=0;o<r.length;o++){const a=r[o];s&&(a.oldValue=s[o].value);let l=a.dir[i];l&&(E2(),ut(l,t,8,[n.el,a,n,e]),b2())}}/*! #__NO_SIDE_EFFECTS__ */function j6(n,e){return X1(n)?be({name:n.name},e,{setup:n}):n}const F0=n=>!!n.type.__asyncLoader,bi=n=>n.type.__isKeepAlive;function K6(n,e){Ti(n,"a",e)}function Z6(n,e){Ti(n,"da",e)}function Ti(n,e,t=Fe){const i=n.__wdc||(n.__wdc=()=>{let r=t;for(;r;){if(r.isDeactivated)return;r=r.parent}return n()});if(a4(e,i,t),t){let r=t.parent;for(;r&&r.parent;)bi(r.parent.vnode)&&$6(i,e,t,r),r=r.parent}}function $6(n,e,t,i){const r=a4(e,n,i,!0);wi(()=>{Yn(i[e],r)},t)}function a4(n,e,t=Fe,i=!1){if(t){const r=t[n]||(t[n]=[]),s=e.__weh||(e.__weh=(...o)=>{if(t.isUnmounted)return;E2();const a=q3(t),l=ut(e,t,n,o);return a(),b2(),l});return i?r.unshift(s):r.push(s),s}}const It=n=>(e,t=Fe)=>(!u4||n==="sp")&&a4(n,(...i)=>e(...i),t),J6=It("bm"),Ai=It("m"),Q6=It("bu"),er=It("u"),tr=It("bum"),wi=It("um"),nr=It("sp"),ir=It("rtg"),rr=It("rtc");function sr(n,e=Fe){a4("ec",n,e)}const Mn=n=>n?zi(n)?h9(n)||n.proxy:Mn(n.parent):null,T3=be(Object.create(null),{$:n=>n,$el:n=>n.vnode.el,$data:n=>n.data,$props:n=>n.props,$attrs:n=>n.attrs,$slots:n=>n.slots,$refs:n=>n.refs,$parent:n=>Mn(n.parent),$root:n=>Mn(n.root),$emit:n=>n.emit,$options:n=>l9(n),$forceUpdate:n=>n.f||(n.f=()=>{n.effect.dirty=!0,a9(n.update)}),$nextTick:n=>n.n||(n.n=L6.bind(n.proxy)),$watch:n=>Y6.bind(n)}),T4=(n,e)=>n!==oe&&!n.__isScriptSetup&&Z1(n,e),or={get({_:n},e){const{ctx:t,setupState:i,data:r,props:s,accessCache:o,type:a,appContext:l}=n;let c;if(e[0]!=="$"){const m=o[e];if(m!==void 0)switch(m){case 1:return i[e];case 2:return r[e];case 4:return t[e];case 3:return s[e]}else{if(T4(i,e))return o[e]=1,i[e];if(r!==oe&&Z1(r,e))return o[e]=2,r[e];if((c=n.propsOptions[0])&&Z1(c,e))return o[e]=3,s[e];if(t!==oe&&Z1(t,e))return o[e]=4,t[e];Sn&&(o[e]=0)}}const u=T3[e];let h,f;if(u)return e==="$attrs"&&Ve(n,"get",e),u(n);if((h=a.__cssModules)&&(h=h[e]))return h;if(t!==oe&&Z1(t,e))return o[e]=4,t[e];if(f=l.config.globalProperties,Z1(f,e))return f[e]},set({_:n},e,t){const{data:i,setupState:r,ctx:s}=n;return T4(r,e)?(r[e]=t,!0):i!==oe&&Z1(i,e)?(i[e]=t,!0):Z1(n.props,e)||e[0]==="$"&&e.slice(1)in n?!1:(s[e]=t,!0)},has({_:{data:n,setupState:e,accessCache:t,ctx:i,appContext:r,propsOptions:s}},o){let a;return!!t[o]||n!==oe&&Z1(n,o)||T4(e,o)||(a=s[0])&&Z1(a,o)||Z1(i,o)||Z1(T3,o)||Z1(r.config.globalProperties,o)},defineProperty(n,e,t){return t.get!=null?n._.accessCache[e]=0:Z1(t,"value")&&this.set(n,e,t.value,null),Reflect.defineProperty(n,e,t)}};function q9(n){return G1(n)?n.reduce((e,t)=>(e[t]=null,e),{}):n}let Sn=!0;function ar(n){const e=l9(n),t=n.proxy,i=n.ctx;Sn=!1,e.beforeCreate&&Y9(e.beforeCreate,n,"bc");const{data:r,computed:s,methods:o,watch:a,provide:l,inject:c,created:u,beforeMount:h,mounted:f,beforeUpdate:m,updated:g,activated:v,deactivated:p,beforeDestroy:d,beforeUnmount:w,destroyed:y,unmounted:b,render:B,renderTracked:R,renderTriggered:L,errorCaptured:t1,serverPrefetch:T,expose:A,inheritAttrs:Y,components:s1,directives:f1,filters:z}=e;if(c&&lr(c,i,null),o)for(const J in o){const Z=o[J];X1(Z)&&(i[J]=Z.bind(t))}if(r){const J=r.call(t,t);pe(J)&&(n.data=n9(J))}if(Sn=!0,s)for(const J in s){const Z=s[J],i1=X1(Z)?Z.bind(t,t):X1(Z.get)?Z.get.bind(t,t):et,o1=!X1(Z)&&X1(Z.set)?Z.set.bind(t):et,u1=Vr({get:i1,set:o1});Object.defineProperty(i,J,{enumerable:!0,configurable:!0,get:()=>u1.value,set:h1=>u1.value=h1})}if(a)for(const J in a)Ri(a[J],i,t,J);if(l){const J=X1(l)?l.call(t):l;Reflect.ownKeys(J).forEach(Z=>{pr(Z,J[Z])})}u&&Y9(u,n,"c");function q(J,Z){G1(Z)?Z.forEach(i1=>J(i1.bind(t))):Z&&J(Z.bind(t))}if(q(J6,h),q(Ai,f),q(Q6,m),q(er,g),q(K6,v),q(Z6,p),q(sr,t1),q(rr,R),q(ir,L),q(tr,w),q(wi,b),q(nr,T),G1(A))if(A.length){const J=n.exposed||(n.exposed={});A.forEach(Z=>{Object.defineProperty(J,Z,{get:()=>t[Z],set:i1=>t[Z]=i1})})}else n.exposed||(n.exposed={});B&&n.render===et&&(n.render=B),Y!=null&&(n.inheritAttrs=Y),s1&&(n.components=s1),f1&&(n.directives=f1)}function lr(n,e,t=et){G1(n)&&(n=En(n));for(const i in n){const r=n[i];let s;pe(r)?"default"in r?s=B0(r.from||i,r.default,!0):s=B0(r.from||i):s=B0(r),Ye(s)?Object.defineProperty(e,i,{enumerable:!0,configurable:!0,get:()=>s.value,set:o=>s.value=o}):e[i]=s}}function Y9(n,e,t){ut(G1(n)?n.map(i=>i.bind(e.proxy)):n.bind(e.proxy),e,t)}function Ri(n,e,t,i){const r=i.includes(".")?Ei(t,i):()=>t[i];if(Te(n)){const s=e[n];X1(s)&&b4(r,s)}else if(X1(n))b4(r,n.bind(t));else if(pe(n))if(G1(n))n.forEach(s=>Ri(s,e,t,i));else{const s=X1(n.handler)?n.handler.bind(t):e[n.handler];X1(s)&&b4(r,s,n)}}function l9(n){const e=n.type,{mixins:t,extends:i}=e,{mixins:r,optionsCache:s,config:{optionMergeStrategies:o}}=n.appContext,a=s.get(e);let l;return a?l=a:!r.length&&!t&&!i?l=e:(l={},r.length&&r.forEach(c=>W0(l,c,o,!0)),W0(l,e,o)),pe(e)&&s.set(e,l),l}function W0(n,e,t,i=!1){const{mixins:r,extends:s}=e;s&&W0(n,s,t,!0),r&&r.forEach(o=>W0(n,o,t,!0));for(const o in e)if(!(i&&o==="expose")){const a=cr[o]||t&&t[o];n[o]=a?a(n[o],e[o]):e[o]}return n}const cr={data:j9,props:K9,emits:K9,methods:E3,computed:E3,beforeCreate:Ue,created:Ue,beforeMount:Ue,mounted:Ue,beforeUpdate:Ue,updated:Ue,beforeDestroy:Ue,beforeUnmount:Ue,destroyed:Ue,unmounted:Ue,activated:Ue,deactivated:Ue,errorCaptured:Ue,serverPrefetch:Ue,components:E3,directives:E3,watch:hr,provide:j9,inject:ur};function j9(n,e){return e?n?function(){return be(X1(n)?n.call(this,this):n,X1(e)?e.call(this,this):e)}:e:n}function ur(n,e){return E3(En(n),En(e))}function En(n){if(G1(n)){const e={};for(let t=0;t<n.length;t++)e[n[t]]=n[t];return e}return n}function Ue(n,e){return n?[...new Set([].concat(n,e))]:e}function E3(n,e){return n?be(Object.create(null),n,e):e}function K9(n,e){return n?G1(n)&&G1(e)?[...new Set([...n,...e])]:be(Object.create(null),q9(n),q9(e??{})):e}function hr(n,e){if(!n)return e;if(!e)return n;const t=be(Object.create(null),n);for(const i in e)t[i]=Ue(n[i],e[i]);return t}function Ci(){return{app:null,config:{isNativeTag:V7,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let fr=0;function dr(n,e){return function(i,r=null){X1(i)||(i=be({},i)),r!=null&&!pe(r)&&(r=null);const s=Ci(),o=new WeakSet;let a=!1;const l=s.app={_uid:fr++,_component:i,_props:r,_container:null,_context:s,_instance:null,version:Wr,get config(){return s.config},set config(c){},use(c,...u){return o.has(c)||(c&&X1(c.install)?(o.add(c),c.install(l,...u)):X1(c)&&(o.add(c),c(l,...u))),l},mixin(c){return s.mixins.includes(c)||s.mixins.push(c),l},component(c,u){return u?(s.components[c]=u,l):s.components[c]},directive(c,u){return u?(s.directives[c]=u,l):s.directives[c]},mount(c,u,h){if(!a){const f=m2(i,r);return f.appContext=s,h===!0?h="svg":h===!1&&(h=void 0),u&&e?e(f,c):n(f,c,h),a=!0,l._container=c,c.__vue_app__=l,h9(f.component)||f.component.proxy}},unmount(){a&&(n(null,l._container),delete l._container.__vue_app__)},provide(c,u){return s.provides[c]=u,l},runWithContext(c){k0=l;try{return c()}finally{k0=null}}};return l}}let k0=null;function pr(n,e){if(Fe){let t=Fe.provides;const i=Fe.parent&&Fe.parent.provides;i===t&&(t=Fe.provides=Object.create(i)),t[n]=e}}function B0(n,e,t=!1){const i=Fe||_t;if(i||k0){const r=i?i.parent==null?i.vnode.appContext&&i.vnode.appContext.provides:i.parent.provides:k0._context.provides;if(r&&n in r)return r[n];if(arguments.length>1)return t&&X1(e)?e.call(i&&i.proxy):e}}function mr(n,e,t,i=!1){const r={},s={};G0(s,c4,1),n.propsDefaults=Object.create(null),Pi(n,e,r,s);for(const o in n.propsOptions[0])o in r||(r[o]=void 0);t?n.props=i?r:T6(r):n.type.props?n.props=r:n.props=s,n.attrs=s}function gr(n,e,t,i){const{props:r,attrs:s,vnode:{patchFlag:o}}=n,a=ee(r),[l]=n.propsOptions;let c=!1;if((i||o>0)&&!(o&16)){if(o&8){const u=n.vnode.dynamicProps;for(let h=0;h<u.length;h++){let f=u[h];if(o4(n.emitsOptions,f))continue;const m=e[f];if(l)if(Z1(s,f))m!==s[f]&&(s[f]=m,c=!0);else{const g=r3(f);r[g]=bn(l,a,g,m,n,!1)}else m!==s[f]&&(s[f]=m,c=!0)}}}else{Pi(n,e,r,s)&&(c=!0);let u;for(const h in a)(!e||!Z1(e,h)&&((u=u3(h))===h||!Z1(e,u)))&&(l?t&&(t[h]!==void 0||t[u]!==void 0)&&(r[h]=bn(l,a,h,void 0,n,!0)):delete r[h]);if(s!==a)for(const h in s)(!e||!Z1(e,h))&&(delete s[h],c=!0)}c&&Ct(n,"set","$attrs")}function Pi(n,e,t,i){const[r,s]=n.propsOptions;let o=!1,a;if(e)for(let l in e){if(O0(l))continue;const c=e[l];let u;r&&Z1(r,u=r3(l))?!s||!s.includes(u)?t[u]=c:(a||(a={}))[u]=c:o4(n.emitsOptions,l)||(!(l in i)||c!==i[l])&&(i[l]=c,o=!0)}if(s){const l=ee(t),c=a||oe;for(let u=0;u<s.length;u++){const h=s[u];t[h]=bn(r,l,h,c[h],n,!Z1(c,h))}}return o}function bn(n,e,t,i,r,s){const o=n[t];if(o!=null){const a=Z1(o,"default");if(a&&i===void 0){const l=o.default;if(o.type!==Function&&!o.skipFactory&&X1(l)){const{propsDefaults:c}=r;if(t in c)i=c[t];else{const u=q3(r);i=c[t]=l.call(null,e),u()}}else i=l}o[0]&&(s&&!a?i=!1:o[1]&&(i===""||i===u3(t))&&(i=!0))}return i}function Li(n,e,t=!1){const i=e.propsCache,r=i.get(n);if(r)return r;const s=n.props,o={},a=[];let l=!1;if(!X1(n)){const u=h=>{l=!0;const[f,m]=Li(h,e,!0);be(o,f),m&&a.push(...m)};!t&&e.mixins.length&&e.mixins.forEach(u),n.extends&&u(n.extends),n.mixins&&n.mixins.forEach(u)}if(!s&&!l)return pe(n)&&i.set(n,Q2),Q2;if(G1(s))for(let u=0;u<s.length;u++){const h=r3(s[u]);Z9(h)&&(o[h]=oe)}else if(s)for(const u in s){const h=r3(u);if(Z9(h)){const f=s[u],m=o[h]=G1(f)||X1(f)?{type:f}:be({},f);if(m){const g=Q9(Boolean,m.type),v=Q9(String,m.type);m[0]=g>-1,m[1]=v<0||g<v,(g>-1||Z1(m,"default"))&&a.push(h)}}}const c=[o,a];return pe(n)&&i.set(n,c),c}function Z9(n){return n[0]!=="$"}function $9(n){const e=n&&n.toString().match(/^\s*(function|class) (\w+)/);return e?e[2]:n===null?"null":""}function J9(n,e){return $9(n)===$9(e)}function Q9(n,e){return G1(e)?e.findIndex(t=>J9(t,n)):X1(e)&&J9(e,n)?0:-1}const Di=n=>n[0]==="_"||n==="$stable",c9=n=>G1(n)?n.map(dt):[dt(n)],_r=(n,e,t)=>{if(e._n)return e;const i=F6((...r)=>c9(e(...r)),t);return i._c=!1,i},Ii=(n,e,t)=>{const i=n._ctx;for(const r in n){if(Di(r))continue;const s=n[r];if(X1(s))e[r]=_r(r,s,i);else if(s!=null){const o=c9(s);e[r]=()=>o}}},Ui=(n,e)=>{const t=c9(e);n.slots.default=()=>t},vr=(n,e)=>{if(n.vnode.shapeFlag&32){const t=e._;t?(n.slots=ee(e),G0(e,"_",t)):Ii(e,n.slots={})}else n.slots={},e&&Ui(n,e);G0(n.slots,c4,1)},xr=(n,e,t)=>{const{vnode:i,slots:r}=n;let s=!0,o=oe;if(i.shapeFlag&32){const a=e._;a?t&&a===1?s=!1:(be(r,e),!t&&a===1&&delete r._):(s=!e.$stable,Ii(e,r)),o=e}else e&&(Ui(n,e),o={default:1});if(s)for(const a in r)!Di(a)&&o[a]==null&&delete r[a]};function Tn(n,e,t,i,r=!1){if(G1(n)){n.forEach((f,m)=>Tn(f,e&&(G1(e)?e[m]:e),t,i,r));return}if(F0(i)&&!r)return;const s=i.shapeFlag&4?h9(i.component)||i.component.proxy:i.el,o=r?null:s,{i:a,r:l}=n,c=e&&e.r,u=a.refs===oe?a.refs={}:a.refs,h=a.setupState;if(c!=null&&c!==l&&(Te(c)?(u[c]=null,Z1(h,c)&&(h[c]=null)):Ye(c)&&(c.value=null)),X1(l))Yt(l,a,12,[o,u]);else{const f=Te(l),m=Ye(l);if(f||m){const g=()=>{if(n.f){const v=f?Z1(h,l)?h[l]:u[l]:l.value;r?G1(v)&&Yn(v,s):G1(v)?v.includes(s)||v.push(s):f?(u[l]=[s],Z1(h,l)&&(h[l]=u[l])):(l.value=[s],n.k&&(u[n.k]=l.value))}else f?(u[l]=o,Z1(h,l)&&(h[l]=o)):m&&(l.value=o,n.k&&(u[n.k]=o))};o?(g.id=-1,ze(g,t)):g()}}}const ze=k6;function yr(n){return Mr(n)}function Mr(n,e){const t=J5();t.__VUE__=!0;const{insert:i,remove:r,patchProp:s,createElement:o,createText:a,createComment:l,setText:c,setElementText:u,parentNode:h,nextSibling:f,setScopeId:m=et,insertStaticContent:g}=n,v=(M,S,U,I=null,V=null,W=null,x=void 0,_=null,C=!!S.dynamicChildren)=>{if(M===S)return;M&&!m3(M,S)&&(I=S1(M),h1(M,V,W,!0),M=null),S.patchFlag===-2&&(C=!1,S.dynamicChildren=null);const{type:F,ref:H,shapeFlag:k}=S;switch(F){case l4:p(M,S,U,I);break;case F3:d(M,S,U,I);break;case w4:M==null&&w(S,U,I,x);break;case wt:s1(M,S,U,I,V,W,x,_,C);break;default:k&1?B(M,S,U,I,V,W,x,_,C):k&6?f1(M,S,U,I,V,W,x,_,C):(k&64||k&128)&&F.process(M,S,U,I,V,W,x,_,C,w1)}H!=null&&V&&Tn(H,M&&M.ref,W,S||M,!S)},p=(M,S,U,I)=>{if(M==null)i(S.el=a(S.children),U,I);else{const V=S.el=M.el;S.children!==M.children&&c(V,S.children)}},d=(M,S,U,I)=>{M==null?i(S.el=l(S.children||""),U,I):S.el=M.el},w=(M,S,U,I)=>{[M.el,M.anchor]=g(M.children,S,U,I,M.el,M.anchor)},y=({el:M,anchor:S},U,I)=>{let V;for(;M&&M!==S;)V=f(M),i(M,U,I),M=V;i(S,U,I)},b=({el:M,anchor:S})=>{let U;for(;M&&M!==S;)U=f(M),r(M),M=U;r(S)},B=(M,S,U,I,V,W,x,_,C)=>{S.type==="svg"?x="svg":S.type==="math"&&(x="mathml"),M==null?R(S,U,I,V,W,x,_,C):T(M,S,V,W,x,_,C)},R=(M,S,U,I,V,W,x,_)=>{let C,F;const{props:H,shapeFlag:k,transition:r1,dirs:e1}=M;if(C=M.el=o(M.type,W,H&&H.is,H),k&8?u(C,M.children):k&16&&t1(M.children,C,null,I,V,A4(M,W),x,_),e1&&i2(M,null,I,"created"),L(C,M,M.scopeId,x,I),H){for(const x1 in H)x1!=="value"&&!O0(x1)&&s(C,x1,null,H[x1],W,M.children,I,V,b1);"value"in H&&s(C,"value",null,H.value,W),(F=H.onVnodeBeforeMount)&&ft(F,I,M)}e1&&i2(M,null,I,"beforeMount");const a1=Sr(V,r1);a1&&r1.beforeEnter(C),i(C,S,U),((F=H&&H.onVnodeMounted)||a1||e1)&&ze(()=>{F&&ft(F,I,M),a1&&r1.enter(C),e1&&i2(M,null,I,"mounted")},V)},L=(M,S,U,I,V)=>{if(U&&m(M,U),I)for(let W=0;W<I.length;W++)m(M,I[W]);if(V){let W=V.subTree;if(S===W){const x=V.vnode;L(M,x,x.scopeId,x.slotScopeIds,V.parent)}}},t1=(M,S,U,I,V,W,x,_,C=0)=>{for(let F=C;F<M.length;F++){const H=M[F]=_?Gt(M[F]):dt(M[F]);v(null,H,S,U,I,V,W,x,_)}},T=(M,S,U,I,V,W,x)=>{const _=S.el=M.el;let{patchFlag:C,dynamicChildren:F,dirs:H}=S;C|=M.patchFlag&16;const k=M.props||oe,r1=S.props||oe;let e1;if(U&&r2(U,!1),(e1=r1.onVnodeBeforeUpdate)&&ft(e1,U,S,M),H&&i2(S,M,U,"beforeUpdate"),U&&r2(U,!0),F?A(M.dynamicChildren,F,_,U,I,A4(S,V),W):x||Z(M,S,_,null,U,I,A4(S,V),W,!1),C>0){if(C&16)Y(_,S,k,r1,U,I,V);else if(C&2&&k.class!==r1.class&&s(_,"class",null,r1.class,V),C&4&&s(_,"style",k.style,r1.style,V),C&8){const a1=S.dynamicProps;for(let x1=0;x1<a1.length;x1++){const T1=a1[x1],n1=k[T1],L1=r1[T1];(L1!==n1||T1==="value")&&s(_,T1,n1,L1,V,M.children,U,I,b1)}}C&1&&M.children!==S.children&&u(_,S.children)}else!x&&F==null&&Y(_,S,k,r1,U,I,V);((e1=r1.onVnodeUpdated)||H)&&ze(()=>{e1&&ft(e1,U,S,M),H&&i2(S,M,U,"updated")},I)},A=(M,S,U,I,V,W,x)=>{for(let _=0;_<S.length;_++){const C=M[_],F=S[_],H=C.el&&(C.type===wt||!m3(C,F)||C.shapeFlag&70)?h(C.el):U;v(C,F,H,null,I,V,W,x,!0)}},Y=(M,S,U,I,V,W,x)=>{if(U!==I){if(U!==oe)for(const _ in U)!O0(_)&&!(_ in I)&&s(M,_,U[_],null,x,S.children,V,W,b1);for(const _ in I){if(O0(_))continue;const C=I[_],F=U[_];C!==F&&_!=="value"&&s(M,_,F,C,x,S.children,V,W,b1)}"value"in I&&s(M,"value",U.value,I.value,x)}},s1=(M,S,U,I,V,W,x,_,C)=>{const F=S.el=M?M.el:a(""),H=S.anchor=M?M.anchor:a("");let{patchFlag:k,dynamicChildren:r1,slotScopeIds:e1}=S;e1&&(_=_?_.concat(e1):e1),M==null?(i(F,U,I),i(H,U,I),t1(S.children||[],U,H,V,W,x,_,C)):k>0&&k&64&&r1&&M.dynamicChildren?(A(M.dynamicChildren,r1,U,V,W,x,_),(S.key!=null||V&&S===V.subTree)&&Ni(M,S,!0)):Z(M,S,U,H,V,W,x,_,C)},f1=(M,S,U,I,V,W,x,_,C)=>{S.slotScopeIds=_,M==null?S.shapeFlag&512?V.ctx.activate(S,U,I,x,C):z(S,U,I,V,W,x,C):X(M,S,C)},z=(M,S,U,I,V,W,x)=>{const _=M.component=Or(M,I,V);if(bi(M)&&(_.ctx.renderer=w1),Fr(_),_.asyncDep){if(V&&V.registerDep(_,q),!M.el){const C=_.subTree=m2(F3);d(null,C,S,U)}}else q(_,M,S,U,V,W,x)},X=(M,S,U)=>{const I=S.component=M.component;if(H6(M,S,U))if(I.asyncDep&&!I.asyncResolved){J(I,S,U);return}else I.next=S,I6(I.update),I.effect.dirty=!0,I.update();else S.el=M.el,I.vnode=S},q=(M,S,U,I,V,W,x)=>{const _=()=>{if(M.isMounted){let{next:H,bu:k,u:r1,parent:e1,vnode:a1}=M;{const P=Oi(M);if(P){H&&(H.el=a1.el,J(M,H,x)),P.asyncDep.then(()=>{M.isUnmounted||_()});return}}let x1=H,T1;r2(M,!1),H?(H.el=a1.el,J(M,H,x)):H=a1,k&&S4(k),(T1=H.props&&H.props.onVnodeBeforeUpdate)&&ft(T1,e1,H,a1),r2(M,!0);const n1=E4(M),L1=M.subTree;M.subTree=n1,v(L1,n1,h(L1.el),S1(L1),M,V,W),H.el=n1.el,x1===null&&G6(M,n1.el),r1&&ze(r1,V),(T1=H.props&&H.props.onVnodeUpdated)&&ze(()=>ft(T1,e1,H,a1),V)}else{let H;const{el:k,props:r1}=S,{bm:e1,m:a1,parent:x1}=M,T1=F0(S);if(r2(M,!1),e1&&S4(e1),!T1&&(H=r1&&r1.onVnodeBeforeMount)&&ft(H,x1,S),r2(M,!0),k&&D){const n1=()=>{M.subTree=E4(M),D(k,M.subTree,M,V,null)};T1?S.type.__asyncLoader().then(()=>!M.isUnmounted&&n1()):n1()}else{const n1=M.subTree=E4(M);v(null,n1,U,I,M,V,W),S.el=n1.el}if(a1&&ze(a1,V),!T1&&(H=r1&&r1.onVnodeMounted)){const n1=S;ze(()=>ft(H,x1,n1),V)}(S.shapeFlag&256||x1&&F0(x1.vnode)&&x1.vnode.shapeFlag&256)&&M.a&&ze(M.a,V),M.isMounted=!0,S=U=I=null}},C=M.effect=new $n(_,et,()=>a9(F),M.scope),F=M.update=()=>{C.dirty&&C.run()};F.id=M.uid,r2(M,!0),F()},J=(M,S,U)=>{S.component=M;const I=M.vnode.props;M.vnode=S,M.next=null,gr(M,S.props,I,U),xr(M,S.children,U),E2(),k9(M),b2()},Z=(M,S,U,I,V,W,x,_,C=!1)=>{const F=M&&M.children,H=M?M.shapeFlag:0,k=S.children,{patchFlag:r1,shapeFlag:e1}=S;if(r1>0){if(r1&128){o1(F,k,U,I,V,W,x,_,C);return}else if(r1&256){i1(F,k,U,I,V,W,x,_,C);return}}e1&8?(H&16&&b1(F,V,W),k!==F&&u(U,k)):H&16?e1&16?o1(F,k,U,I,V,W,x,_,C):b1(F,V,W,!0):(H&8&&u(U,""),e1&16&&t1(k,U,I,V,W,x,_,C))},i1=(M,S,U,I,V,W,x,_,C)=>{M=M||Q2,S=S||Q2;const F=M.length,H=S.length,k=Math.min(F,H);let r1;for(r1=0;r1<k;r1++){const e1=S[r1]=C?Gt(S[r1]):dt(S[r1]);v(M[r1],e1,U,null,V,W,x,_,C)}F>H?b1(M,V,W,!0,!1,k):t1(S,U,I,V,W,x,_,C,k)},o1=(M,S,U,I,V,W,x,_,C)=>{let F=0;const H=S.length;let k=M.length-1,r1=H-1;for(;F<=k&&F<=r1;){const e1=M[F],a1=S[F]=C?Gt(S[F]):dt(S[F]);if(m3(e1,a1))v(e1,a1,U,null,V,W,x,_,C);else break;F++}for(;F<=k&&F<=r1;){const e1=M[k],a1=S[r1]=C?Gt(S[r1]):dt(S[r1]);if(m3(e1,a1))v(e1,a1,U,null,V,W,x,_,C);else break;k--,r1--}if(F>k){if(F<=r1){const e1=r1+1,a1=e1<H?S[e1].el:I;for(;F<=r1;)v(null,S[F]=C?Gt(S[F]):dt(S[F]),U,a1,V,W,x,_,C),F++}}else if(F>r1)for(;F<=k;)h1(M[F],V,W,!0),F++;else{const e1=F,a1=F,x1=new Map;for(F=a1;F<=r1;F++){const E1=S[F]=C?Gt(S[F]):dt(S[F]);E1.key!=null&&x1.set(E1.key,F)}let T1,n1=0;const L1=r1-a1+1;let P=!1,l1=0;const m1=new Array(L1);for(F=0;F<L1;F++)m1[F]=0;for(F=e1;F<=k;F++){const E1=M[F];if(n1>=L1){h1(E1,V,W,!0);continue}let U1;if(E1.key!=null)U1=x1.get(E1.key);else for(T1=a1;T1<=r1;T1++)if(m1[T1-a1]===0&&m3(E1,S[T1])){U1=T1;break}U1===void 0?h1(E1,V,W,!0):(m1[U1-a1]=F+1,U1>=l1?l1=U1:P=!0,v(E1,S[U1],U,null,V,W,x,_,C),n1++)}const d1=P?Er(m1):Q2;for(T1=d1.length-1,F=L1-1;F>=0;F--){const E1=a1+F,U1=S[E1],q1=E1+1<H?S[E1+1].el:I;m1[F]===0?v(null,U1,U,q1,V,W,x,_,C):P&&(T1<0||F!==d1[T1]?u1(U1,U,q1,2):T1--)}}},u1=(M,S,U,I,V=null)=>{const{el:W,type:x,transition:_,children:C,shapeFlag:F}=M;if(F&6){u1(M.component.subTree,S,U,I);return}if(F&128){M.suspense.move(S,U,I);return}if(F&64){x.move(M,S,U,w1);return}if(x===wt){i(W,S,U);for(let k=0;k<C.length;k++)u1(C[k],S,U,I);i(M.anchor,S,U);return}if(x===w4){y(M,S,U);return}if(I!==2&&F&1&&_)if(I===0)_.beforeEnter(W),i(W,S,U),ze(()=>_.enter(W),V);else{const{leave:k,delayLeave:r1,afterLeave:e1}=_,a1=()=>i(W,S,U),x1=()=>{k(W,()=>{a1(),e1&&e1()})};r1?r1(W,a1,x1):x1()}else i(W,S,U)},h1=(M,S,U,I=!1,V=!1)=>{const{type:W,props:x,ref:_,children:C,dynamicChildren:F,shapeFlag:H,patchFlag:k,dirs:r1}=M;if(_!=null&&Tn(_,null,U,M,!0),H&256){S.ctx.deactivate(M);return}const e1=H&1&&r1,a1=!F0(M);let x1;if(a1&&(x1=x&&x.onVnodeBeforeUnmount)&&ft(x1,S,M),H&6)M1(M.component,U,I);else{if(H&128){M.suspense.unmount(U,I);return}e1&&i2(M,null,S,"beforeUnmount"),H&64?M.type.remove(M,S,U,V,w1,I):F&&(W!==wt||k>0&&k&64)?b1(F,S,U,!1,!0):(W===wt&&k&384||!V&&H&16)&&b1(C,S,U),I&&Q(M)}(a1&&(x1=x&&x.onVnodeUnmounted)||e1)&&ze(()=>{x1&&ft(x1,S,M),e1&&i2(M,null,S,"unmounted")},U)},Q=M=>{const{type:S,el:U,anchor:I,transition:V}=M;if(S===wt){c1(U,I);return}if(S===w4){b(M);return}const W=()=>{r(U),V&&!V.persisted&&V.afterLeave&&V.afterLeave()};if(M.shapeFlag&1&&V&&!V.persisted){const{leave:x,delayLeave:_}=V,C=()=>x(U,W);_?_(M.el,W,C):C()}else W()},c1=(M,S)=>{let U;for(;M!==S;)U=f(M),r(M),M=U;r(S)},M1=(M,S,U)=>{const{bum:I,scope:V,update:W,subTree:x,um:_}=M;I&&S4(I),V.stop(),W&&(W.active=!1,h1(x,M,S,U)),_&&ze(_,S),ze(()=>{M.isUnmounted=!0},S),S&&S.pendingBranch&&!S.isUnmounted&&M.asyncDep&&!M.asyncResolved&&M.suspenseId===S.pendingId&&(S.deps--,S.deps===0&&S.resolve())},b1=(M,S,U,I=!1,V=!1,W=0)=>{for(let x=W;x<M.length;x++)h1(M[x],S,U,I,V)},S1=M=>M.shapeFlag&6?S1(M.component.subTree):M.shapeFlag&128?M.suspense.next():f(M.anchor||M.el);let P1=!1;const N1=(M,S,U)=>{M==null?S._vnode&&h1(S._vnode,null,null,!0):v(S._vnode||null,M,S,null,null,null,U),P1||(P1=!0,k9(),vi(),P1=!1),S._vnode=M},w1={p:v,um:h1,m:u1,r:Q,mt:z,mc:t1,pc:Z,pbc:A,n:S1,o:n};let I1,D;return e&&([I1,D]=e(w1)),{render:N1,hydrate:I1,createApp:dr(N1,I1)}}function A4({type:n,props:e},t){return t==="svg"&&n==="foreignObject"||t==="mathml"&&n==="annotation-xml"&&e&&e.encoding&&e.encoding.includes("html")?void 0:t}function r2({effect:n,update:e},t){n.allowRecurse=e.allowRecurse=t}function Sr(n,e){return(!n||n&&!n.pendingBranch)&&e&&!e.persisted}function Ni(n,e,t=!1){const i=n.children,r=e.children;if(G1(i)&&G1(r))for(let s=0;s<i.length;s++){const o=i[s];let a=r[s];a.shapeFlag&1&&!a.dynamicChildren&&((a.patchFlag<=0||a.patchFlag===32)&&(a=r[s]=Gt(r[s]),a.el=o.el),t||Ni(o,a)),a.type===l4&&(a.el=o.el)}}function Er(n){const e=n.slice(),t=[0];let i,r,s,o,a;const l=n.length;for(i=0;i<l;i++){const c=n[i];if(c!==0){if(r=t[t.length-1],n[r]<c){e[i]=r,t.push(i);continue}for(s=0,o=t.length-1;s<o;)a=s+o>>1,n[t[a]]<c?s=a+1:o=a;c<n[t[s]]&&(s>0&&(e[i]=t[s-1]),t[s]=i)}}for(s=t.length,o=t[s-1];s-- >0;)t[s]=o,o=e[o];return t}function Oi(n){const e=n.subTree.component;if(e)return e.asyncDep&&!e.asyncResolved?e:Oi(e)}const br=n=>n.__isTeleport,wt=Symbol.for("v-fgt"),l4=Symbol.for("v-txt"),F3=Symbol.for("v-cmt"),w4=Symbol.for("v-stc"),A3=[];let ct=null;function Tr(n=!1){A3.push(ct=n?null:[])}function Ar(){A3.pop(),ct=A3[A3.length-1]||null}let B3=1;function e8(n){B3+=n}function wr(n){return n.dynamicChildren=B3>0?ct||Q2:null,Ar(),B3>0&&ct&&ct.push(n),n}function Rr(n,e,t,i,r,s){return wr(Bi(n,e,t,i,r,s,!0))}function Cr(n){return n?n.__v_isVNode===!0:!1}function m3(n,e){return n.type===e.type&&n.key===e.key}const c4="__vInternal",Fi=({key:n})=>n??null,z0=({ref:n,ref_key:e,ref_for:t})=>(typeof n=="number"&&(n=""+n),n!=null?Te(n)||Ye(n)||X1(n)?{i:_t,r:n,k:e,f:!!t}:n:null);function Bi(n,e=null,t=null,i=0,r=null,s=n===wt?0:1,o=!1,a=!1){const l={__v_isVNode:!0,__v_skip:!0,type:n,props:e,key:e&&Fi(e),ref:e&&z0(e),scopeId:Mi,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:s,patchFlag:i,dynamicProps:r,dynamicChildren:null,appContext:null,ctx:_t};return a?(u9(l,t),s&128&&n.normalize(l)):t&&(l.shapeFlag|=Te(t)?8:16),B3>0&&!o&&ct&&(l.patchFlag>0||s&6)&&l.patchFlag!==32&&ct.push(l),l}const m2=Pr;function Pr(n,e=null,t=null,i=0,r=null,s=!1){if((!n||n===V6)&&(n=F3),Cr(n)){const a=s3(n,e,!0);return t&&u9(a,t),B3>0&&!s&&ct&&(a.shapeFlag&6?ct[ct.indexOf(n)]=a:ct.push(a)),a.patchFlag|=-2,a}if(Gr(n)&&(n=n.__vccOpts),e){e=Lr(e);let{class:a,style:l}=e;a&&!Te(a)&&(e.class=Zn(a)),pe(l)&&(fi(l)&&!G1(l)&&(l=be({},l)),e.style=Kn(l))}const o=Te(n)?1:W6(n)?128:br(n)?64:pe(n)?4:X1(n)?2:0;return Bi(n,e,t,i,r,o,s,!0)}function Lr(n){return n?fi(n)||c4 in n?be({},n):n:null}function s3(n,e,t=!1){const{props:i,ref:r,patchFlag:s,children:o}=n,a=e?Ir(i||{},e):i;return{__v_isVNode:!0,__v_skip:!0,type:n.type,props:a,key:a&&Fi(a),ref:e&&e.ref?t&&r?G1(r)?r.concat(z0(e)):[r,z0(e)]:z0(e):r,scopeId:n.scopeId,slotScopeIds:n.slotScopeIds,children:o,target:n.target,targetAnchor:n.targetAnchor,staticCount:n.staticCount,shapeFlag:n.shapeFlag,patchFlag:e&&n.type!==wt?s===-1?16:s|16:s,dynamicProps:n.dynamicProps,dynamicChildren:n.dynamicChildren,appContext:n.appContext,dirs:n.dirs,transition:n.transition,component:n.component,suspense:n.suspense,ssContent:n.ssContent&&s3(n.ssContent),ssFallback:n.ssFallback&&s3(n.ssFallback),el:n.el,anchor:n.anchor,ctx:n.ctx,ce:n.ce}}function Dr(n=" ",e=0){return m2(l4,null,n,e)}function dt(n){return n==null||typeof n=="boolean"?m2(F3):G1(n)?m2(wt,null,n.slice()):typeof n=="object"?Gt(n):m2(l4,null,String(n))}function Gt(n){return n.el===null&&n.patchFlag!==-1||n.memo?n:s3(n)}function u9(n,e){let t=0;const{shapeFlag:i}=n;if(e==null)e=null;else if(G1(e))t=16;else if(typeof e=="object")if(i&65){const r=e.default;r&&(r._c&&(r._d=!1),u9(n,r()),r._c&&(r._d=!0));return}else{t=32;const r=e._;!r&&!(c4 in e)?e._ctx=_t:r===3&&_t&&(_t.slots._===1?e._=1:(e._=2,n.patchFlag|=1024))}else X1(e)?(e={default:e,_ctx:_t},t=32):(e=String(e),i&64?(t=16,e=[Dr(e)]):t=8);n.children=e,n.shapeFlag|=t}function Ir(...n){const e={};for(let t=0;t<n.length;t++){const i=n[t];for(const r in i)if(r==="class")e.class!==i.class&&(e.class=Zn([e.class,i.class]));else if(r==="style")e.style=Kn([e.style,i.style]);else if(e4(r)){const s=e[r],o=i[r];o&&s!==o&&!(G1(s)&&s.includes(o))&&(e[r]=s?[].concat(s,o):o)}else r!==""&&(e[r]=i[r])}return e}function ft(n,e,t,i=null){ut(n,e,7,[t,i])}const Ur=Ci();let Nr=0;function Or(n,e,t){const i=n.type,r=(e?e.appContext:n.appContext)||Ur,s={uid:Nr++,vnode:n,type:i,parent:e,appContext:r,root:null,next:null,subTree:null,effect:null,update:null,scope:new i6(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(r.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Li(i,r),emitsOptions:yi(i,r),emit:null,emitted:null,propsDefaults:oe,inheritAttrs:i.inheritAttrs,ctx:oe,data:oe,props:oe,attrs:oe,slots:oe,refs:oe,setupState:oe,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return s.ctx={_:s},s.root=e?e.root:s,s.emit=O6.bind(null,s),n.ce&&n.ce(s),s}let Fe=null,X0,An;{const n=J5(),e=(t,i)=>{let r;return(r=n[t])||(r=n[t]=[]),r.push(i),s=>{r.length>1?r.forEach(o=>o(s)):r[0](s)}};X0=e("__VUE_INSTANCE_SETTERS__",t=>Fe=t),An=e("__VUE_SSR_SETTERS__",t=>u4=t)}const q3=n=>{const e=Fe;return X0(n),n.scope.on(),()=>{n.scope.off(),X0(e)}},t8=()=>{Fe&&Fe.scope.off(),X0(null)};function zi(n){return n.vnode.shapeFlag&4}let u4=!1;function Fr(n,e=!1){e&&An(e);const{props:t,children:i}=n.vnode,r=zi(n);mr(n,t,r,e),vr(n,i);const s=r?Br(n,e):void 0;return e&&An(!1),s}function Br(n,e){const t=n.type;n.accessCache=Object.create(null),n.proxy=di(new Proxy(n.ctx,or));const{setup:i}=t;if(i){const r=n.setupContext=i.length>1?Hr(n):null,s=q3(n);E2();const o=Yt(i,n,0,[n.props,r]);if(b2(),s(),Z5(o)){if(o.then(t8,t8),e)return o.then(a=>{n8(n,a,e)}).catch(a=>{s4(a,n,0)});n.asyncDep=o}else n8(n,o,e)}else Hi(n,e)}function n8(n,e,t){X1(e)?n.type.__ssrInlineRender?n.ssrRender=e:n.render=e:pe(e)&&(n.setupState=mi(e)),Hi(n,t)}let i8;function Hi(n,e,t){const i=n.type;if(!n.render){if(!e&&i8&&!i.render){const r=i.template||l9(n).template;if(r){const{isCustomElement:s,compilerOptions:o}=n.appContext.config,{delimiters:a,compilerOptions:l}=i,c=be(be({isCustomElement:s,delimiters:a},o),l);i.render=i8(r,c)}}n.render=i.render||et}{const r=q3(n);E2();try{ar(n)}finally{b2(),r()}}}function zr(n){return n.attrsProxy||(n.attrsProxy=new Proxy(n.attrs,{get(e,t){return Ve(n,"get","$attrs"),e[t]}}))}function Hr(n){const e=t=>{n.exposed=t||{}};return{get attrs(){return zr(n)},slots:n.slots,emit:n.emit,expose:e}}function h9(n){if(n.exposed)return n.exposeProxy||(n.exposeProxy=new Proxy(mi(di(n.exposed)),{get(e,t){if(t in e)return e[t];if(t in T3)return T3[t](n)},has(e,t){return t in e||t in T3}}))}function Gr(n){return X1(n)&&"__vccOpts"in n}const Vr=(n,e)=>A6(n,e,u4),Wr="3.4.14";/**
* @vue/runtime-dom v3.4.14
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const kr="http://www.w3.org/2000/svg",Xr="http://www.w3.org/1998/Math/MathML",Vt=typeof document<"u"?document:null,r8=Vt&&Vt.createElement("template"),qr={insert:(n,e,t)=>{e.insertBefore(n,t||null)},remove:n=>{const e=n.parentNode;e&&e.removeChild(n)},createElement:(n,e,t,i)=>{const r=e==="svg"?Vt.createElementNS(kr,n):e==="mathml"?Vt.createElementNS(Xr,n):Vt.createElement(n,t?{is:t}:void 0);return n==="select"&&i&&i.multiple!=null&&r.setAttribute("multiple",i.multiple),r},createText:n=>Vt.createTextNode(n),createComment:n=>Vt.createComment(n),setText:(n,e)=>{n.nodeValue=e},setElementText:(n,e)=>{n.textContent=e},parentNode:n=>n.parentNode,nextSibling:n=>n.nextSibling,querySelector:n=>Vt.querySelector(n),setScopeId(n,e){n.setAttribute(e,"")},insertStaticContent(n,e,t,i,r,s){const o=t?t.previousSibling:e.lastChild;if(r&&(r===s||r.nextSibling))for(;e.insertBefore(r.cloneNode(!0),t),!(r===s||!(r=r.nextSibling)););else{r8.innerHTML=i==="svg"?`<svg>${n}</svg>`:i==="mathml"?`<math>${n}</math>`:n;const a=r8.content;if(i==="svg"||i==="mathml"){const l=a.firstChild;for(;l.firstChild;)a.appendChild(l.firstChild);a.removeChild(l)}e.insertBefore(a,t)}return[o?o.nextSibling:e.firstChild,t?t.previousSibling:e.lastChild]}},Yr=Symbol("_vtc");function jr(n,e,t){const i=n[Yr];i&&(e=(e?[e,...i]:[...i]).join(" ")),e==null?n.removeAttribute("class"):t?n.setAttribute("class",e):n.className=e}const Kr=Symbol("_vod"),Zr=Symbol("");function $r(n,e,t){const i=n.style,r=i.display,s=Te(t);if(t&&!s){if(e&&!Te(e))for(const o in e)t[o]==null&&wn(i,o,"");for(const o in t)wn(i,o,t[o])}else if(s){if(e!==t){const o=i[Zr];o&&(t+=";"+o),i.cssText=t}}else e&&n.removeAttribute("style");Kr in n&&(i.display=r)}const s8=/\s*!important$/;function wn(n,e,t){if(G1(t))t.forEach(i=>wn(n,e,i));else if(t==null&&(t=""),e.startsWith("--"))n.setProperty(e,t);else{const i=Jr(n,e);s8.test(t)?n.setProperty(u3(i),t.replace(s8,""),"important"):n[i]=t}}const o8=["Webkit","Moz","ms"],R4={};function Jr(n,e){const t=R4[e];if(t)return t;let i=r3(e);if(i!=="filter"&&i in n)return R4[e]=i;i=$5(i);for(let r=0;r<o8.length;r++){const s=o8[r]+i;if(s in n)return R4[e]=s}return e}const a8="http://www.w3.org/1999/xlink";function Qr(n,e,t,i,r){if(i&&e.startsWith("xlink:"))t==null?n.removeAttributeNS(a8,e.slice(6,e.length)):n.setAttributeNS(a8,e,t);else{const s=n6(e);t==null||s&&!Q5(t)?n.removeAttribute(e):n.setAttribute(e,s?"":t)}}function es(n,e,t,i,r,s,o){if(e==="innerHTML"||e==="textContent"){i&&o(i,r,s),n[e]=t??"";return}const a=n.tagName;if(e==="value"&&a!=="PROGRESS"&&!a.includes("-")){n._value=t;const c=a==="OPTION"?n.getAttribute("value"):n.value,u=t??"";c!==u&&(n.value=u),t==null&&n.removeAttribute(e);return}let l=!1;if(t===""||t==null){const c=typeof n[e];c==="boolean"?t=Q5(t):t==null&&c==="string"?(t="",l=!0):c==="number"&&(t=0,l=!0)}try{n[e]=t}catch{}l&&n.removeAttribute(e)}function ts(n,e,t,i){n.addEventListener(e,t,i)}function ns(n,e,t,i){n.removeEventListener(e,t,i)}const l8=Symbol("_vei");function is(n,e,t,i,r=null){const s=n[l8]||(n[l8]={}),o=s[e];if(i&&o)o.value=i;else{const[a,l]=rs(e);if(i){const c=s[e]=as(i,r);ts(n,a,c,l)}else o&&(ns(n,a,o,l),s[e]=void 0)}}const c8=/(?:Once|Passive|Capture)$/;function rs(n){let e;if(c8.test(n)){e={};let i;for(;i=n.match(c8);)n=n.slice(0,n.length-i[0].length),e[i[0].toLowerCase()]=!0}return[n[2]===":"?n.slice(3):u3(n.slice(2)),e]}let C4=0;const ss=Promise.resolve(),os=()=>C4||(ss.then(()=>C4=0),C4=Date.now());function as(n,e){const t=i=>{if(!i._vts)i._vts=Date.now();else if(i._vts<=t.attached)return;ut(ls(i,t.value),e,5,[i])};return t.value=n,t.attached=os(),t}function ls(n,e){if(G1(e)){const t=n.stopImmediatePropagation;return n.stopImmediatePropagation=()=>{t.call(n),n._stopped=!0},e.map(i=>r=>!r._stopped&&i&&i(r))}else return e}const u8=n=>n.charCodeAt(0)===111&&n.charCodeAt(1)===110&&n.charCodeAt(2)>96&&n.charCodeAt(2)<123,cs=(n,e,t,i,r,s,o,a,l)=>{const c=r==="svg";e==="class"?jr(n,i,c):e==="style"?$r(n,t,i):e4(e)?qn(e)||is(n,e,t,i,o):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):us(n,e,i,c))?es(n,e,i,s,o,a,l):(e==="true-value"?n._trueValue=i:e==="false-value"&&(n._falseValue=i),Qr(n,e,i,c))};function us(n,e,t,i){if(i)return!!(e==="innerHTML"||e==="textContent"||e in n&&u8(e)&&X1(t));if(e==="spellcheck"||e==="draggable"||e==="translate"||e==="form"||e==="list"&&n.tagName==="INPUT"||e==="type"&&n.tagName==="TEXTAREA")return!1;if(e==="width"||e==="height"){const r=n.tagName;if(r==="IMG"||r==="VIDEO"||r==="CANVAS"||r==="SOURCE")return!1}return u8(e)&&Te(t)?!1:e in n}const hs=be({patchProp:cs},qr);let h8;function fs(){return h8||(h8=yr(hs))}const ds=(...n)=>{const e=fs().createApp(...n),{mount:t}=e;return e.mount=i=>{const r=ms(i);if(!r)return;const s=e._component;!X1(s)&&!s.render&&!s.template&&(s.template=r.innerHTML),r.innerHTML="";const o=t(r,!1,ps(r));return r instanceof Element&&(r.removeAttribute("v-cloak"),r.setAttribute("data-v-app","")),o},e};function ps(n){if(n instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&n instanceof MathMLElement)return"mathml"}function ms(n){return Te(n)?document.querySelector(n):n}function gs(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}Date.now===void 0&&(Date.now=function(){return new Date().valueOf()});var Pe=Pe||function(){var n=[];return{REVISION:"8",getAll:function(){return n},removeAll:function(){n=[]},add:function(e){n.push(e)},remove:function(e){var t=n.indexOf(e);t!==-1&&n.splice(t,1)},update:function(e){if(n.length===0)return!1;var t=0,i=n.length;for(e=e!==void 0?e:Date.now();t<i;)n[t].update(e)?t++:(n.splice(t,1),i--);return!0}}}();Pe.Tween=function(n){var e=n,t={},i={},r=1e3,s=0,o=null,a=Pe.Easing.Linear.None,l=Pe.Interpolation.Linear,c=[],u=null,h=!1,f=null,m=null;this.to=function(g,v){return v!==void 0&&(r=v),i=g,this},this.start=function(g){Pe.add(this),h=!1,o=g!==void 0?g:Date.now(),o+=s;for(var v in i)if(!(e[v]===null||!(v in e))){if(i[v]instanceof Array){if(i[v].length===0)continue;i[v]=[e[v]].concat(i[v])}t[v]=e[v]}return this},this.stop=function(){return Pe.remove(this),this},this.delay=function(g){return s=g,this},this.easing=function(g){return a=g,this},this.interpolation=function(g){return l=g,this},this.chain=function(){return c=arguments,this},this.onStart=function(g){return u=g,this},this.onUpdate=function(g){return f=g,this},this.onComplete=function(g){return m=g,this},this.update=function(g){if(g<o)return!0;h===!1&&(u!==null&&u.call(e),h=!0);var v=(g-o)/r;v=v>1?1:v;var p=a(v);for(var d in t){var w=t[d],y=i[d];y instanceof Array?e[d]=l(y,p):e[d]=w+(y-w)*p}if(f!==null&&f.call(e,p),v==1){m!==null&&m.call(e);for(var b=0,B=c.length;b<B;b++)c[b].start(g);return!1}return!0}};Pe.Easing={Linear:{None:function(n){return n}},Quadratic:{In:function(n){return n*n},Out:function(n){return n*(2-n)},InOut:function(n){return(n*=2)<1?.5*n*n:-.5*(--n*(n-2)-1)}},Cubic:{In:function(n){return n*n*n},Out:function(n){return--n*n*n+1},InOut:function(n){return(n*=2)<1?.5*n*n*n:.5*((n-=2)*n*n+2)}},Quartic:{In:function(n){return n*n*n*n},Out:function(n){return 1- --n*n*n*n},InOut:function(n){return(n*=2)<1?.5*n*n*n*n:-.5*((n-=2)*n*n*n-2)}},Quintic:{In:function(n){return n*n*n*n*n},Out:function(n){return--n*n*n*n*n+1},InOut:function(n){return(n*=2)<1?.5*n*n*n*n*n:.5*((n-=2)*n*n*n*n+2)}},Sinusoidal:{In:function(n){return 1-Math.cos(n*Math.PI/2)},Out:function(n){return Math.sin(n*Math.PI/2)},InOut:function(n){return .5*(1-Math.cos(Math.PI*n))}},Exponential:{In:function(n){return n===0?0:Math.pow(1024,n-1)},Out:function(n){return n===1?1:1-Math.pow(2,-10*n)},InOut:function(n){return n===0?0:n===1?1:(n*=2)<1?.5*Math.pow(1024,n-1):.5*(-Math.pow(2,-10*(n-1))+2)}},Circular:{In:function(n){return 1-Math.sqrt(1-n*n)},Out:function(n){return Math.sqrt(1- --n*n)},InOut:function(n){return(n*=2)<1?-.5*(Math.sqrt(1-n*n)-1):.5*(Math.sqrt(1-(n-=2)*n)+1)}},Elastic:{In:function(n){var e,t=.1,i=.4;return n===0?0:n===1?1:(!t||t<1?(t=1,e=i/4):e=i*Math.asin(1/t)/(2*Math.PI),-(t*Math.pow(2,10*(n-=1))*Math.sin((n-e)*(2*Math.PI)/i)))},Out:function(n){var e,t=.1,i=.4;return n===0?0:n===1?1:(!t||t<1?(t=1,e=i/4):e=i*Math.asin(1/t)/(2*Math.PI),t*Math.pow(2,-10*n)*Math.sin((n-e)*(2*Math.PI)/i)+1)},InOut:function(n){var e,t=.1,i=.4;return n===0?0:n===1?1:(!t||t<1?(t=1,e=i/4):e=i*Math.asin(1/t)/(2*Math.PI),(n*=2)<1?-.5*(t*Math.pow(2,10*(n-=1))*Math.sin((n-e)*(2*Math.PI)/i)):t*Math.pow(2,-10*(n-=1))*Math.sin((n-e)*(2*Math.PI)/i)*.5+1)}},Back:{In:function(n){var e=1.70158;return n*n*((e+1)*n-e)},Out:function(n){var e=1.70158;return--n*n*((e+1)*n+e)+1},InOut:function(n){var e=2.5949095;return(n*=2)<1?.5*(n*n*((e+1)*n-e)):.5*((n-=2)*n*((e+1)*n+e)+2)}},Bounce:{In:function(n){return 1-Pe.Easing.Bounce.Out(1-n)},Out:function(n){return n<1/2.75?7.5625*n*n:n<2/2.75?7.5625*(n-=1.5/2.75)*n+.75:n<2.5/2.75?7.5625*(n-=2.25/2.75)*n+.9375:7.5625*(n-=2.625/2.75)*n+.984375},InOut:function(n){return n<.5?Pe.Easing.Bounce.In(n*2)*.5:Pe.Easing.Bounce.Out(n*2-1)*.5+.5}}};Pe.Interpolation={Linear:function(n,e){var t=n.length-1,i=t*e,r=Math.floor(i),s=Pe.Interpolation.Utils.Linear;return e<0?s(n[0],n[1],i):e>1?s(n[t],n[t-1],t-i):s(n[r],n[r+1>t?t:r+1],i-r)},Bezier:function(n,e){var t=0,i=n.length-1,r=Math.pow,s=Pe.Interpolation.Utils.Bernstein,o;for(o=0;o<=i;o++)t+=r(1-e,i-o)*r(e,o)*n[o]*s(i,o);return t},CatmullRom:function(n,e){var t=n.length-1,i=t*e,r=Math.floor(i),s=Pe.Interpolation.Utils.CatmullRom;return n[0]===n[t]?(e<0&&(r=Math.floor(i=t*(1+e))),s(n[(r-1+t)%t],n[r],n[(r+1)%t],n[(r+2)%t],i-r)):e<0?n[0]-(s(n[0],n[0],n[1],n[1],-i)-n[0]):e>1?n[t]-(s(n[t],n[t],n[t-1],n[t-1],i-t)-n[t]):s(n[r?r-1:0],n[r],n[t<r+1?t:r+1],n[t<r+2?t:r+2],i-r)},Utils:{Linear:function(n,e,t){return(e-n)*t+n},Bernstein:function(n,e){var t=Pe.Interpolation.Utils.Factorial;return t(n)/t(e)/t(n-e)},Factorial:function(){var n=[1];return function(e){var t=1,i;if(n[e])return n[e];for(i=e;i>1;i--)t*=i;return n[e]=t}}(),CatmullRom:function(n,e,t,i,r){var s=(t-n)*.5,o=(i-e)*.5,a=r*r,l=r*a;return(2*e-2*t+s+o)*l+(-3*e+3*t-2*s-o)*a+s*r+e}}};var Rn=Pe;const P4=gs(Rn);var w3=function(){var n=0,e=document.createElement("div");e.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",e.addEventListener("click",function(u){u.preventDefault(),i(++n%e.children.length)},!1);function t(u){return e.appendChild(u.dom),u}function i(u){for(var h=0;h<e.children.length;h++)e.children[h].style.display=h===u?"block":"none";n=u}var r=(performance||Date).now(),s=r,o=0,a=t(new w3.Panel("FPS","#0ff","#002")),l=t(new w3.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var c=t(new w3.Panel("MB","#f08","#201"));return i(0),{REVISION:16,dom:e,addPanel:t,showPanel:i,begin:function(){r=(performance||Date).now()},end:function(){o++;var u=(performance||Date).now();if(l.update(u-r,200),u>=s+1e3&&(a.update(o*1e3/(u-s),100),s=u,o=0,c)){var h=performance.memory;c.update(h.usedJSHeapSize/1048576,h.jsHeapSizeLimit/1048576)}return u},update:function(){r=this.end()},domElement:e,setMode:i}};w3.Panel=function(n,e,t){var i=1/0,r=0,s=Math.round,o=s(window.devicePixelRatio||1),a=80*o,l=48*o,c=3*o,u=2*o,h=3*o,f=15*o,m=74*o,g=30*o,v=document.createElement("canvas");v.width=a,v.height=l,v.style.cssText="width:80px;height:48px";var p=v.getContext("2d");return p.font="bold "+9*o+"px Helvetica,Arial,sans-serif",p.textBaseline="top",p.fillStyle=t,p.fillRect(0,0,a,l),p.fillStyle=e,p.fillText(n,c,u),p.fillRect(h,f,m,g),p.fillStyle=t,p.globalAlpha=.9,p.fillRect(h,f,m,g),{dom:v,update:function(d,w){i=Math.min(i,d),r=Math.max(r,d),p.fillStyle=t,p.globalAlpha=1,p.fillRect(0,0,a,f),p.fillStyle=e,p.fillText(s(d)+" "+n+" ("+s(i)+"-"+s(r)+")",c,u),p.drawImage(v,h+o,f,m-o,g,h,f,m-o,g),p.fillRect(h+m-o,f,o,g),p.fillStyle=t,p.globalAlpha=.9,p.fillRect(h+m-o,f,o,s((1-d/w)*g))}}};/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const f9="160",w2={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},R2={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},_s=0,f8=1,vs=2,d9=1,xs=2,At=3,$t=0,He=1,ot=2,jt=0,n3=1,q0=2,d8=3,p8=4,ys=5,h2=100,Ms=101,Ss=102,m8=103,g8=104,Es=200,bs=201,Ts=202,As=203,Cn=204,Pn=205,ws=206,Rs=207,Cs=208,Ps=209,Ls=210,Ds=211,Is=212,Us=213,Ns=214,Os=0,Fs=1,Bs=2,Y0=3,zs=4,Hs=5,Gs=6,Vs=7,Gi=0,Ws=1,ks=2,Kt=0,Xs=1,qs=2,Ys=3,js=4,Ks=5,Zs=6,Vi=300,o3=301,a3=302,Ln=303,Dn=304,h4=306,In=1e3,at=1001,Un=1002,Oe=1003,_8=1004,L4=1005,Ze=1006,$s=1007,z3=1008,Zt=1009,Js=1010,Qs=1011,p9=1012,Wi=1013,kt=1014,Xt=1015,H3=1016,ki=1017,Xi=1018,g2=1020,eo=1021,lt=1023,to=1024,no=1025,_2=1026,l3=1027,io=1028,qi=1029,ro=1030,Yi=1031,ji=1033,D4=33776,I4=33777,U4=33778,N4=33779,v8=35840,x8=35841,y8=35842,M8=35843,Ki=36196,S8=37492,E8=37496,b8=37808,T8=37809,A8=37810,w8=37811,R8=37812,C8=37813,P8=37814,L8=37815,D8=37816,I8=37817,U8=37818,N8=37819,O8=37820,F8=37821,O4=36492,B8=36494,z8=36495,so=36283,H8=36284,G8=36285,V8=36286,Zi=3e3,v2=3001,oo=3200,ao=3201,$i=0,lo=1,Qe="",Ee="srgb",Pt="srgb-linear",m9="display-p3",f4="display-p3-linear",j0="linear",se="srgb",K0="rec709",Z0="p3",C2=7680,W8=519,co=512,uo=513,ho=514,Ji=515,fo=516,po=517,mo=518,go=519,Nn=35044,_o=35048,k8="300 es",On=1035,Rt=2e3,$0=2001;class T2{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const r=i.slice(0);for(let s=0,o=r.length;s<o;s++)r[s].call(this,e);e.target=null}}}const we=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let X8=1234567;const R3=Math.PI/180,G3=180/Math.PI;function vt(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(we[n&255]+we[n>>8&255]+we[n>>16&255]+we[n>>24&255]+"-"+we[e&255]+we[e>>8&255]+"-"+we[e>>16&15|64]+we[e>>24&255]+"-"+we[t&63|128]+we[t>>8&255]+"-"+we[t>>16&255]+we[t>>24&255]+we[i&255]+we[i>>8&255]+we[i>>16&255]+we[i>>24&255]).toLowerCase()}function ye(n,e,t){return Math.max(e,Math.min(t,n))}function g9(n,e){return(n%e+e)%e}function vo(n,e,t,i,r){return i+(n-e)*(r-i)/(t-e)}function xo(n,e,t){return n!==e?(t-n)/(e-n):0}function C3(n,e,t){return(1-t)*n+t*e}function yo(n,e,t,i){return C3(n,e,1-Math.exp(-t*i))}function Mo(n,e=1){return e-Math.abs(g9(n,e*2)-e)}function So(n,e,t){return n<=e?0:n>=t?1:(n=(n-e)/(t-e),n*n*(3-2*n))}function Eo(n,e,t){return n<=e?0:n>=t?1:(n=(n-e)/(t-e),n*n*n*(n*(n*6-15)+10))}function bo(n,e){return n+Math.floor(Math.random()*(e-n+1))}function To(n,e){return n+Math.random()*(e-n)}function Ao(n){return n*(.5-Math.random())}function wo(n){n!==void 0&&(X8=n);let e=X8+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Ro(n){return n*R3}function Co(n){return n*G3}function Fn(n){return(n&n-1)===0&&n!==0}function Po(n){return Math.pow(2,Math.ceil(Math.log(n)/Math.LN2))}function J0(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))}function Lo(n,e,t,i,r){const s=Math.cos,o=Math.sin,a=s(t/2),l=o(t/2),c=s((e+i)/2),u=o((e+i)/2),h=s((e-i)/2),f=o((e-i)/2),m=s((i-e)/2),g=o((i-e)/2);switch(r){case"XYX":n.set(a*u,l*h,l*f,a*c);break;case"YZY":n.set(l*f,a*u,l*h,a*c);break;case"ZXZ":n.set(l*h,l*f,a*u,a*c);break;case"XZX":n.set(a*u,l*g,l*m,a*c);break;case"YXY":n.set(l*m,a*u,l*g,a*c);break;case"ZYZ":n.set(l*g,l*m,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}function gt(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return n/4294967295;case Uint16Array:return n/65535;case Uint8Array:return n/255;case Int32Array:return Math.max(n/2147483647,-1);case Int16Array:return Math.max(n/32767,-1);case Int8Array:return Math.max(n/127,-1);default:throw new Error("Invalid component type.")}}function te(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return Math.round(n*4294967295);case Uint16Array:return Math.round(n*65535);case Uint8Array:return Math.round(n*255);case Int32Array:return Math.round(n*2147483647);case Int16Array:return Math.round(n*32767);case Int8Array:return Math.round(n*127);default:throw new Error("Invalid component type.")}}const Do={DEG2RAD:R3,RAD2DEG:G3,generateUUID:vt,clamp:ye,euclideanModulo:g9,mapLinear:vo,inverseLerp:xo,lerp:C3,damp:yo,pingpong:Mo,smoothstep:So,smootherstep:Eo,randInt:bo,randFloat:To,randFloatSpread:Ao,seededRandom:wo,degToRad:Ro,radToDeg:Co,isPowerOfTwo:Fn,ceilPowerOfTwo:Po,floorPowerOfTwo:J0,setQuaternionFromProperEuler:Lo,normalize:te,denormalize:gt};class p1{constructor(e=0,t=0){p1.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6],this.y=r[1]*t+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(ye(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),r=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*i-o*r+e.x,this.y=s*r+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class j1{constructor(e,t,i,r,s,o,a,l,c){j1.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,r,s,o,a,l,c)}set(e,t,i,r,s,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=r,u[2]=a,u[3]=t,u[4]=s,u[5]=l,u[6]=i,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,o=i[0],a=i[3],l=i[6],c=i[1],u=i[4],h=i[7],f=i[2],m=i[5],g=i[8],v=r[0],p=r[3],d=r[6],w=r[1],y=r[4],b=r[7],B=r[2],R=r[5],L=r[8];return s[0]=o*v+a*w+l*B,s[3]=o*p+a*y+l*R,s[6]=o*d+a*b+l*L,s[1]=c*v+u*w+h*B,s[4]=c*p+u*y+h*R,s[7]=c*d+u*b+h*L,s[2]=f*v+m*w+g*B,s[5]=f*p+m*y+g*R,s[8]=f*d+m*b+g*L,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-i*s*u+i*a*l+r*s*c-r*o*l}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=u*o-a*c,f=a*l-u*s,m=c*s-o*l,g=t*h+i*f+r*m;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const v=1/g;return e[0]=h*v,e[1]=(r*c-u*i)*v,e[2]=(a*i-r*o)*v,e[3]=f*v,e[4]=(u*t-r*l)*v,e[5]=(r*s-a*t)*v,e[6]=m*v,e[7]=(i*l-c*t)*v,e[8]=(o*t-i*s)*v,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,r,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*o+c*a)+o+e,-r*c,r*l,-r*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(F4.makeScale(e,t)),this}rotate(e){return this.premultiply(F4.makeRotation(-e)),this}translate(e,t){return this.premultiply(F4.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<9;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const F4=new j1;function Qi(n){for(let e=n.length-1;e>=0;--e)if(n[e]>=65535)return!0;return!1}function V3(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}function Io(){const n=V3("canvas");return n.style.display="block",n}const q8={};function P3(n){n in q8||(q8[n]=!0,console.warn(n))}const Y8=new j1().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),j8=new j1().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),r0={[Pt]:{transfer:j0,primaries:K0,toReference:n=>n,fromReference:n=>n},[Ee]:{transfer:se,primaries:K0,toReference:n=>n.convertSRGBToLinear(),fromReference:n=>n.convertLinearToSRGB()},[f4]:{transfer:j0,primaries:Z0,toReference:n=>n.applyMatrix3(j8),fromReference:n=>n.applyMatrix3(Y8)},[m9]:{transfer:se,primaries:Z0,toReference:n=>n.convertSRGBToLinear().applyMatrix3(j8),fromReference:n=>n.applyMatrix3(Y8).convertLinearToSRGB()}},Uo=new Set([Pt,f4]),ne={enabled:!0,_workingColorSpace:Pt,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(n){if(!Uo.has(n))throw new Error(`Unsupported working color space, "${n}".`);this._workingColorSpace=n},convert:function(n,e,t){if(this.enabled===!1||e===t||!e||!t)return n;const i=r0[e].toReference,r=r0[t].fromReference;return r(i(n))},fromWorkingColorSpace:function(n,e){return this.convert(n,this._workingColorSpace,e)},toWorkingColorSpace:function(n,e){return this.convert(n,e,this._workingColorSpace)},getPrimaries:function(n){return r0[n].primaries},getTransfer:function(n){return n===Qe?j0:r0[n].transfer}};function i3(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function B4(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}let P2;class e7{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{P2===void 0&&(P2=V3("canvas")),P2.width=e.width,P2.height=e.height;const i=P2.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=P2}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=V3("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const r=i.getImageData(0,0,e.width,e.height),s=r.data;for(let o=0;o<s.length;o++)s[o]=i3(s[o]/255)*255;return i.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(i3(t[i]/255)*255):t[i]=i3(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let No=0;class t7{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:No++}),this.uuid=vt(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let o=0,a=r.length;o<a;o++)r[o].isDataTexture?s.push(z4(r[o].image)):s.push(z4(r[o]))}else s=z4(r);i.url=s}return t||(e.images[this.uuid]=i),i}}function z4(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?e7.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Oo=0;class Ge extends T2{constructor(e=Ge.DEFAULT_IMAGE,t=Ge.DEFAULT_MAPPING,i=at,r=at,s=Ze,o=z3,a=lt,l=Zt,c=Ge.DEFAULT_ANISOTROPY,u=Qe){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Oo++}),this.uuid=vt(),this.name="",this.source=new t7(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=r,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new p1(0,0),this.repeat=new p1(1,1),this.center=new p1(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new j1,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof u=="string"?this.colorSpace=u:(P3("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=u===v2?Ee:Qe),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Vi)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case In:e.x=e.x-Math.floor(e.x);break;case at:e.x=e.x<0?0:1;break;case Un:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case In:e.y=e.y-Math.floor(e.y);break;case at:e.y=e.y<0?0:1;break;case Un:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return P3("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===Ee?v2:Zi}set encoding(e){P3("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===v2?Ee:Qe}}Ge.DEFAULT_IMAGE=null;Ge.DEFAULT_MAPPING=Vi;Ge.DEFAULT_ANISOTROPY=1;class Me{constructor(e=0,t=0,i=0,r=1){Me.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*i+o[8]*r+o[12]*s,this.y=o[1]*t+o[5]*i+o[9]*r+o[13]*s,this.z=o[2]*t+o[6]*i+o[10]*r+o[14]*s,this.w=o[3]*t+o[7]*i+o[11]*r+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,r,s;const l=e.elements,c=l[0],u=l[4],h=l[8],f=l[1],m=l[5],g=l[9],v=l[2],p=l[6],d=l[10];if(Math.abs(u-f)<.01&&Math.abs(h-v)<.01&&Math.abs(g-p)<.01){if(Math.abs(u+f)<.1&&Math.abs(h+v)<.1&&Math.abs(g+p)<.1&&Math.abs(c+m+d-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const y=(c+1)/2,b=(m+1)/2,B=(d+1)/2,R=(u+f)/4,L=(h+v)/4,t1=(g+p)/4;return y>b&&y>B?y<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(y),r=R/i,s=L/i):b>B?b<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(b),i=R/r,s=t1/r):B<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(B),i=L/s,r=t1/s),this.set(i,r,s,t),this}let w=Math.sqrt((p-g)*(p-g)+(h-v)*(h-v)+(f-u)*(f-u));return Math.abs(w)<.001&&(w=1),this.x=(p-g)/w,this.y=(h-v)/w,this.z=(f-u)/w,this.w=Math.acos((c+m+d-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Fo extends T2{constructor(e=1,t=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Me(0,0,e,t),this.scissorTest=!1,this.viewport=new Me(0,0,e,t);const r={width:e,height:t,depth:1};i.encoding!==void 0&&(P3("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),i.colorSpace=i.encoding===v2?Ee:Qe),i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Ze,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},i),this.texture=new Ge(r,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=i.generateMipmaps,this.texture.internalFormat=i.internalFormat,this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}setSize(e,t,i=1){(this.width!==e||this.height!==t||this.depth!==i)&&(this.width=e,this.height=t,this.depth=i,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new t7(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class y2 extends Fo{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class n7 extends Ge{constructor(e=null,t=1,i=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=Oe,this.minFilter=Oe,this.wrapR=at,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Bo extends Ge{constructor(e=null,t=1,i=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=Oe,this.minFilter=Oe,this.wrapR=at,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class M2{constructor(e=0,t=0,i=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=r}static slerpFlat(e,t,i,r,s,o,a){let l=i[r+0],c=i[r+1],u=i[r+2],h=i[r+3];const f=s[o+0],m=s[o+1],g=s[o+2],v=s[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h;return}if(a===1){e[t+0]=f,e[t+1]=m,e[t+2]=g,e[t+3]=v;return}if(h!==v||l!==f||c!==m||u!==g){let p=1-a;const d=l*f+c*m+u*g+h*v,w=d>=0?1:-1,y=1-d*d;if(y>Number.EPSILON){const B=Math.sqrt(y),R=Math.atan2(B,d*w);p=Math.sin(p*R)/B,a=Math.sin(a*R)/B}const b=a*w;if(l=l*p+f*b,c=c*p+m*b,u=u*p+g*b,h=h*p+v*b,p===1-a){const B=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=B,c*=B,u*=B,h*=B}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,i,r,s,o){const a=i[r],l=i[r+1],c=i[r+2],u=i[r+3],h=s[o],f=s[o+1],m=s[o+2],g=s[o+3];return e[t]=a*g+u*h+l*m-c*f,e[t+1]=l*g+u*f+c*h-a*m,e[t+2]=c*g+u*m+a*f-l*h,e[t+3]=u*g-a*h-l*f-c*m,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,r=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(i/2),u=a(r/2),h=a(s/2),f=l(i/2),m=l(r/2),g=l(s/2);switch(o){case"XYZ":this._x=f*u*h+c*m*g,this._y=c*m*h-f*u*g,this._z=c*u*g+f*m*h,this._w=c*u*h-f*m*g;break;case"YXZ":this._x=f*u*h+c*m*g,this._y=c*m*h-f*u*g,this._z=c*u*g-f*m*h,this._w=c*u*h+f*m*g;break;case"ZXY":this._x=f*u*h-c*m*g,this._y=c*m*h+f*u*g,this._z=c*u*g+f*m*h,this._w=c*u*h-f*m*g;break;case"ZYX":this._x=f*u*h-c*m*g,this._y=c*m*h+f*u*g,this._z=c*u*g-f*m*h,this._w=c*u*h+f*m*g;break;case"YZX":this._x=f*u*h+c*m*g,this._y=c*m*h+f*u*g,this._z=c*u*g-f*m*h,this._w=c*u*h-f*m*g;break;case"XZY":this._x=f*u*h-c*m*g,this._y=c*m*h-f*u*g,this._z=c*u*g+f*m*h,this._w=c*u*h+f*m*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],r=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],h=t[10],f=i+a+h;if(f>0){const m=.5/Math.sqrt(f+1);this._w=.25/m,this._x=(u-l)*m,this._y=(s-c)*m,this._z=(o-r)*m}else if(i>a&&i>h){const m=2*Math.sqrt(1+i-a-h);this._w=(u-l)/m,this._x=.25*m,this._y=(r+o)/m,this._z=(s+c)/m}else if(a>h){const m=2*Math.sqrt(1+a-i-h);this._w=(s-c)/m,this._x=(r+o)/m,this._y=.25*m,this._z=(l+u)/m}else{const m=2*Math.sqrt(1+h-i-a);this._w=(o-r)/m,this._x=(s+c)/m,this._y=(l+u)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(ye(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,t/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,r=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=i*u+o*a+r*c-s*l,this._y=r*u+o*l+s*a-i*c,this._z=s*u+o*c+i*l-r*a,this._w=o*u-i*a-r*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,r=this._y,s=this._z,o=this._w;let a=o*e._w+i*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=r,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const m=1-t;return this._w=m*o+t*this._w,this._x=m*i+t*this._x,this._y=m*r+t*this._y,this._z=m*s+t*this._z,this.normalize(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-t)*u)/c,f=Math.sin(t*u)/c;return this._w=o*h+this._w*f,this._x=i*h+this._x*f,this._y=r*h+this._y*f,this._z=s*h+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=Math.random(),t=Math.sqrt(1-e),i=Math.sqrt(e),r=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(r),i*Math.sin(s),i*Math.cos(s),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class N{constructor(e=0,t=0,i=0){N.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(K8.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(K8.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*r,this.y=s[1]*t+s[4]*i+s[7]*r,this.z=s[2]*t+s[5]*i+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=e.elements,o=1/(s[3]*t+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*r+s[12])*o,this.y=(s[1]*t+s[5]*i+s[9]*r+s[13])*o,this.z=(s[2]*t+s[6]*i+s[10]*r+s[14])*o,this}applyQuaternion(e){const t=this.x,i=this.y,r=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=2*(o*r-a*i),u=2*(a*t-s*r),h=2*(s*i-o*t);return this.x=t+l*c+o*h-a*u,this.y=i+l*u+a*c-s*h,this.z=r+l*h+s*u-o*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*r,this.y=s[1]*t+s[5]*i+s[9]*r,this.z=s[2]*t+s[6]*i+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,r=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=r*l-s*a,this.y=s*o-i*l,this.z=i*a-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return H4.copy(this).projectOnVector(e),this.sub(H4)}reflect(e){return this.sub(H4.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(ye(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const r=Math.sin(t)*e;return this.x=r*Math.sin(i),this.y=Math.cos(t)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(t),this.y=i*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const H4=new N,K8=new M2;class Y3{constructor(e=new N(1/0,1/0,1/0),t=new N(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(nt.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(nt.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=nt.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const s=i.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=s.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,nt):nt.fromBufferAttribute(s,o),nt.applyMatrix4(e.matrixWorld),this.expandByPoint(nt);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),s0.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),s0.copy(i.boundingBox)),s0.applyMatrix4(e.matrixWorld),this.union(s0)}const r=e.children;for(let s=0,o=r.length;s<o;s++)this.expandByObject(r[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,nt),nt.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(g3),o0.subVectors(this.max,g3),L2.subVectors(e.a,g3),D2.subVectors(e.b,g3),I2.subVectors(e.c,g3),Nt.subVectors(D2,L2),Ot.subVectors(I2,D2),s2.subVectors(L2,I2);let t=[0,-Nt.z,Nt.y,0,-Ot.z,Ot.y,0,-s2.z,s2.y,Nt.z,0,-Nt.x,Ot.z,0,-Ot.x,s2.z,0,-s2.x,-Nt.y,Nt.x,0,-Ot.y,Ot.x,0,-s2.y,s2.x,0];return!G4(t,L2,D2,I2,o0)||(t=[1,0,0,0,1,0,0,0,1],!G4(t,L2,D2,I2,o0))?!1:(a0.crossVectors(Nt,Ot),t=[a0.x,a0.y,a0.z],G4(t,L2,D2,I2,o0))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,nt).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(nt).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Mt[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Mt[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Mt[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Mt[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Mt[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Mt[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Mt[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Mt[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Mt),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Mt=[new N,new N,new N,new N,new N,new N,new N,new N],nt=new N,s0=new Y3,L2=new N,D2=new N,I2=new N,Nt=new N,Ot=new N,s2=new N,g3=new N,o0=new N,a0=new N,o2=new N;function G4(n,e,t,i,r){for(let s=0,o=n.length-3;s<=o;s+=3){o2.fromArray(n,s);const a=r.x*Math.abs(o2.x)+r.y*Math.abs(o2.y)+r.z*Math.abs(o2.z),l=e.dot(o2),c=t.dot(o2),u=i.dot(o2);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const zo=new Y3,_3=new N,V4=new N;class j3{constructor(e=new N,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):zo.setFromPoints(e).getCenter(i);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;_3.subVectors(e,this.center);const t=_3.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),r=(i-this.radius)*.5;this.center.addScaledVector(_3,r/i),this.radius+=r}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(V4.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(_3.copy(e.center).add(V4)),this.expandByPoint(_3.copy(e.center).sub(V4))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const St=new N,W4=new N,l0=new N,Ft=new N,k4=new N,c0=new N,X4=new N;class h3{constructor(e=new N,t=new N(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,St)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=St.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(St.copy(this.origin).addScaledVector(this.direction,t),St.distanceToSquared(e))}distanceSqToSegment(e,t,i,r){W4.copy(e).add(t).multiplyScalar(.5),l0.copy(t).sub(e).normalize(),Ft.copy(this.origin).sub(W4);const s=e.distanceTo(t)*.5,o=-this.direction.dot(l0),a=Ft.dot(this.direction),l=-Ft.dot(l0),c=Ft.lengthSq(),u=Math.abs(1-o*o);let h,f,m,g;if(u>0)if(h=o*l-a,f=o*a-l,g=s*u,h>=0)if(f>=-g)if(f<=g){const v=1/u;h*=v,f*=v,m=h*(h+o*f+2*a)+f*(o*h+f+2*l)+c}else f=s,h=Math.max(0,-(o*f+a)),m=-h*h+f*(f+2*l)+c;else f=-s,h=Math.max(0,-(o*f+a)),m=-h*h+f*(f+2*l)+c;else f<=-g?(h=Math.max(0,-(-o*s+a)),f=h>0?-s:Math.min(Math.max(-s,-l),s),m=-h*h+f*(f+2*l)+c):f<=g?(h=0,f=Math.min(Math.max(-s,-l),s),m=f*(f+2*l)+c):(h=Math.max(0,-(o*s+a)),f=h>0?s:Math.min(Math.max(-s,-l),s),m=-h*h+f*(f+2*l)+c);else f=o>0?-s:s,h=Math.max(0,-(o*f+a)),m=-h*h+f*(f+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,h),r&&r.copy(W4).addScaledVector(l0,f),m}intersectSphere(e,t){St.subVectors(e.center,this.origin);const i=St.dot(this.direction),r=St.dot(St)-i*i,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),a=i-o,l=i+o;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,r,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,f=this.origin;return c>=0?(i=(e.min.x-f.x)*c,r=(e.max.x-f.x)*c):(i=(e.max.x-f.x)*c,r=(e.min.x-f.x)*c),u>=0?(s=(e.min.y-f.y)*u,o=(e.max.y-f.y)*u):(s=(e.max.y-f.y)*u,o=(e.min.y-f.y)*u),i>o||s>r||((s>i||isNaN(i))&&(i=s),(o<r||isNaN(r))&&(r=o),h>=0?(a=(e.min.z-f.z)*h,l=(e.max.z-f.z)*h):(a=(e.max.z-f.z)*h,l=(e.min.z-f.z)*h),i>l||a>r)||((a>i||i!==i)&&(i=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,t)}intersectsBox(e){return this.intersectBox(e,St)!==null}intersectTriangle(e,t,i,r,s){k4.subVectors(t,e),c0.subVectors(i,e),X4.crossVectors(k4,c0);let o=this.direction.dot(X4),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Ft.subVectors(this.origin,e);const l=a*this.direction.dot(c0.crossVectors(Ft,c0));if(l<0)return null;const c=a*this.direction.dot(k4.cross(Ft));if(c<0||l+c>o)return null;const u=-a*Ft.dot(X4);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ce{constructor(e,t,i,r,s,o,a,l,c,u,h,f,m,g,v,p){ce.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,r,s,o,a,l,c,u,h,f,m,g,v,p)}set(e,t,i,r,s,o,a,l,c,u,h,f,m,g,v,p){const d=this.elements;return d[0]=e,d[4]=t,d[8]=i,d[12]=r,d[1]=s,d[5]=o,d[9]=a,d[13]=l,d[2]=c,d[6]=u,d[10]=h,d[14]=f,d[3]=m,d[7]=g,d[11]=v,d[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ce().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,r=1/U2.setFromMatrixColumn(e,0).length(),s=1/U2.setFromMatrixColumn(e,1).length(),o=1/U2.setFromMatrixColumn(e,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*o,t[9]=i[9]*o,t[10]=i[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,r=e.y,s=e.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(r),c=Math.sin(r),u=Math.cos(s),h=Math.sin(s);if(e.order==="XYZ"){const f=o*u,m=o*h,g=a*u,v=a*h;t[0]=l*u,t[4]=-l*h,t[8]=c,t[1]=m+g*c,t[5]=f-v*c,t[9]=-a*l,t[2]=v-f*c,t[6]=g+m*c,t[10]=o*l}else if(e.order==="YXZ"){const f=l*u,m=l*h,g=c*u,v=c*h;t[0]=f+v*a,t[4]=g*a-m,t[8]=o*c,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=m*a-g,t[6]=v+f*a,t[10]=o*l}else if(e.order==="ZXY"){const f=l*u,m=l*h,g=c*u,v=c*h;t[0]=f-v*a,t[4]=-o*h,t[8]=g+m*a,t[1]=m+g*a,t[5]=o*u,t[9]=v-f*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const f=o*u,m=o*h,g=a*u,v=a*h;t[0]=l*u,t[4]=g*c-m,t[8]=f*c+v,t[1]=l*h,t[5]=v*c+f,t[9]=m*c-g,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const f=o*l,m=o*c,g=a*l,v=a*c;t[0]=l*u,t[4]=v-f*h,t[8]=g*h+m,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=m*h+g,t[10]=f-v*h}else if(e.order==="XZY"){const f=o*l,m=o*c,g=a*l,v=a*c;t[0]=l*u,t[4]=-h,t[8]=c*u,t[1]=f*h+v,t[5]=o*u,t[9]=m*h-g,t[2]=g*h-m,t[6]=a*u,t[10]=v*h+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Ho,e,Go)}lookAt(e,t,i){const r=this.elements;return ke.subVectors(e,t),ke.lengthSq()===0&&(ke.z=1),ke.normalize(),Bt.crossVectors(i,ke),Bt.lengthSq()===0&&(Math.abs(i.z)===1?ke.x+=1e-4:ke.z+=1e-4,ke.normalize(),Bt.crossVectors(i,ke)),Bt.normalize(),u0.crossVectors(ke,Bt),r[0]=Bt.x,r[4]=u0.x,r[8]=ke.x,r[1]=Bt.y,r[5]=u0.y,r[9]=ke.y,r[2]=Bt.z,r[6]=u0.z,r[10]=ke.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,o=i[0],a=i[4],l=i[8],c=i[12],u=i[1],h=i[5],f=i[9],m=i[13],g=i[2],v=i[6],p=i[10],d=i[14],w=i[3],y=i[7],b=i[11],B=i[15],R=r[0],L=r[4],t1=r[8],T=r[12],A=r[1],Y=r[5],s1=r[9],f1=r[13],z=r[2],X=r[6],q=r[10],J=r[14],Z=r[3],i1=r[7],o1=r[11],u1=r[15];return s[0]=o*R+a*A+l*z+c*Z,s[4]=o*L+a*Y+l*X+c*i1,s[8]=o*t1+a*s1+l*q+c*o1,s[12]=o*T+a*f1+l*J+c*u1,s[1]=u*R+h*A+f*z+m*Z,s[5]=u*L+h*Y+f*X+m*i1,s[9]=u*t1+h*s1+f*q+m*o1,s[13]=u*T+h*f1+f*J+m*u1,s[2]=g*R+v*A+p*z+d*Z,s[6]=g*L+v*Y+p*X+d*i1,s[10]=g*t1+v*s1+p*q+d*o1,s[14]=g*T+v*f1+p*J+d*u1,s[3]=w*R+y*A+b*z+B*Z,s[7]=w*L+y*Y+b*X+B*i1,s[11]=w*t1+y*s1+b*q+B*o1,s[15]=w*T+y*f1+b*J+B*u1,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],r=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],h=e[6],f=e[10],m=e[14],g=e[3],v=e[7],p=e[11],d=e[15];return g*(+s*l*h-r*c*h-s*a*f+i*c*f+r*a*m-i*l*m)+v*(+t*l*m-t*c*f+s*o*f-r*o*m+r*c*u-s*l*u)+p*(+t*c*h-t*a*m-s*o*h+i*o*m+s*a*u-i*c*u)+d*(-r*a*u-t*l*h+t*a*f+r*o*h-i*o*f+i*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=e[9],f=e[10],m=e[11],g=e[12],v=e[13],p=e[14],d=e[15],w=h*p*c-v*f*c+v*l*m-a*p*m-h*l*d+a*f*d,y=g*f*c-u*p*c-g*l*m+o*p*m+u*l*d-o*f*d,b=u*v*c-g*h*c+g*a*m-o*v*m-u*a*d+o*h*d,B=g*h*l-u*v*l-g*a*f+o*v*f+u*a*p-o*h*p,R=t*w+i*y+r*b+s*B;if(R===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const L=1/R;return e[0]=w*L,e[1]=(v*f*s-h*p*s-v*r*m+i*p*m+h*r*d-i*f*d)*L,e[2]=(a*p*s-v*l*s+v*r*c-i*p*c-a*r*d+i*l*d)*L,e[3]=(h*l*s-a*f*s-h*r*c+i*f*c+a*r*m-i*l*m)*L,e[4]=y*L,e[5]=(u*p*s-g*f*s+g*r*m-t*p*m-u*r*d+t*f*d)*L,e[6]=(g*l*s-o*p*s-g*r*c+t*p*c+o*r*d-t*l*d)*L,e[7]=(o*f*s-u*l*s+u*r*c-t*f*c-o*r*m+t*l*m)*L,e[8]=b*L,e[9]=(g*h*s-u*v*s-g*i*m+t*v*m+u*i*d-t*h*d)*L,e[10]=(o*v*s-g*a*s+g*i*c-t*v*c-o*i*d+t*a*d)*L,e[11]=(u*a*s-o*h*s-u*i*c+t*h*c+o*i*m-t*a*m)*L,e[12]=B*L,e[13]=(u*v*r-g*h*r+g*i*f-t*v*f-u*i*p+t*h*p)*L,e[14]=(g*a*r-o*v*r-g*i*l+t*v*l+o*i*p-t*a*p)*L,e[15]=(o*h*r-u*a*r+u*i*l-t*h*l-o*i*f+t*a*f)*L,this}scale(e){const t=this.elements,i=e.x,r=e.y,s=e.z;return t[0]*=i,t[4]*=r,t[8]*=s,t[1]*=i,t[5]*=r,t[9]*=s,t[2]*=i,t[6]*=r,t[10]*=s,t[3]*=i,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,r))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),r=Math.sin(t),s=1-i,o=e.x,a=e.y,l=e.z,c=s*o,u=s*a;return this.set(c*o+i,c*a-r*l,c*l+r*a,0,c*a+r*l,u*a+i,u*l-r*o,0,c*l-r*a,u*l+r*o,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,r,s,o){return this.set(1,i,s,0,e,1,o,0,t,r,1,0,0,0,0,1),this}compose(e,t,i){const r=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,u=o+o,h=a+a,f=s*c,m=s*u,g=s*h,v=o*u,p=o*h,d=a*h,w=l*c,y=l*u,b=l*h,B=i.x,R=i.y,L=i.z;return r[0]=(1-(v+d))*B,r[1]=(m+b)*B,r[2]=(g-y)*B,r[3]=0,r[4]=(m-b)*R,r[5]=(1-(f+d))*R,r[6]=(p+w)*R,r[7]=0,r[8]=(g+y)*L,r[9]=(p-w)*L,r[10]=(1-(f+v))*L,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,i){const r=this.elements;let s=U2.set(r[0],r[1],r[2]).length();const o=U2.set(r[4],r[5],r[6]).length(),a=U2.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],it.copy(this);const c=1/s,u=1/o,h=1/a;return it.elements[0]*=c,it.elements[1]*=c,it.elements[2]*=c,it.elements[4]*=u,it.elements[5]*=u,it.elements[6]*=u,it.elements[8]*=h,it.elements[9]*=h,it.elements[10]*=h,t.setFromRotationMatrix(it),i.x=s,i.y=o,i.z=a,this}makePerspective(e,t,i,r,s,o,a=Rt){const l=this.elements,c=2*s/(t-e),u=2*s/(i-r),h=(t+e)/(t-e),f=(i+r)/(i-r);let m,g;if(a===Rt)m=-(o+s)/(o-s),g=-2*o*s/(o-s);else if(a===$0)m=-o/(o-s),g=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=h,l[12]=0,l[1]=0,l[5]=u,l[9]=f,l[13]=0,l[2]=0,l[6]=0,l[10]=m,l[14]=g,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,i,r,s,o,a=Rt){const l=this.elements,c=1/(t-e),u=1/(i-r),h=1/(o-s),f=(t+e)*c,m=(i+r)*u;let g,v;if(a===Rt)g=(o+s)*h,v=-2*h;else if(a===$0)g=s*h,v=-1*h;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-f,l[1]=0,l[5]=2*u,l[9]=0,l[13]=-m,l[2]=0,l[6]=0,l[10]=v,l[14]=-g,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<16;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const U2=new N,it=new ce,Ho=new N(0,0,0),Go=new N(1,1,1),Bt=new N,u0=new N,ke=new N,Z8=new ce,$8=new M2;class d4{constructor(e=0,t=0,i=0,r=d4.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,r=this._order){return this._x=e,this._y=t,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const r=e.elements,s=r[0],o=r[4],a=r[8],l=r[1],c=r[5],u=r[9],h=r[2],f=r[6],m=r[10];switch(t){case"XYZ":this._y=Math.asin(ye(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,m),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-ye(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,m),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(ye(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-h,m),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-ye(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(f,m),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(ye(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(a,m));break;case"XZY":this._z=Math.asin(-ye(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return Z8.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Z8,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return $8.setFromEuler(this),this.setFromQuaternion($8,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}d4.DEFAULT_ORDER="XYZ";class _9{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let Vo=0;const J8=new N,N2=new M2,Et=new ce,h0=new N,v3=new N,Wo=new N,ko=new M2,Q8=new N(1,0,0),e5=new N(0,1,0),t5=new N(0,0,1),Xo={type:"added"},qo={type:"removed"};class ie extends T2{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Vo++}),this.uuid=vt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ie.DEFAULT_UP.clone();const e=new N,t=new d4,i=new M2,r=new N(1,1,1);function s(){i.setFromEuler(t,!1)}function o(){t.setFromQuaternion(i,void 0,!1)}t._onChange(s),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new ce},normalMatrix:{value:new j1}}),this.matrix=new ce,this.matrixWorld=new ce,this.matrixAutoUpdate=ie.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=ie.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new _9,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return N2.setFromAxisAngle(e,t),this.quaternion.multiply(N2),this}rotateOnWorldAxis(e,t){return N2.setFromAxisAngle(e,t),this.quaternion.premultiply(N2),this}rotateX(e){return this.rotateOnAxis(Q8,e)}rotateY(e){return this.rotateOnAxis(e5,e)}rotateZ(e){return this.rotateOnAxis(t5,e)}translateOnAxis(e,t){return J8.copy(e).applyQuaternion(this.quaternion),this.position.add(J8.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Q8,e)}translateY(e){return this.translateOnAxis(e5,e)}translateZ(e){return this.translateOnAxis(t5,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Et.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?h0.copy(e):h0.set(e,t,i);const r=this.parent;this.updateWorldMatrix(!0,!1),v3.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Et.lookAt(v3,h0,this.up):Et.lookAt(h0,v3,this.up),this.quaternion.setFromRotationMatrix(Et),r&&(Et.extractRotation(r.matrixWorld),N2.setFromRotationMatrix(Et),this.quaternion.premultiply(N2.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Xo)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(qo)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Et.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Et.multiply(e.parent.matrixWorld)),e.applyMatrix4(Et),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,r=this.children.length;i<r;i++){const o=this.children[i].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const r=this.children;for(let s=0,o=r.length;s<o;s++)r[s].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(v3,e,Wo),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(v3,ko,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,r=t.length;i<r;i++){const s=t[i];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const r=this.children;for(let s=0,o=r.length;s<o;s++){const a=r[s];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.visibility=this._visibility,r.active=this._active,r.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),r.maxGeometryCount=this._maxGeometryCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.geometryCount=this._geometryCount,r.matricesTexture=this._matricesTexture.toJSON(e),this.boundingSphere!==null&&(r.boundingSphere={center:r.boundingSphere.center.toArray(),radius:r.boundingSphere.radius}),this.boundingBox!==null&&(r.boundingBox={min:r.boundingBox.min.toArray(),max:r.boundingBox.max.toArray()}));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];s(e.shapes,h)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));r.material=a}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let a=0;a<this.children.length;a++)r.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];r.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),h=o(e.shapes),f=o(e.skeletons),m=o(e.animations),g=o(e.nodes);a.length>0&&(i.geometries=a),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),u.length>0&&(i.images=u),h.length>0&&(i.shapes=h),f.length>0&&(i.skeletons=f),m.length>0&&(i.animations=m),g.length>0&&(i.nodes=g)}return i.object=r,i;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const r=e.children[i];this.add(r.clone())}return this}}ie.DEFAULT_UP=new N(0,1,0);ie.DEFAULT_MATRIX_AUTO_UPDATE=!0;ie.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const rt=new N,bt=new N,q4=new N,Tt=new N,O2=new N,F2=new N,n5=new N,Y4=new N,j4=new N,K4=new N;let f0=!1;class $e{constructor(e=new N,t=new N,i=new N){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,r){r.subVectors(i,t),rt.subVectors(e,t),r.cross(rt);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,i,r,s){rt.subVectors(r,t),bt.subVectors(i,t),q4.subVectors(e,t);const o=rt.dot(rt),a=rt.dot(bt),l=rt.dot(q4),c=bt.dot(bt),u=bt.dot(q4),h=o*c-a*a;if(h===0)return s.set(0,0,0),null;const f=1/h,m=(c*l-a*u)*f,g=(o*u-a*l)*f;return s.set(1-m-g,g,m)}static containsPoint(e,t,i,r){return this.getBarycoord(e,t,i,r,Tt)===null?!1:Tt.x>=0&&Tt.y>=0&&Tt.x+Tt.y<=1}static getUV(e,t,i,r,s,o,a,l){return f0===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),f0=!0),this.getInterpolation(e,t,i,r,s,o,a,l)}static getInterpolation(e,t,i,r,s,o,a,l){return this.getBarycoord(e,t,i,r,Tt)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,Tt.x),l.addScaledVector(o,Tt.y),l.addScaledVector(a,Tt.z),l)}static isFrontFacing(e,t,i,r){return rt.subVectors(i,t),bt.subVectors(e,t),rt.cross(bt).dot(r)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,i,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return rt.subVectors(this.c,this.b),bt.subVectors(this.a,this.b),rt.cross(bt).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return $e.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return $e.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,r,s){return f0===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),f0=!0),$e.getInterpolation(e,this.a,this.b,this.c,t,i,r,s)}getInterpolation(e,t,i,r,s){return $e.getInterpolation(e,this.a,this.b,this.c,t,i,r,s)}containsPoint(e){return $e.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return $e.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,r=this.b,s=this.c;let o,a;O2.subVectors(r,i),F2.subVectors(s,i),Y4.subVectors(e,i);const l=O2.dot(Y4),c=F2.dot(Y4);if(l<=0&&c<=0)return t.copy(i);j4.subVectors(e,r);const u=O2.dot(j4),h=F2.dot(j4);if(u>=0&&h<=u)return t.copy(r);const f=l*h-u*c;if(f<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(i).addScaledVector(O2,o);K4.subVectors(e,s);const m=O2.dot(K4),g=F2.dot(K4);if(g>=0&&m<=g)return t.copy(s);const v=m*c-l*g;if(v<=0&&c>=0&&g<=0)return a=c/(c-g),t.copy(i).addScaledVector(F2,a);const p=u*g-m*h;if(p<=0&&h-u>=0&&m-g>=0)return n5.subVectors(s,r),a=(h-u)/(h-u+(m-g)),t.copy(r).addScaledVector(n5,a);const d=1/(p+v+f);return o=v*d,a=f*d,t.copy(i).addScaledVector(O2,o).addScaledVector(F2,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const i7={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},zt={h:0,s:0,l:0},d0={h:0,s:0,l:0};function Z4(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}class K1{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const r=e;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Ee){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,ne.toWorkingColorSpace(this,t),this}setRGB(e,t,i,r=ne.workingColorSpace){return this.r=e,this.g=t,this.b=i,ne.toWorkingColorSpace(this,r),this}setHSL(e,t,i,r=ne.workingColorSpace){if(e=g9(e,1),t=ye(t,0,1),i=ye(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,o=2*i-s;this.r=Z4(o,s,e+1/3),this.g=Z4(o,s,e),this.b=Z4(o,s,e-1/3)}return ne.toWorkingColorSpace(this,r),this}setStyle(e,t=Ee){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const o=r[1],a=r[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Ee){const i=i7[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=i3(e.r),this.g=i3(e.g),this.b=i3(e.b),this}copyLinearToSRGB(e){return this.r=B4(e.r),this.g=B4(e.g),this.b=B4(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Ee){return ne.fromWorkingColorSpace(Re.copy(this),e),Math.round(ye(Re.r*255,0,255))*65536+Math.round(ye(Re.g*255,0,255))*256+Math.round(ye(Re.b*255,0,255))}getHexString(e=Ee){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=ne.workingColorSpace){ne.fromWorkingColorSpace(Re.copy(this),t);const i=Re.r,r=Re.g,s=Re.b,o=Math.max(i,r,s),a=Math.min(i,r,s);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case i:l=(r-s)/h+(r<s?6:0);break;case r:l=(s-i)/h+2;break;case s:l=(i-r)/h+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=ne.workingColorSpace){return ne.fromWorkingColorSpace(Re.copy(this),t),e.r=Re.r,e.g=Re.g,e.b=Re.b,e}getStyle(e=Ee){ne.fromWorkingColorSpace(Re.copy(this),e);const t=Re.r,i=Re.g,r=Re.b;return e!==Ee?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(r*255)})`}offsetHSL(e,t,i){return this.getHSL(zt),this.setHSL(zt.h+e,zt.s+t,zt.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(zt),e.getHSL(d0);const i=C3(zt.h,d0.h,t),r=C3(zt.s,d0.s,t),s=C3(zt.l,d0.l,t);return this.setHSL(i,r,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,r=this.b,s=e.elements;return this.r=s[0]*t+s[3]*i+s[6]*r,this.g=s[1]*t+s[4]*i+s[7]*r,this.b=s[2]*t+s[5]*i+s[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Re=new K1;K1.NAMES=i7;let Yo=0;class Qt extends T2{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Yo++}),this.uuid=vt(),this.name="",this.type="Material",this.blending=n3,this.side=$t,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Cn,this.blendDst=Pn,this.blendEquation=h2,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new K1(0,0,0),this.blendAlpha=0,this.depthFunc=Y0,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=W8,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=C2,this.stencilZFail=C2,this.stencilZPass=C2,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==n3&&(i.blending=this.blending),this.side!==$t&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==Cn&&(i.blendSrc=this.blendSrc),this.blendDst!==Pn&&(i.blendDst=this.blendDst),this.blendEquation!==h2&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==Y0&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==W8&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==C2&&(i.stencilFail=this.stencilFail),this.stencilZFail!==C2&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==C2&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function r(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=r(e.textures),o=r(e.images);s.length>0&&(i.textures=s),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const r=t.length;i=new Array(r);for(let s=0;s!==r;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class A2 extends Qt{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new K1(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Gi,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const de=new N,p0=new p1;class tt{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=Nn,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=Xt,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return console.warn("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[i+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)p0.fromBufferAttribute(this,t),p0.applyMatrix3(e),this.setXY(t,p0.x,p0.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)de.fromBufferAttribute(this,t),de.applyMatrix3(e),this.setXYZ(t,de.x,de.y,de.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)de.fromBufferAttribute(this,t),de.applyMatrix4(e),this.setXYZ(t,de.x,de.y,de.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)de.fromBufferAttribute(this,t),de.applyNormalMatrix(e),this.setXYZ(t,de.x,de.y,de.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)de.fromBufferAttribute(this,t),de.transformDirection(e),this.setXYZ(t,de.x,de.y,de.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=gt(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=te(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=gt(t,this.array)),t}setX(e,t){return this.normalized&&(t=te(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=gt(t,this.array)),t}setY(e,t){return this.normalized&&(t=te(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=gt(t,this.array)),t}setZ(e,t){return this.normalized&&(t=te(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=gt(t,this.array)),t}setW(e,t){return this.normalized&&(t=te(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=te(t,this.array),i=te(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,r){return e*=this.itemSize,this.normalized&&(t=te(t,this.array),i=te(i,this.array),r=te(r,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,t,i,r,s){return e*=this.itemSize,this.normalized&&(t=te(t,this.array),i=te(i,this.array),r=te(r,this.array),s=te(s,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Nn&&(e.usage=this.usage),e}}class r7 extends tt{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class s7 extends tt{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class fe extends tt{constructor(e,t,i){super(new Float32Array(e),t,i)}}let jo=0;const Ke=new ce,$4=new ie,B2=new N,Xe=new Y3,x3=new Y3,xe=new N;class Se extends T2{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:jo++}),this.uuid=vt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Qi(e)?s7:r7)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new j1().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Ke.makeRotationFromQuaternion(e),this.applyMatrix4(Ke),this}rotateX(e){return Ke.makeRotationX(e),this.applyMatrix4(Ke),this}rotateY(e){return Ke.makeRotationY(e),this.applyMatrix4(Ke),this}rotateZ(e){return Ke.makeRotationZ(e),this.applyMatrix4(Ke),this}translate(e,t,i){return Ke.makeTranslation(e,t,i),this.applyMatrix4(Ke),this}scale(e,t,i){return Ke.makeScale(e,t,i),this.applyMatrix4(Ke),this}lookAt(e){return $4.lookAt(e),$4.updateMatrix(),this.applyMatrix4($4.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(B2).negate(),this.translate(B2.x,B2.y,B2.z),this}setFromPoints(e){const t=[];for(let i=0,r=e.length;i<r;i++){const s=e[i];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new fe(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Y3);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new N(-1/0,-1/0,-1/0),new N(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,r=t.length;i<r;i++){const s=t[i];Xe.setFromBufferAttribute(s),this.morphTargetsRelative?(xe.addVectors(this.boundingBox.min,Xe.min),this.boundingBox.expandByPoint(xe),xe.addVectors(this.boundingBox.max,Xe.max),this.boundingBox.expandByPoint(xe)):(this.boundingBox.expandByPoint(Xe.min),this.boundingBox.expandByPoint(Xe.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new j3);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new N,1/0);return}if(e){const i=this.boundingSphere.center;if(Xe.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];x3.setFromBufferAttribute(a),this.morphTargetsRelative?(xe.addVectors(Xe.min,x3.min),Xe.expandByPoint(xe),xe.addVectors(Xe.max,x3.max),Xe.expandByPoint(xe)):(Xe.expandByPoint(x3.min),Xe.expandByPoint(x3.max))}Xe.getCenter(i);let r=0;for(let s=0,o=e.count;s<o;s++)xe.fromBufferAttribute(e,s),r=Math.max(r,i.distanceToSquared(xe));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)xe.fromBufferAttribute(a,c),l&&(B2.fromBufferAttribute(e,c),xe.add(B2)),r=Math.max(r,i.distanceToSquared(xe))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.array,r=t.position.array,s=t.normal.array,o=t.uv.array,a=r.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new tt(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let A=0;A<a;A++)c[A]=new N,u[A]=new N;const h=new N,f=new N,m=new N,g=new p1,v=new p1,p=new p1,d=new N,w=new N;function y(A,Y,s1){h.fromArray(r,A*3),f.fromArray(r,Y*3),m.fromArray(r,s1*3),g.fromArray(o,A*2),v.fromArray(o,Y*2),p.fromArray(o,s1*2),f.sub(h),m.sub(h),v.sub(g),p.sub(g);const f1=1/(v.x*p.y-p.x*v.y);isFinite(f1)&&(d.copy(f).multiplyScalar(p.y).addScaledVector(m,-v.y).multiplyScalar(f1),w.copy(m).multiplyScalar(v.x).addScaledVector(f,-p.x).multiplyScalar(f1),c[A].add(d),c[Y].add(d),c[s1].add(d),u[A].add(w),u[Y].add(w),u[s1].add(w))}let b=this.groups;b.length===0&&(b=[{start:0,count:i.length}]);for(let A=0,Y=b.length;A<Y;++A){const s1=b[A],f1=s1.start,z=s1.count;for(let X=f1,q=f1+z;X<q;X+=3)y(i[X+0],i[X+1],i[X+2])}const B=new N,R=new N,L=new N,t1=new N;function T(A){L.fromArray(s,A*3),t1.copy(L);const Y=c[A];B.copy(Y),B.sub(L.multiplyScalar(L.dot(Y))).normalize(),R.crossVectors(t1,Y);const f1=R.dot(u[A])<0?-1:1;l[A*4]=B.x,l[A*4+1]=B.y,l[A*4+2]=B.z,l[A*4+3]=f1}for(let A=0,Y=b.length;A<Y;++A){const s1=b[A],f1=s1.start,z=s1.count;for(let X=f1,q=f1+z;X<q;X+=3)T(i[X+0]),T(i[X+1]),T(i[X+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new tt(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let f=0,m=i.count;f<m;f++)i.setXYZ(f,0,0,0);const r=new N,s=new N,o=new N,a=new N,l=new N,c=new N,u=new N,h=new N;if(e)for(let f=0,m=e.count;f<m;f+=3){const g=e.getX(f+0),v=e.getX(f+1),p=e.getX(f+2);r.fromBufferAttribute(t,g),s.fromBufferAttribute(t,v),o.fromBufferAttribute(t,p),u.subVectors(o,s),h.subVectors(r,s),u.cross(h),a.fromBufferAttribute(i,g),l.fromBufferAttribute(i,v),c.fromBufferAttribute(i,p),a.add(u),l.add(u),c.add(u),i.setXYZ(g,a.x,a.y,a.z),i.setXYZ(v,l.x,l.y,l.z),i.setXYZ(p,c.x,c.y,c.z)}else for(let f=0,m=t.count;f<m;f+=3)r.fromBufferAttribute(t,f+0),s.fromBufferAttribute(t,f+1),o.fromBufferAttribute(t,f+2),u.subVectors(o,s),h.subVectors(r,s),u.cross(h),i.setXYZ(f+0,u.x,u.y,u.z),i.setXYZ(f+1,u.x,u.y,u.z),i.setXYZ(f+2,u.x,u.y,u.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)xe.fromBufferAttribute(e,t),xe.normalize(),e.setXYZ(t,xe.x,xe.y,xe.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,h=a.normalized,f=new c.constructor(l.length*u);let m=0,g=0;for(let v=0,p=l.length;v<p;v++){a.isInterleavedBufferAttribute?m=l[v]*a.data.stride+a.offset:m=l[v]*u;for(let d=0;d<u;d++)f[g++]=c[m++]}return new tt(f,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Se,i=this.index.array,r=this.attributes;for(const a in r){const l=r[a],c=e(l,i);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,h=c.length;u<h;u++){const f=c[u],m=e(f,i);l.push(m)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,f=c.length;h<f;h++){const m=c[h];u.push(m.toJSON(e.data))}u.length>0&&(r[l]=u,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(t));const r=e.attributes;for(const c in r){const u=r[c];this.setAttribute(c,u.clone(t))}const s=e.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,m=h.length;f<m;f++)u.push(h[f].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const i5=new ce,a2=new h3,m0=new j3,r5=new N,z2=new N,H2=new N,G2=new N,J4=new N,g0=new N,_0=new p1,v0=new p1,x0=new p1,s5=new N,o5=new N,a5=new N,y0=new N,M0=new N;class Be extends ie{constructor(e=new Se,t=new A2){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(e,t){const i=this.geometry,r=i.attributes.position,s=i.morphAttributes.position,o=i.morphTargetsRelative;t.fromBufferAttribute(r,e);const a=this.morphTargetInfluences;if(s&&a){g0.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const u=a[l],h=s[l];u!==0&&(J4.fromBufferAttribute(h,e),o?g0.addScaledVector(J4,u):g0.addScaledVector(J4.sub(t),u))}t.add(g0)}return t}raycast(e,t){const i=this.geometry,r=this.material,s=this.matrixWorld;r!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),m0.copy(i.boundingSphere),m0.applyMatrix4(s),a2.copy(e.ray).recast(e.near),!(m0.containsPoint(a2.origin)===!1&&(a2.intersectSphere(m0,r5)===null||a2.origin.distanceToSquared(r5)>(e.far-e.near)**2))&&(i5.copy(s).invert(),a2.copy(e.ray).applyMatrix4(i5),!(i.boundingBox!==null&&a2.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,a2)))}_computeIntersections(e,t,i){let r;const s=this.geometry,o=this.material,a=s.index,l=s.attributes.position,c=s.attributes.uv,u=s.attributes.uv1,h=s.attributes.normal,f=s.groups,m=s.drawRange;if(a!==null)if(Array.isArray(o))for(let g=0,v=f.length;g<v;g++){const p=f[g],d=o[p.materialIndex],w=Math.max(p.start,m.start),y=Math.min(a.count,Math.min(p.start+p.count,m.start+m.count));for(let b=w,B=y;b<B;b+=3){const R=a.getX(b),L=a.getX(b+1),t1=a.getX(b+2);r=S0(this,d,e,i,c,u,h,R,L,t1),r&&(r.faceIndex=Math.floor(b/3),r.face.materialIndex=p.materialIndex,t.push(r))}}else{const g=Math.max(0,m.start),v=Math.min(a.count,m.start+m.count);for(let p=g,d=v;p<d;p+=3){const w=a.getX(p),y=a.getX(p+1),b=a.getX(p+2);r=S0(this,o,e,i,c,u,h,w,y,b),r&&(r.faceIndex=Math.floor(p/3),t.push(r))}}else if(l!==void 0)if(Array.isArray(o))for(let g=0,v=f.length;g<v;g++){const p=f[g],d=o[p.materialIndex],w=Math.max(p.start,m.start),y=Math.min(l.count,Math.min(p.start+p.count,m.start+m.count));for(let b=w,B=y;b<B;b+=3){const R=b,L=b+1,t1=b+2;r=S0(this,d,e,i,c,u,h,R,L,t1),r&&(r.faceIndex=Math.floor(b/3),r.face.materialIndex=p.materialIndex,t.push(r))}}else{const g=Math.max(0,m.start),v=Math.min(l.count,m.start+m.count);for(let p=g,d=v;p<d;p+=3){const w=p,y=p+1,b=p+2;r=S0(this,o,e,i,c,u,h,w,y,b),r&&(r.faceIndex=Math.floor(p/3),t.push(r))}}}}function Ko(n,e,t,i,r,s,o,a){let l;if(e.side===He?l=i.intersectTriangle(o,s,r,!0,a):l=i.intersectTriangle(r,s,o,e.side===$t,a),l===null)return null;M0.copy(a),M0.applyMatrix4(n.matrixWorld);const c=t.ray.origin.distanceTo(M0);return c<t.near||c>t.far?null:{distance:c,point:M0.clone(),object:n}}function S0(n,e,t,i,r,s,o,a,l,c){n.getVertexPosition(a,z2),n.getVertexPosition(l,H2),n.getVertexPosition(c,G2);const u=Ko(n,e,t,i,z2,H2,G2,y0);if(u){r&&(_0.fromBufferAttribute(r,a),v0.fromBufferAttribute(r,l),x0.fromBufferAttribute(r,c),u.uv=$e.getInterpolation(y0,z2,H2,G2,_0,v0,x0,new p1)),s&&(_0.fromBufferAttribute(s,a),v0.fromBufferAttribute(s,l),x0.fromBufferAttribute(s,c),u.uv1=$e.getInterpolation(y0,z2,H2,G2,_0,v0,x0,new p1),u.uv2=u.uv1),o&&(s5.fromBufferAttribute(o,a),o5.fromBufferAttribute(o,l),a5.fromBufferAttribute(o,c),u.normal=$e.getInterpolation(y0,z2,H2,G2,s5,o5,a5,new N),u.normal.dot(i.direction)>0&&u.normal.multiplyScalar(-1));const h={a,b:l,c,normal:new N,materialIndex:0};$e.getNormal(z2,H2,G2,h.normal),u.face=h}return u}class K3 extends Se{constructor(e=1,t=1,i=1,r=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:s,depthSegments:o};const a=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],h=[];let f=0,m=0;g("z","y","x",-1,-1,i,t,e,o,s,0),g("z","y","x",1,-1,i,t,-e,o,s,1),g("x","z","y",1,1,e,i,t,r,o,2),g("x","z","y",1,-1,e,i,-t,r,o,3),g("x","y","z",1,-1,e,t,i,r,s,4),g("x","y","z",-1,-1,e,t,-i,r,s,5),this.setIndex(l),this.setAttribute("position",new fe(c,3)),this.setAttribute("normal",new fe(u,3)),this.setAttribute("uv",new fe(h,2));function g(v,p,d,w,y,b,B,R,L,t1,T){const A=b/L,Y=B/t1,s1=b/2,f1=B/2,z=R/2,X=L+1,q=t1+1;let J=0,Z=0;const i1=new N;for(let o1=0;o1<q;o1++){const u1=o1*Y-f1;for(let h1=0;h1<X;h1++){const Q=h1*A-s1;i1[v]=Q*w,i1[p]=u1*y,i1[d]=z,c.push(i1.x,i1.y,i1.z),i1[v]=0,i1[p]=0,i1[d]=R>0?1:-1,u.push(i1.x,i1.y,i1.z),h.push(h1/L),h.push(1-o1/t1),J+=1}}for(let o1=0;o1<t1;o1++)for(let u1=0;u1<L;u1++){const h1=f+u1+X*o1,Q=f+u1+X*(o1+1),c1=f+(u1+1)+X*(o1+1),M1=f+(u1+1)+X*o1;l.push(h1,Q,M1),l.push(Q,c1,M1),Z+=6}a.addGroup(m,Z,T),m+=Z,f+=J}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new K3(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function c3(n){const e={};for(const t in n){e[t]={};for(const i in n[t]){const r=n[t][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=r.clone():Array.isArray(r)?e[t][i]=r.slice():e[t][i]=r}}return e}function Ne(n){const e={};for(let t=0;t<n.length;t++){const i=c3(n[t]);for(const r in i)e[r]=i[r]}return e}function Zo(n){const e=[];for(let t=0;t<n.length;t++)e.push(n[t].clone());return e}function o7(n){return n.getRenderTarget()===null?n.outputColorSpace:ne.workingColorSpace}const $o={clone:c3,merge:Ne};var Jo=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Qo=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Lt extends Qt{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Jo,this.fragmentShader=Qo,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1,clipCullDistance:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=c3(e.uniforms),this.uniformsGroups=Zo(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const o=this.uniforms[r].value;o&&o.isTexture?t.uniforms[r]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[r]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[r]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[r]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[r]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[r]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[r]={type:"m4",value:o.toArray()}:t.uniforms[r]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class a7 extends ie{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ce,this.projectionMatrix=new ce,this.projectionMatrixInverse=new ce,this.coordinateSystem=Rt}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Je extends a7{constructor(e=50,t=1,i=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=G3*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(R3*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return G3*2*Math.atan(Math.tan(R3*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,i,r,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(R3*.5*this.fov)/this.zoom,i=2*t,r=this.aspect*i,s=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*r/l,t-=o.offsetY*i/c,r*=o.width/l,i*=o.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const V2=-90,W2=1;class ea extends ie{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new Je(V2,W2,e,t);r.layers=this.layers,this.add(r);const s=new Je(V2,W2,e,t);s.layers=this.layers,this.add(s);const o=new Je(V2,W2,e,t);o.layers=this.layers,this.add(o);const a=new Je(V2,W2,e,t);a.layers=this.layers,this.add(a);const l=new Je(V2,W2,e,t);l.layers=this.layers,this.add(l);const c=new Je(V2,W2,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,r,s,o,a,l]=t;for(const c of t)this.remove(c);if(e===Rt)i.up.set(0,1,0),i.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===$0)i.up.set(0,-1,0),i.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,o,a,l,c,u]=this.children,h=e.getRenderTarget(),f=e.getActiveCubeFace(),m=e.getActiveMipmapLevel(),g=e.xr.enabled;e.xr.enabled=!1;const v=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,r),e.render(t,s),e.setRenderTarget(i,1,r),e.render(t,o),e.setRenderTarget(i,2,r),e.render(t,a),e.setRenderTarget(i,3,r),e.render(t,l),e.setRenderTarget(i,4,r),e.render(t,c),i.texture.generateMipmaps=v,e.setRenderTarget(i,5,r),e.render(t,u),e.setRenderTarget(h,f,m),e.xr.enabled=g,i.texture.needsPMREMUpdate=!0}}class l7 extends Ge{constructor(e,t,i,r,s,o,a,l,c,u){e=e!==void 0?e:[],t=t!==void 0?t:o3,super(e,t,i,r,s,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class ta extends y2{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},r=[i,i,i,i,i,i];t.encoding!==void 0&&(P3("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===v2?Ee:Qe),this.texture=new l7(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Ze}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new K3(5,5,5),s=new Lt({name:"CubemapFromEquirect",uniforms:c3(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:He,blending:jt});s.uniforms.tEquirect.value=t;const o=new Be(r,s),a=t.minFilter;return t.minFilter===z3&&(t.minFilter=Ze),new ea(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,i,r){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,i,r);e.setRenderTarget(s)}}const Q4=new N,na=new N,ia=new j1;class Wt{constructor(e=new N(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const r=Q4.subVectors(i,t).cross(na.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(Q4),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(e.start).addScaledVector(i,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||ia.getNormalMatrix(e),r=this.coplanarPoint(Q4).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const l2=new j3,E0=new N;class v9{constructor(e=new Wt,t=new Wt,i=new Wt,r=new Wt,s=new Wt,o=new Wt){this.planes=[e,t,i,r,s,o]}set(e,t,i,r,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(r),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=Rt){const i=this.planes,r=e.elements,s=r[0],o=r[1],a=r[2],l=r[3],c=r[4],u=r[5],h=r[6],f=r[7],m=r[8],g=r[9],v=r[10],p=r[11],d=r[12],w=r[13],y=r[14],b=r[15];if(i[0].setComponents(l-s,f-c,p-m,b-d).normalize(),i[1].setComponents(l+s,f+c,p+m,b+d).normalize(),i[2].setComponents(l+o,f+u,p+g,b+w).normalize(),i[3].setComponents(l-o,f-u,p-g,b-w).normalize(),i[4].setComponents(l-a,f-h,p-v,b-y).normalize(),t===Rt)i[5].setComponents(l+a,f+h,p+v,b+y).normalize();else if(t===$0)i[5].setComponents(a,h,v,y).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),l2.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),l2.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(l2)}intersectsSprite(e){return l2.center.set(0,0,0),l2.radius=.7071067811865476,l2.applyMatrix4(e.matrixWorld),this.intersectsSphere(l2)}intersectsSphere(e){const t=this.planes,i=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const r=t[i];if(E0.x=r.normal.x>0?e.max.x:e.min.x,E0.y=r.normal.y>0?e.max.y:e.min.y,E0.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(E0)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function c7(){let n=null,e=!1,t=null,i=null;function r(s,o){t(s,o),i=n.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(i=n.requestAnimationFrame(r),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){n=s}}}function ra(n,e){const t=e.isWebGL2,i=new WeakMap;function r(c,u){const h=c.array,f=c.usage,m=h.byteLength,g=n.createBuffer();n.bindBuffer(u,g),n.bufferData(u,h,f),c.onUploadCallback();let v;if(h instanceof Float32Array)v=n.FLOAT;else if(h instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(t)v=n.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else v=n.UNSIGNED_SHORT;else if(h instanceof Int16Array)v=n.SHORT;else if(h instanceof Uint32Array)v=n.UNSIGNED_INT;else if(h instanceof Int32Array)v=n.INT;else if(h instanceof Int8Array)v=n.BYTE;else if(h instanceof Uint8Array)v=n.UNSIGNED_BYTE;else if(h instanceof Uint8ClampedArray)v=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:g,type:v,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version,size:m}}function s(c,u,h){const f=u.array,m=u._updateRange,g=u.updateRanges;if(n.bindBuffer(h,c),m.count===-1&&g.length===0&&n.bufferSubData(h,0,f),g.length!==0){for(let v=0,p=g.length;v<p;v++){const d=g[v];t?n.bufferSubData(h,d.start*f.BYTES_PER_ELEMENT,f,d.start,d.count):n.bufferSubData(h,d.start*f.BYTES_PER_ELEMENT,f.subarray(d.start,d.start+d.count))}u.clearUpdateRanges()}m.count!==-1&&(t?n.bufferSubData(h,m.offset*f.BYTES_PER_ELEMENT,f,m.offset,m.count):n.bufferSubData(h,m.offset*f.BYTES_PER_ELEMENT,f.subarray(m.offset,m.offset+m.count)),m.count=-1),u.onUploadCallback()}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=i.get(c);u&&(n.deleteBuffer(u.buffer),i.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const f=i.get(c);(!f||f.version<c.version)&&i.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=i.get(c);if(h===void 0)i.set(c,r(c,u));else if(h.version<c.version){if(h.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");s(h.buffer,c,u),h.version=c.version}}return{get:o,remove:a,update:l}}class e2 extends Se{constructor(e=1,t=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};const s=e/2,o=t/2,a=Math.floor(i),l=Math.floor(r),c=a+1,u=l+1,h=e/a,f=t/l,m=[],g=[],v=[],p=[];for(let d=0;d<u;d++){const w=d*f-o;for(let y=0;y<c;y++){const b=y*h-s;g.push(b,-w,0),v.push(0,0,1),p.push(y/a),p.push(1-d/l)}}for(let d=0;d<l;d++)for(let w=0;w<a;w++){const y=w+c*d,b=w+c*(d+1),B=w+1+c*(d+1),R=w+1+c*d;m.push(y,b,R),m.push(b,B,R)}this.setIndex(m),this.setAttribute("position",new fe(g,3)),this.setAttribute("normal",new fe(v,3)),this.setAttribute("uv",new fe(p,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new e2(e.width,e.height,e.widthSegments,e.heightSegments)}}var sa=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,oa=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,aa=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,la=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,ca=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,ua=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,ha=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,fa=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,da=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,pa=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,ma=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,ga=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,_a=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,va=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,xa=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,ya=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Ma=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Sa=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Ea=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,ba=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Ta=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Aa=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,wa=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Ra=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,Ca=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Pa=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,La=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Da=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,Ia=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Ua=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Na="gl_FragColor = linearToOutputTexel( gl_FragColor );",Oa=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,Fa=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Ba=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,za=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Ha=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Ga=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Va=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Wa=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,ka=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Xa=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,qa=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Ya=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,ja=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Ka=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Za=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,$a=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Ja=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,Qa=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,el=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,tl=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,nl=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,il=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,rl=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,sl=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,ol=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,al=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,ll=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,cl=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,ul=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,hl=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,fl=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,dl=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,pl=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,ml=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,gl=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,_l=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,vl=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,xl=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,yl=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Ml=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Sl=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,El=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,bl=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Tl=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Al=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,wl=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,Rl=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,Cl=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,Pl=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,Ll=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Dl=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Il=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,Ul=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Nl=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Ol=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Fl=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Bl=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,zl=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Hl=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Gl=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Vl=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,Wl=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,kl=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Xl=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,ql=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Yl=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,jl=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Kl=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Zl=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,$l=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color *= toneMappingExposure;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	return color;
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Jl=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,Ql=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,ec=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,tc=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,nc=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,ic=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const rc=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,sc=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,oc=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,ac=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,lc=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,cc=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,uc=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,hc=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,fc=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,dc=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,pc=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,mc=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,gc=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,_c=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,vc=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,xc=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,yc=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Mc=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Sc=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Ec=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,bc=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Tc=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Ac=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,wc=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Rc=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Cc=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Pc=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Lc=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Dc=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Ic=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Uc=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Nc=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Oc=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Fc=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,H1={alphahash_fragment:sa,alphahash_pars_fragment:oa,alphamap_fragment:aa,alphamap_pars_fragment:la,alphatest_fragment:ca,alphatest_pars_fragment:ua,aomap_fragment:ha,aomap_pars_fragment:fa,batching_pars_vertex:da,batching_vertex:pa,begin_vertex:ma,beginnormal_vertex:ga,bsdfs:_a,iridescence_fragment:va,bumpmap_pars_fragment:xa,clipping_planes_fragment:ya,clipping_planes_pars_fragment:Ma,clipping_planes_pars_vertex:Sa,clipping_planes_vertex:Ea,color_fragment:ba,color_pars_fragment:Ta,color_pars_vertex:Aa,color_vertex:wa,common:Ra,cube_uv_reflection_fragment:Ca,defaultnormal_vertex:Pa,displacementmap_pars_vertex:La,displacementmap_vertex:Da,emissivemap_fragment:Ia,emissivemap_pars_fragment:Ua,colorspace_fragment:Na,colorspace_pars_fragment:Oa,envmap_fragment:Fa,envmap_common_pars_fragment:Ba,envmap_pars_fragment:za,envmap_pars_vertex:Ha,envmap_physical_pars_fragment:Ja,envmap_vertex:Ga,fog_vertex:Va,fog_pars_vertex:Wa,fog_fragment:ka,fog_pars_fragment:Xa,gradientmap_pars_fragment:qa,lightmap_fragment:Ya,lightmap_pars_fragment:ja,lights_lambert_fragment:Ka,lights_lambert_pars_fragment:Za,lights_pars_begin:$a,lights_toon_fragment:Qa,lights_toon_pars_fragment:el,lights_phong_fragment:tl,lights_phong_pars_fragment:nl,lights_physical_fragment:il,lights_physical_pars_fragment:rl,lights_fragment_begin:sl,lights_fragment_maps:ol,lights_fragment_end:al,logdepthbuf_fragment:ll,logdepthbuf_pars_fragment:cl,logdepthbuf_pars_vertex:ul,logdepthbuf_vertex:hl,map_fragment:fl,map_pars_fragment:dl,map_particle_fragment:pl,map_particle_pars_fragment:ml,metalnessmap_fragment:gl,metalnessmap_pars_fragment:_l,morphcolor_vertex:vl,morphnormal_vertex:xl,morphtarget_pars_vertex:yl,morphtarget_vertex:Ml,normal_fragment_begin:Sl,normal_fragment_maps:El,normal_pars_fragment:bl,normal_pars_vertex:Tl,normal_vertex:Al,normalmap_pars_fragment:wl,clearcoat_normal_fragment_begin:Rl,clearcoat_normal_fragment_maps:Cl,clearcoat_pars_fragment:Pl,iridescence_pars_fragment:Ll,opaque_fragment:Dl,packing:Il,premultiplied_alpha_fragment:Ul,project_vertex:Nl,dithering_fragment:Ol,dithering_pars_fragment:Fl,roughnessmap_fragment:Bl,roughnessmap_pars_fragment:zl,shadowmap_pars_fragment:Hl,shadowmap_pars_vertex:Gl,shadowmap_vertex:Vl,shadowmask_pars_fragment:Wl,skinbase_vertex:kl,skinning_pars_vertex:Xl,skinning_vertex:ql,skinnormal_vertex:Yl,specularmap_fragment:jl,specularmap_pars_fragment:Kl,tonemapping_fragment:Zl,tonemapping_pars_fragment:$l,transmission_fragment:Jl,transmission_pars_fragment:Ql,uv_pars_fragment:ec,uv_pars_vertex:tc,uv_vertex:nc,worldpos_vertex:ic,background_vert:rc,background_frag:sc,backgroundCube_vert:oc,backgroundCube_frag:ac,cube_vert:lc,cube_frag:cc,depth_vert:uc,depth_frag:hc,distanceRGBA_vert:fc,distanceRGBA_frag:dc,equirect_vert:pc,equirect_frag:mc,linedashed_vert:gc,linedashed_frag:_c,meshbasic_vert:vc,meshbasic_frag:xc,meshlambert_vert:yc,meshlambert_frag:Mc,meshmatcap_vert:Sc,meshmatcap_frag:Ec,meshnormal_vert:bc,meshnormal_frag:Tc,meshphong_vert:Ac,meshphong_frag:wc,meshphysical_vert:Rc,meshphysical_frag:Cc,meshtoon_vert:Pc,meshtoon_frag:Lc,points_vert:Dc,points_frag:Ic,shadow_vert:Uc,shadow_frag:Nc,sprite_vert:Oc,sprite_frag:Fc},y1={common:{diffuse:{value:new K1(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new j1},alphaMap:{value:null},alphaMapTransform:{value:new j1},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new j1}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new j1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new j1}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new j1},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new j1},normalScale:{value:new p1(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new j1},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new j1}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new j1}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new j1}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new K1(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new K1(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new j1},alphaTest:{value:0},uvTransform:{value:new j1}},sprite:{diffuse:{value:new K1(16777215)},opacity:{value:1},center:{value:new p1(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new j1},alphaMap:{value:null},alphaMapTransform:{value:new j1},alphaTest:{value:0}}},pt={basic:{uniforms:Ne([y1.common,y1.specularmap,y1.envmap,y1.aomap,y1.lightmap,y1.fog]),vertexShader:H1.meshbasic_vert,fragmentShader:H1.meshbasic_frag},lambert:{uniforms:Ne([y1.common,y1.specularmap,y1.envmap,y1.aomap,y1.lightmap,y1.emissivemap,y1.bumpmap,y1.normalmap,y1.displacementmap,y1.fog,y1.lights,{emissive:{value:new K1(0)}}]),vertexShader:H1.meshlambert_vert,fragmentShader:H1.meshlambert_frag},phong:{uniforms:Ne([y1.common,y1.specularmap,y1.envmap,y1.aomap,y1.lightmap,y1.emissivemap,y1.bumpmap,y1.normalmap,y1.displacementmap,y1.fog,y1.lights,{emissive:{value:new K1(0)},specular:{value:new K1(1118481)},shininess:{value:30}}]),vertexShader:H1.meshphong_vert,fragmentShader:H1.meshphong_frag},standard:{uniforms:Ne([y1.common,y1.envmap,y1.aomap,y1.lightmap,y1.emissivemap,y1.bumpmap,y1.normalmap,y1.displacementmap,y1.roughnessmap,y1.metalnessmap,y1.fog,y1.lights,{emissive:{value:new K1(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:H1.meshphysical_vert,fragmentShader:H1.meshphysical_frag},toon:{uniforms:Ne([y1.common,y1.aomap,y1.lightmap,y1.emissivemap,y1.bumpmap,y1.normalmap,y1.displacementmap,y1.gradientmap,y1.fog,y1.lights,{emissive:{value:new K1(0)}}]),vertexShader:H1.meshtoon_vert,fragmentShader:H1.meshtoon_frag},matcap:{uniforms:Ne([y1.common,y1.bumpmap,y1.normalmap,y1.displacementmap,y1.fog,{matcap:{value:null}}]),vertexShader:H1.meshmatcap_vert,fragmentShader:H1.meshmatcap_frag},points:{uniforms:Ne([y1.points,y1.fog]),vertexShader:H1.points_vert,fragmentShader:H1.points_frag},dashed:{uniforms:Ne([y1.common,y1.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:H1.linedashed_vert,fragmentShader:H1.linedashed_frag},depth:{uniforms:Ne([y1.common,y1.displacementmap]),vertexShader:H1.depth_vert,fragmentShader:H1.depth_frag},normal:{uniforms:Ne([y1.common,y1.bumpmap,y1.normalmap,y1.displacementmap,{opacity:{value:1}}]),vertexShader:H1.meshnormal_vert,fragmentShader:H1.meshnormal_frag},sprite:{uniforms:Ne([y1.sprite,y1.fog]),vertexShader:H1.sprite_vert,fragmentShader:H1.sprite_frag},background:{uniforms:{uvTransform:{value:new j1},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:H1.background_vert,fragmentShader:H1.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:H1.backgroundCube_vert,fragmentShader:H1.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:H1.cube_vert,fragmentShader:H1.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:H1.equirect_vert,fragmentShader:H1.equirect_frag},distanceRGBA:{uniforms:Ne([y1.common,y1.displacementmap,{referencePosition:{value:new N},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:H1.distanceRGBA_vert,fragmentShader:H1.distanceRGBA_frag},shadow:{uniforms:Ne([y1.lights,y1.fog,{color:{value:new K1(0)},opacity:{value:1}}]),vertexShader:H1.shadow_vert,fragmentShader:H1.shadow_frag}};pt.physical={uniforms:Ne([pt.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new j1},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new j1},clearcoatNormalScale:{value:new p1(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new j1},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new j1},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new j1},sheen:{value:0},sheenColor:{value:new K1(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new j1},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new j1},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new j1},transmissionSamplerSize:{value:new p1},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new j1},attenuationDistance:{value:0},attenuationColor:{value:new K1(0)},specularColor:{value:new K1(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new j1},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new j1},anisotropyVector:{value:new p1},anisotropyMap:{value:null},anisotropyMapTransform:{value:new j1}}]),vertexShader:H1.meshphysical_vert,fragmentShader:H1.meshphysical_frag};const b0={r:0,b:0,g:0};function Bc(n,e,t,i,r,s,o){const a=new K1(0);let l=s===!0?0:1,c,u,h=null,f=0,m=null;function g(p,d){let w=!1,y=d.isScene===!0?d.background:null;y&&y.isTexture&&(y=(d.backgroundBlurriness>0?t:e).get(y)),y===null?v(a,l):y&&y.isColor&&(v(y,1),w=!0);const b=n.xr.getEnvironmentBlendMode();b==="additive"?i.buffers.color.setClear(0,0,0,1,o):b==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,o),(n.autoClear||w)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil),y&&(y.isCubeTexture||y.mapping===h4)?(u===void 0&&(u=new Be(new K3(1,1,1),new Lt({name:"BackgroundCubeMaterial",uniforms:c3(pt.backgroundCube.uniforms),vertexShader:pt.backgroundCube.vertexShader,fragmentShader:pt.backgroundCube.fragmentShader,side:He,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(B,R,L){this.matrixWorld.copyPosition(L.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(u)),u.material.uniforms.envMap.value=y,u.material.uniforms.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=d.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=d.backgroundIntensity,u.material.toneMapped=ne.getTransfer(y.colorSpace)!==se,(h!==y||f!==y.version||m!==n.toneMapping)&&(u.material.needsUpdate=!0,h=y,f=y.version,m=n.toneMapping),u.layers.enableAll(),p.unshift(u,u.geometry,u.material,0,0,null)):y&&y.isTexture&&(c===void 0&&(c=new Be(new e2(2,2),new Lt({name:"BackgroundMaterial",uniforms:c3(pt.background.uniforms),vertexShader:pt.background.vertexShader,fragmentShader:pt.background.fragmentShader,side:$t,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(c)),c.material.uniforms.t2D.value=y,c.material.uniforms.backgroundIntensity.value=d.backgroundIntensity,c.material.toneMapped=ne.getTransfer(y.colorSpace)!==se,y.matrixAutoUpdate===!0&&y.updateMatrix(),c.material.uniforms.uvTransform.value.copy(y.matrix),(h!==y||f!==y.version||m!==n.toneMapping)&&(c.material.needsUpdate=!0,h=y,f=y.version,m=n.toneMapping),c.layers.enableAll(),p.unshift(c,c.geometry,c.material,0,0,null))}function v(p,d){p.getRGB(b0,o7(n)),i.buffers.color.setClear(b0.r,b0.g,b0.b,d,o)}return{getClearColor:function(){return a},setClearColor:function(p,d=1){a.set(p),l=d,v(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(p){l=p,v(a,l)},render:g}}function zc(n,e,t,i){const r=n.getParameter(n.MAX_VERTEX_ATTRIBS),s=i.isWebGL2?null:e.get("OES_vertex_array_object"),o=i.isWebGL2||s!==null,a={},l=p(null);let c=l,u=!1;function h(z,X,q,J,Z){let i1=!1;if(o){const o1=v(J,q,X);c!==o1&&(c=o1,m(c.object)),i1=d(z,J,q,Z),i1&&w(z,J,q,Z)}else{const o1=X.wireframe===!0;(c.geometry!==J.id||c.program!==q.id||c.wireframe!==o1)&&(c.geometry=J.id,c.program=q.id,c.wireframe=o1,i1=!0)}Z!==null&&t.update(Z,n.ELEMENT_ARRAY_BUFFER),(i1||u)&&(u=!1,t1(z,X,q,J),Z!==null&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t.get(Z).buffer))}function f(){return i.isWebGL2?n.createVertexArray():s.createVertexArrayOES()}function m(z){return i.isWebGL2?n.bindVertexArray(z):s.bindVertexArrayOES(z)}function g(z){return i.isWebGL2?n.deleteVertexArray(z):s.deleteVertexArrayOES(z)}function v(z,X,q){const J=q.wireframe===!0;let Z=a[z.id];Z===void 0&&(Z={},a[z.id]=Z);let i1=Z[X.id];i1===void 0&&(i1={},Z[X.id]=i1);let o1=i1[J];return o1===void 0&&(o1=p(f()),i1[J]=o1),o1}function p(z){const X=[],q=[],J=[];for(let Z=0;Z<r;Z++)X[Z]=0,q[Z]=0,J[Z]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:X,enabledAttributes:q,attributeDivisors:J,object:z,attributes:{},index:null}}function d(z,X,q,J){const Z=c.attributes,i1=X.attributes;let o1=0;const u1=q.getAttributes();for(const h1 in u1)if(u1[h1].location>=0){const c1=Z[h1];let M1=i1[h1];if(M1===void 0&&(h1==="instanceMatrix"&&z.instanceMatrix&&(M1=z.instanceMatrix),h1==="instanceColor"&&z.instanceColor&&(M1=z.instanceColor)),c1===void 0||c1.attribute!==M1||M1&&c1.data!==M1.data)return!0;o1++}return c.attributesNum!==o1||c.index!==J}function w(z,X,q,J){const Z={},i1=X.attributes;let o1=0;const u1=q.getAttributes();for(const h1 in u1)if(u1[h1].location>=0){let c1=i1[h1];c1===void 0&&(h1==="instanceMatrix"&&z.instanceMatrix&&(c1=z.instanceMatrix),h1==="instanceColor"&&z.instanceColor&&(c1=z.instanceColor));const M1={};M1.attribute=c1,c1&&c1.data&&(M1.data=c1.data),Z[h1]=M1,o1++}c.attributes=Z,c.attributesNum=o1,c.index=J}function y(){const z=c.newAttributes;for(let X=0,q=z.length;X<q;X++)z[X]=0}function b(z){B(z,0)}function B(z,X){const q=c.newAttributes,J=c.enabledAttributes,Z=c.attributeDivisors;q[z]=1,J[z]===0&&(n.enableVertexAttribArray(z),J[z]=1),Z[z]!==X&&((i.isWebGL2?n:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](z,X),Z[z]=X)}function R(){const z=c.newAttributes,X=c.enabledAttributes;for(let q=0,J=X.length;q<J;q++)X[q]!==z[q]&&(n.disableVertexAttribArray(q),X[q]=0)}function L(z,X,q,J,Z,i1,o1){o1===!0?n.vertexAttribIPointer(z,X,q,Z,i1):n.vertexAttribPointer(z,X,q,J,Z,i1)}function t1(z,X,q,J){if(i.isWebGL2===!1&&(z.isInstancedMesh||J.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;y();const Z=J.attributes,i1=q.getAttributes(),o1=X.defaultAttributeValues;for(const u1 in i1){const h1=i1[u1];if(h1.location>=0){let Q=Z[u1];if(Q===void 0&&(u1==="instanceMatrix"&&z.instanceMatrix&&(Q=z.instanceMatrix),u1==="instanceColor"&&z.instanceColor&&(Q=z.instanceColor)),Q!==void 0){const c1=Q.normalized,M1=Q.itemSize,b1=t.get(Q);if(b1===void 0)continue;const S1=b1.buffer,P1=b1.type,N1=b1.bytesPerElement,w1=i.isWebGL2===!0&&(P1===n.INT||P1===n.UNSIGNED_INT||Q.gpuType===Wi);if(Q.isInterleavedBufferAttribute){const I1=Q.data,D=I1.stride,M=Q.offset;if(I1.isInstancedInterleavedBuffer){for(let S=0;S<h1.locationSize;S++)B(h1.location+S,I1.meshPerAttribute);z.isInstancedMesh!==!0&&J._maxInstanceCount===void 0&&(J._maxInstanceCount=I1.meshPerAttribute*I1.count)}else for(let S=0;S<h1.locationSize;S++)b(h1.location+S);n.bindBuffer(n.ARRAY_BUFFER,S1);for(let S=0;S<h1.locationSize;S++)L(h1.location+S,M1/h1.locationSize,P1,c1,D*N1,(M+M1/h1.locationSize*S)*N1,w1)}else{if(Q.isInstancedBufferAttribute){for(let I1=0;I1<h1.locationSize;I1++)B(h1.location+I1,Q.meshPerAttribute);z.isInstancedMesh!==!0&&J._maxInstanceCount===void 0&&(J._maxInstanceCount=Q.meshPerAttribute*Q.count)}else for(let I1=0;I1<h1.locationSize;I1++)b(h1.location+I1);n.bindBuffer(n.ARRAY_BUFFER,S1);for(let I1=0;I1<h1.locationSize;I1++)L(h1.location+I1,M1/h1.locationSize,P1,c1,M1*N1,M1/h1.locationSize*I1*N1,w1)}}else if(o1!==void 0){const c1=o1[u1];if(c1!==void 0)switch(c1.length){case 2:n.vertexAttrib2fv(h1.location,c1);break;case 3:n.vertexAttrib3fv(h1.location,c1);break;case 4:n.vertexAttrib4fv(h1.location,c1);break;default:n.vertexAttrib1fv(h1.location,c1)}}}}R()}function T(){s1();for(const z in a){const X=a[z];for(const q in X){const J=X[q];for(const Z in J)g(J[Z].object),delete J[Z];delete X[q]}delete a[z]}}function A(z){if(a[z.id]===void 0)return;const X=a[z.id];for(const q in X){const J=X[q];for(const Z in J)g(J[Z].object),delete J[Z];delete X[q]}delete a[z.id]}function Y(z){for(const X in a){const q=a[X];if(q[z.id]===void 0)continue;const J=q[z.id];for(const Z in J)g(J[Z].object),delete J[Z];delete q[z.id]}}function s1(){f1(),u=!0,c!==l&&(c=l,m(c.object))}function f1(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:s1,resetDefaultState:f1,dispose:T,releaseStatesOfGeometry:A,releaseStatesOfProgram:Y,initAttributes:y,enableAttribute:b,disableUnusedAttributes:R}}function Hc(n,e,t,i){const r=i.isWebGL2;let s;function o(u){s=u}function a(u,h){n.drawArrays(s,u,h),t.update(h,s,1)}function l(u,h,f){if(f===0)return;let m,g;if(r)m=n,g="drawArraysInstanced";else if(m=e.get("ANGLE_instanced_arrays"),g="drawArraysInstancedANGLE",m===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[g](s,u,h,f),t.update(h,s,f)}function c(u,h,f){if(f===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let g=0;g<f;g++)this.render(u[g],h[g]);else{m.multiDrawArraysWEBGL(s,u,0,h,0,f);let g=0;for(let v=0;v<f;v++)g+=h[v];t.update(g,s,1)}}this.setMode=o,this.render=a,this.renderInstances=l,this.renderMultiDraw=c}function Gc(n,e,t){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const L=e.get("EXT_texture_filter_anisotropic");i=n.getParameter(L.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function s(L){if(L==="highp"){if(n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT).precision>0)return"highp";L="mediump"}return L==="mediump"&&n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&n.constructor.name==="WebGL2RenderingContext";let a=t.precision!==void 0?t.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,h=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),f=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),m=n.getParameter(n.MAX_TEXTURE_SIZE),g=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),v=n.getParameter(n.MAX_VERTEX_ATTRIBS),p=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),d=n.getParameter(n.MAX_VARYING_VECTORS),w=n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),y=f>0,b=o||e.has("OES_texture_float"),B=y&&b,R=o?n.getParameter(n.MAX_SAMPLES):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:r,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:f,maxTextureSize:m,maxCubemapSize:g,maxAttributes:v,maxVertexUniforms:p,maxVaryings:d,maxFragmentUniforms:w,vertexTextures:y,floatFragmentTextures:b,floatVertexTextures:B,maxSamples:R}}function Vc(n){const e=this;let t=null,i=0,r=!1,s=!1;const o=new Wt,a=new j1,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,f){const m=h.length!==0||f||i!==0||r;return r=f,i=h.length,m},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(h,f){t=u(h,f,0)},this.setState=function(h,f,m){const g=h.clippingPlanes,v=h.clipIntersection,p=h.clipShadows,d=n.get(h);if(!r||g===null||g.length===0||s&&!p)s?u(null):c();else{const w=s?0:i,y=w*4;let b=d.clippingState||null;l.value=b,b=u(g,f,y,m);for(let B=0;B!==y;++B)b[B]=t[B];d.clippingState=b,this.numIntersection=v?this.numPlanes:0,this.numPlanes+=w}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function u(h,f,m,g){const v=h!==null?h.length:0;let p=null;if(v!==0){if(p=l.value,g!==!0||p===null){const d=m+v*4,w=f.matrixWorldInverse;a.getNormalMatrix(w),(p===null||p.length<d)&&(p=new Float32Array(d));for(let y=0,b=m;y!==v;++y,b+=4)o.copy(h[y]).applyMatrix4(w,a),o.normal.toArray(p,b),p[b+3]=o.constant}l.value=p,l.needsUpdate=!0}return e.numPlanes=v,e.numIntersection=0,p}}function Wc(n){let e=new WeakMap;function t(o,a){return a===Ln?o.mapping=o3:a===Dn&&(o.mapping=a3),o}function i(o){if(o&&o.isTexture){const a=o.mapping;if(a===Ln||a===Dn)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new ta(l.height/2);return c.fromEquirectangularTexture(n,o),e.set(o,c),o.addEventListener("dispose",r),t(c.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}class u7 extends a7{constructor(e=-1,t=1,i=1,r=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,r,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=i-e,o=i+e,a=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Z2=4,l5=[.125,.215,.35,.446,.526,.582],f2=20,en=new u7,c5=new K1;let tn=null,nn=0,rn=0;const c2=(1+Math.sqrt(5))/2,k2=1/c2,u5=[new N(1,1,1),new N(-1,1,1),new N(1,1,-1),new N(-1,1,-1),new N(0,c2,k2),new N(0,c2,-k2),new N(k2,0,c2),new N(-k2,0,c2),new N(c2,k2,0),new N(-c2,k2,0)];class h5{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,r=100){tn=this._renderer.getRenderTarget(),nn=this._renderer.getActiveCubeFace(),rn=this._renderer.getActiveMipmapLevel(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,i,r,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=p5(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=d5(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(tn,nn,rn),e.scissorTest=!1,T0(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===o3||e.mapping===a3?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),tn=this._renderer.getRenderTarget(),nn=this._renderer.getActiveCubeFace(),rn=this._renderer.getActiveMipmapLevel();const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:Ze,minFilter:Ze,generateMipmaps:!1,type:H3,format:lt,colorSpace:Pt,depthBuffer:!1},r=f5(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=f5(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=kc(s)),this._blurMaterial=Xc(s,e,t)}return r}_compileMaterial(e){const t=new Be(this._lodPlanes[0],e);this._renderer.compile(t,en)}_sceneToCubeUV(e,t,i,r){const a=new Je(90,1,t,i),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,f=u.toneMapping;u.getClearColor(c5),u.toneMapping=Kt,u.autoClear=!1;const m=new A2({name:"PMREM.Background",side:He,depthWrite:!1,depthTest:!1}),g=new Be(new K3,m);let v=!1;const p=e.background;p?p.isColor&&(m.color.copy(p),e.background=null,v=!0):(m.color.copy(c5),v=!0);for(let d=0;d<6;d++){const w=d%3;w===0?(a.up.set(0,l[d],0),a.lookAt(c[d],0,0)):w===1?(a.up.set(0,0,l[d]),a.lookAt(0,c[d],0)):(a.up.set(0,l[d],0),a.lookAt(0,0,c[d]));const y=this._cubeSize;T0(r,w*y,d>2?y:0,y,y),u.setRenderTarget(r),v&&u.render(g,a),u.render(e,a)}g.geometry.dispose(),g.material.dispose(),u.toneMapping=f,u.autoClear=h,e.background=p}_textureToCubeUV(e,t){const i=this._renderer,r=e.mapping===o3||e.mapping===a3;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=p5()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=d5());const s=r?this._cubemapMaterial:this._equirectMaterial,o=new Be(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;T0(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(o,en)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const s=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),o=u5[(r-1)%u5.length];this._blur(e,r-1,r,s,o)}t.autoClear=i}_blur(e,t,i,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,i,r,"latitudinal",s),this._halfBlur(o,e,i,i,r,"longitudinal",s)}_halfBlur(e,t,i,r,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new Be(this._lodPlanes[r],c),f=c.uniforms,m=this._sizeLods[i]-1,g=isFinite(s)?Math.PI/(2*m):2*Math.PI/(2*f2-1),v=s/g,p=isFinite(s)?1+Math.floor(u*v):f2;p>f2&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${p} samples when the maximum is set to ${f2}`);const d=[];let w=0;for(let L=0;L<f2;++L){const t1=L/v,T=Math.exp(-t1*t1/2);d.push(T),L===0?w+=T:L<p&&(w+=2*T)}for(let L=0;L<d.length;L++)d[L]=d[L]/w;f.envMap.value=e.texture,f.samples.value=p,f.weights.value=d,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a);const{_lodMax:y}=this;f.dTheta.value=g,f.mipInt.value=y-i;const b=this._sizeLods[r],B=3*b*(r>y-Z2?r-y+Z2:0),R=4*(this._cubeSize-b);T0(t,B,R,3*b,2*b),l.setRenderTarget(t),l.render(h,en)}}function kc(n){const e=[],t=[],i=[];let r=n;const s=n-Z2+1+l5.length;for(let o=0;o<s;o++){const a=Math.pow(2,r);t.push(a);let l=1/a;o>n-Z2?l=l5[o-n+Z2-1]:o===0&&(l=0),i.push(l);const c=1/(a-2),u=-c,h=1+c,f=[u,u,h,u,h,h,u,u,h,h,u,h],m=6,g=6,v=3,p=2,d=1,w=new Float32Array(v*g*m),y=new Float32Array(p*g*m),b=new Float32Array(d*g*m);for(let R=0;R<m;R++){const L=R%3*2/3-1,t1=R>2?0:-1,T=[L,t1,0,L+2/3,t1,0,L+2/3,t1+1,0,L,t1,0,L+2/3,t1+1,0,L,t1+1,0];w.set(T,v*g*R),y.set(f,p*g*R);const A=[R,R,R,R,R,R];b.set(A,d*g*R)}const B=new Se;B.setAttribute("position",new tt(w,v)),B.setAttribute("uv",new tt(y,p)),B.setAttribute("faceIndex",new tt(b,d)),e.push(B),r>Z2&&r--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function f5(n,e,t){const i=new y2(n,e,t);return i.texture.mapping=h4,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function T0(n,e,t,i,r){n.viewport.set(e,t,i,r),n.scissor.set(e,t,i,r)}function Xc(n,e,t){const i=new Float32Array(f2),r=new N(0,1,0);return new Lt({name:"SphericalGaussianBlur",defines:{n:f2,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:x9(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:jt,depthTest:!1,depthWrite:!1})}function d5(){return new Lt({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:x9(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:jt,depthTest:!1,depthWrite:!1})}function p5(){return new Lt({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:x9(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:jt,depthTest:!1,depthWrite:!1})}function x9(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function qc(n){let e=new WeakMap,t=null;function i(a){if(a&&a.isTexture){const l=a.mapping,c=l===Ln||l===Dn,u=l===o3||l===a3;if(c||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let h=e.get(a);return t===null&&(t=new h5(n)),h=c?t.fromEquirectangular(a,h):t.fromCubemap(a,h),e.set(a,h),h.texture}else{if(e.has(a))return e.get(a).texture;{const h=a.image;if(c&&h&&h.height>0||u&&h&&r(h)){t===null&&(t=new h5(n));const f=c?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,f),a.addEventListener("dispose",s),f.texture}else return null}}}return a}function r(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:o}}function Yc(n){const e={};function t(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=n.getExtension(i)}return e[i]=r,r}return{has:function(i){return t(i)!==null},init:function(i){i.isWebGL2?(t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance")):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(i){const r=t(i);return r===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function jc(n,e,t,i){const r={},s=new WeakMap;function o(h){const f=h.target;f.index!==null&&e.remove(f.index);for(const g in f.attributes)e.remove(f.attributes[g]);for(const g in f.morphAttributes){const v=f.morphAttributes[g];for(let p=0,d=v.length;p<d;p++)e.remove(v[p])}f.removeEventListener("dispose",o),delete r[f.id];const m=s.get(f);m&&(e.remove(m),s.delete(f)),i.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function a(h,f){return r[f.id]===!0||(f.addEventListener("dispose",o),r[f.id]=!0,t.memory.geometries++),f}function l(h){const f=h.attributes;for(const g in f)e.update(f[g],n.ARRAY_BUFFER);const m=h.morphAttributes;for(const g in m){const v=m[g];for(let p=0,d=v.length;p<d;p++)e.update(v[p],n.ARRAY_BUFFER)}}function c(h){const f=[],m=h.index,g=h.attributes.position;let v=0;if(m!==null){const w=m.array;v=m.version;for(let y=0,b=w.length;y<b;y+=3){const B=w[y+0],R=w[y+1],L=w[y+2];f.push(B,R,R,L,L,B)}}else if(g!==void 0){const w=g.array;v=g.version;for(let y=0,b=w.length/3-1;y<b;y+=3){const B=y+0,R=y+1,L=y+2;f.push(B,R,R,L,L,B)}}else return;const p=new(Qi(f)?s7:r7)(f,1);p.version=v;const d=s.get(h);d&&e.remove(d),s.set(h,p)}function u(h){const f=s.get(h);if(f){const m=h.index;m!==null&&f.version<m.version&&c(h)}else c(h);return s.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function Kc(n,e,t,i){const r=i.isWebGL2;let s;function o(m){s=m}let a,l;function c(m){a=m.type,l=m.bytesPerElement}function u(m,g){n.drawElements(s,g,a,m*l),t.update(g,s,1)}function h(m,g,v){if(v===0)return;let p,d;if(r)p=n,d="drawElementsInstanced";else if(p=e.get("ANGLE_instanced_arrays"),d="drawElementsInstancedANGLE",p===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}p[d](s,g,a,m*l,v),t.update(g,s,v)}function f(m,g,v){if(v===0)return;const p=e.get("WEBGL_multi_draw");if(p===null)for(let d=0;d<v;d++)this.render(m[d]/l,g[d]);else{p.multiDrawElementsWEBGL(s,g,0,a,m,0,v);let d=0;for(let w=0;w<v;w++)d+=g[w];t.update(d,s,1)}}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=h,this.renderMultiDraw=f}function Zc(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,o,a){switch(t.calls++,o){case n.TRIANGLES:t.triangles+=a*(s/3);break;case n.LINES:t.lines+=a*(s/2);break;case n.LINE_STRIP:t.lines+=a*(s-1);break;case n.LINE_LOOP:t.lines+=a*s;break;case n.POINTS:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:i}}function $c(n,e){return n[0]-e[0]}function Jc(n,e){return Math.abs(e[1])-Math.abs(n[1])}function Qc(n,e,t){const i={},r=new Float32Array(8),s=new WeakMap,o=new Me,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,h){const f=c.morphTargetInfluences;if(e.isWebGL2===!0){const g=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,v=g!==void 0?g.length:0;let p=s.get(u);if(p===void 0||p.count!==v){let X=function(){f1.dispose(),s.delete(u),u.removeEventListener("dispose",X)};var m=X;p!==void 0&&p.texture.dispose();const y=u.morphAttributes.position!==void 0,b=u.morphAttributes.normal!==void 0,B=u.morphAttributes.color!==void 0,R=u.morphAttributes.position||[],L=u.morphAttributes.normal||[],t1=u.morphAttributes.color||[];let T=0;y===!0&&(T=1),b===!0&&(T=2),B===!0&&(T=3);let A=u.attributes.position.count*T,Y=1;A>e.maxTextureSize&&(Y=Math.ceil(A/e.maxTextureSize),A=e.maxTextureSize);const s1=new Float32Array(A*Y*4*v),f1=new n7(s1,A,Y,v);f1.type=Xt,f1.needsUpdate=!0;const z=T*4;for(let q=0;q<v;q++){const J=R[q],Z=L[q],i1=t1[q],o1=A*Y*4*q;for(let u1=0;u1<J.count;u1++){const h1=u1*z;y===!0&&(o.fromBufferAttribute(J,u1),s1[o1+h1+0]=o.x,s1[o1+h1+1]=o.y,s1[o1+h1+2]=o.z,s1[o1+h1+3]=0),b===!0&&(o.fromBufferAttribute(Z,u1),s1[o1+h1+4]=o.x,s1[o1+h1+5]=o.y,s1[o1+h1+6]=o.z,s1[o1+h1+7]=0),B===!0&&(o.fromBufferAttribute(i1,u1),s1[o1+h1+8]=o.x,s1[o1+h1+9]=o.y,s1[o1+h1+10]=o.z,s1[o1+h1+11]=i1.itemSize===4?o.w:1)}}p={count:v,texture:f1,size:new p1(A,Y)},s.set(u,p),u.addEventListener("dispose",X)}let d=0;for(let y=0;y<f.length;y++)d+=f[y];const w=u.morphTargetsRelative?1:1-d;h.getUniforms().setValue(n,"morphTargetBaseInfluence",w),h.getUniforms().setValue(n,"morphTargetInfluences",f),h.getUniforms().setValue(n,"morphTargetsTexture",p.texture,t),h.getUniforms().setValue(n,"morphTargetsTextureSize",p.size)}else{const g=f===void 0?0:f.length;let v=i[u.id];if(v===void 0||v.length!==g){v=[];for(let b=0;b<g;b++)v[b]=[b,0];i[u.id]=v}for(let b=0;b<g;b++){const B=v[b];B[0]=b,B[1]=f[b]}v.sort(Jc);for(let b=0;b<8;b++)b<g&&v[b][1]?(a[b][0]=v[b][0],a[b][1]=v[b][1]):(a[b][0]=Number.MAX_SAFE_INTEGER,a[b][1]=0);a.sort($c);const p=u.morphAttributes.position,d=u.morphAttributes.normal;let w=0;for(let b=0;b<8;b++){const B=a[b],R=B[0],L=B[1];R!==Number.MAX_SAFE_INTEGER&&L?(p&&u.getAttribute("morphTarget"+b)!==p[R]&&u.setAttribute("morphTarget"+b,p[R]),d&&u.getAttribute("morphNormal"+b)!==d[R]&&u.setAttribute("morphNormal"+b,d[R]),r[b]=L,w+=L):(p&&u.hasAttribute("morphTarget"+b)===!0&&u.deleteAttribute("morphTarget"+b),d&&u.hasAttribute("morphNormal"+b)===!0&&u.deleteAttribute("morphNormal"+b),r[b]=0)}const y=u.morphTargetsRelative?1:1-w;h.getUniforms().setValue(n,"morphTargetBaseInfluence",y),h.getUniforms().setValue(n,"morphTargetInfluences",r)}}return{update:l}}function eu(n,e,t,i){let r=new WeakMap;function s(l){const c=i.render.frame,u=l.geometry,h=e.get(l,u);if(r.get(h)!==c&&(e.update(h),r.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),r.get(l)!==c&&(t.update(l.instanceMatrix,n.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,n.ARRAY_BUFFER),r.set(l,c))),l.isSkinnedMesh){const f=l.skeleton;r.get(f)!==c&&(f.update(),r.set(f,c))}return h}function o(){r=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:o}}class h7 extends Ge{constructor(e,t,i,r,s,o,a,l,c,u){if(u=u!==void 0?u:_2,u!==_2&&u!==l3)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&u===_2&&(i=kt),i===void 0&&u===l3&&(i=g2),super(null,r,s,o,a,l,u,i,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:Oe,this.minFilter=l!==void 0?l:Oe,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const f7=new Ge,d7=new h7(1,1);d7.compareFunction=Ji;const p7=new n7,m7=new Bo,g7=new l7,m5=[],g5=[],_5=new Float32Array(16),v5=new Float32Array(9),x5=new Float32Array(4);function f3(n,e,t){const i=n[0];if(i<=0||i>0)return n;const r=e*t;let s=m5[r];if(s===void 0&&(s=new Float32Array(r),m5[r]=s),e!==0){i.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,n[o].toArray(s,a)}return s}function me(n,e){if(n.length!==e.length)return!1;for(let t=0,i=n.length;t<i;t++)if(n[t]!==e[t])return!1;return!0}function ge(n,e){for(let t=0,i=e.length;t<i;t++)n[t]=e[t]}function p4(n,e){let t=g5[e];t===void 0&&(t=new Int32Array(e),g5[e]=t);for(let i=0;i!==e;++i)t[i]=n.allocateTextureUnit();return t}function tu(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function nu(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(me(t,e))return;n.uniform2fv(this.addr,e),ge(t,e)}}function iu(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(me(t,e))return;n.uniform3fv(this.addr,e),ge(t,e)}}function ru(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(me(t,e))return;n.uniform4fv(this.addr,e),ge(t,e)}}function su(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(me(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),ge(t,e)}else{if(me(t,i))return;x5.set(i),n.uniformMatrix2fv(this.addr,!1,x5),ge(t,i)}}function ou(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(me(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),ge(t,e)}else{if(me(t,i))return;v5.set(i),n.uniformMatrix3fv(this.addr,!1,v5),ge(t,i)}}function au(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(me(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),ge(t,e)}else{if(me(t,i))return;_5.set(i),n.uniformMatrix4fv(this.addr,!1,_5),ge(t,i)}}function lu(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function cu(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(me(t,e))return;n.uniform2iv(this.addr,e),ge(t,e)}}function uu(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(me(t,e))return;n.uniform3iv(this.addr,e),ge(t,e)}}function hu(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(me(t,e))return;n.uniform4iv(this.addr,e),ge(t,e)}}function fu(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function du(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(me(t,e))return;n.uniform2uiv(this.addr,e),ge(t,e)}}function pu(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(me(t,e))return;n.uniform3uiv(this.addr,e),ge(t,e)}}function mu(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(me(t,e))return;n.uniform4uiv(this.addr,e),ge(t,e)}}function gu(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r);const s=this.type===n.SAMPLER_2D_SHADOW?d7:f7;t.setTexture2D(e||s,r)}function _u(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture3D(e||m7,r)}function vu(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTextureCube(e||g7,r)}function xu(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2DArray(e||p7,r)}function yu(n){switch(n){case 5126:return tu;case 35664:return nu;case 35665:return iu;case 35666:return ru;case 35674:return su;case 35675:return ou;case 35676:return au;case 5124:case 35670:return lu;case 35667:case 35671:return cu;case 35668:case 35672:return uu;case 35669:case 35673:return hu;case 5125:return fu;case 36294:return du;case 36295:return pu;case 36296:return mu;case 35678:case 36198:case 36298:case 36306:case 35682:return gu;case 35679:case 36299:case 36307:return _u;case 35680:case 36300:case 36308:case 36293:return vu;case 36289:case 36303:case 36311:case 36292:return xu}}function Mu(n,e){n.uniform1fv(this.addr,e)}function Su(n,e){const t=f3(e,this.size,2);n.uniform2fv(this.addr,t)}function Eu(n,e){const t=f3(e,this.size,3);n.uniform3fv(this.addr,t)}function bu(n,e){const t=f3(e,this.size,4);n.uniform4fv(this.addr,t)}function Tu(n,e){const t=f3(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function Au(n,e){const t=f3(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function wu(n,e){const t=f3(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function Ru(n,e){n.uniform1iv(this.addr,e)}function Cu(n,e){n.uniform2iv(this.addr,e)}function Pu(n,e){n.uniform3iv(this.addr,e)}function Lu(n,e){n.uniform4iv(this.addr,e)}function Du(n,e){n.uniform1uiv(this.addr,e)}function Iu(n,e){n.uniform2uiv(this.addr,e)}function Uu(n,e){n.uniform3uiv(this.addr,e)}function Nu(n,e){n.uniform4uiv(this.addr,e)}function Ou(n,e,t){const i=this.cache,r=e.length,s=p4(t,r);me(i,s)||(n.uniform1iv(this.addr,s),ge(i,s));for(let o=0;o!==r;++o)t.setTexture2D(e[o]||f7,s[o])}function Fu(n,e,t){const i=this.cache,r=e.length,s=p4(t,r);me(i,s)||(n.uniform1iv(this.addr,s),ge(i,s));for(let o=0;o!==r;++o)t.setTexture3D(e[o]||m7,s[o])}function Bu(n,e,t){const i=this.cache,r=e.length,s=p4(t,r);me(i,s)||(n.uniform1iv(this.addr,s),ge(i,s));for(let o=0;o!==r;++o)t.setTextureCube(e[o]||g7,s[o])}function zu(n,e,t){const i=this.cache,r=e.length,s=p4(t,r);me(i,s)||(n.uniform1iv(this.addr,s),ge(i,s));for(let o=0;o!==r;++o)t.setTexture2DArray(e[o]||p7,s[o])}function Hu(n){switch(n){case 5126:return Mu;case 35664:return Su;case 35665:return Eu;case 35666:return bu;case 35674:return Tu;case 35675:return Au;case 35676:return wu;case 5124:case 35670:return Ru;case 35667:case 35671:return Cu;case 35668:case 35672:return Pu;case 35669:case 35673:return Lu;case 5125:return Du;case 36294:return Iu;case 36295:return Uu;case 36296:return Nu;case 35678:case 36198:case 36298:case 36306:case 35682:return Ou;case 35679:case 36299:case 36307:return Fu;case 35680:case 36300:case 36308:case 36293:return Bu;case 36289:case 36303:case 36311:case 36292:return zu}}class Gu{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=yu(t.type)}}class Vu{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=Hu(t.type)}}class Wu{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const r=this.seq;for(let s=0,o=r.length;s!==o;++s){const a=r[s];a.setValue(e,t[a.id],i)}}}const sn=/(\w+)(\])?(\[|\.)?/g;function y5(n,e){n.seq.push(e),n.map[e.id]=e}function ku(n,e,t){const i=n.name,r=i.length;for(sn.lastIndex=0;;){const s=sn.exec(i),o=sn.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===r){y5(t,c===void 0?new Gu(a,n,e):new Vu(a,n,e));break}else{let h=t.map[a];h===void 0&&(h=new Wu(a),y5(t,h)),t=h}}}class H0{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<i;++r){const s=e.getActiveUniform(t,r),o=e.getUniformLocation(t,s.name);ku(s,o,this)}}setValue(e,t,i,r){const s=this.map[t];s!==void 0&&s.setValue(e,i,r)}setOptional(e,t,i){const r=t[i];r!==void 0&&this.setValue(e,i,r)}static upload(e,t,i,r){for(let s=0,o=t.length;s!==o;++s){const a=t[s],l=i[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,r)}}static seqWithValue(e,t){const i=[];for(let r=0,s=e.length;r!==s;++r){const o=e[r];o.id in t&&i.push(o)}return i}}function M5(n,e,t){const i=n.createShader(e);return n.shaderSource(i,t),n.compileShader(i),i}const Xu=37297;let qu=0;function Yu(n,e){const t=n.split(`
`),i=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=r;o<s;o++){const a=o+1;i.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return i.join(`
`)}function ju(n){const e=ne.getPrimaries(ne.workingColorSpace),t=ne.getPrimaries(n);let i;switch(e===t?i="":e===Z0&&t===K0?i="LinearDisplayP3ToLinearSRGB":e===K0&&t===Z0&&(i="LinearSRGBToLinearDisplayP3"),n){case Pt:case f4:return[i,"LinearTransferOETF"];case Ee:case m9:return[i,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",n),[i,"LinearTransferOETF"]}}function S5(n,e,t){const i=n.getShaderParameter(e,n.COMPILE_STATUS),r=n.getShaderInfoLog(e).trim();if(i&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+r+`

`+Yu(n.getShaderSource(e),o)}else return r}function Ku(n,e){const t=ju(e);return`vec4 ${n}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function Zu(n,e){let t;switch(e){case Xs:t="Linear";break;case qs:t="Reinhard";break;case Ys:t="OptimizedCineon";break;case js:t="ACESFilmic";break;case Zs:t="AgX";break;case Ks:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function $u(n){return[n.extensionDerivatives||n.envMapCubeUVHeight||n.bumpMap||n.normalMapTangentSpace||n.clearcoatNormalMap||n.flatShading||n.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(n.extensionFragDepth||n.logarithmicDepthBuffer)&&n.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",n.extensionDrawBuffers&&n.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(n.extensionShaderTextureLOD||n.envMap||n.transmission)&&n.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter($2).join(`
`)}function Ju(n){return[n.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":""].filter($2).join(`
`)}function Qu(n){const e=[];for(const t in n){const i=n[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function eh(n,e){const t={},i=n.getProgramParameter(e,n.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const s=n.getActiveAttrib(e,r),o=s.name;let a=1;s.type===n.FLOAT_MAT2&&(a=2),s.type===n.FLOAT_MAT3&&(a=3),s.type===n.FLOAT_MAT4&&(a=4),t[o]={type:s.type,location:n.getAttribLocation(e,o),locationSize:a}}return t}function $2(n){return n!==""}function E5(n,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function b5(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const th=/^[ \t]*#include +<([\w\d./]+)>/gm;function Bn(n){return n.replace(th,ih)}const nh=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function ih(n,e){let t=H1[e];if(t===void 0){const i=nh.get(e);if(i!==void 0)t=H1[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return Bn(t)}const rh=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function T5(n){return n.replace(rh,sh)}function sh(n,e,t,i){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function A5(n){let e="precision "+n.precision+` float;
precision `+n.precision+" int;";return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function oh(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===d9?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===xs?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===At&&(e="SHADOWMAP_TYPE_VSM"),e}function ah(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case o3:case a3:e="ENVMAP_TYPE_CUBE";break;case h4:e="ENVMAP_TYPE_CUBE_UV";break}return e}function lh(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case a3:e="ENVMAP_MODE_REFRACTION";break}return e}function ch(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case Gi:e="ENVMAP_BLENDING_MULTIPLY";break;case Ws:e="ENVMAP_BLENDING_MIX";break;case ks:e="ENVMAP_BLENDING_ADD";break}return e}function uh(n){const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:i,maxMip:t}}function hh(n,e,t,i){const r=n.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=oh(t),c=ah(t),u=lh(t),h=ch(t),f=uh(t),m=t.isWebGL2?"":$u(t),g=Ju(t),v=Qu(s),p=r.createProgram();let d,w,y=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(d=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v].filter($2).join(`
`),d.length>0&&(d+=`
`),w=[m,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v].filter($2).join(`
`),w.length>0&&(w+=`
`)):(d=[A5(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter($2).join(`
`),w=[m,A5(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Kt?"#define TONE_MAPPING":"",t.toneMapping!==Kt?H1.tonemapping_pars_fragment:"",t.toneMapping!==Kt?Zu("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",H1.colorspace_pars_fragment,Ku("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter($2).join(`
`)),o=Bn(o),o=E5(o,t),o=b5(o,t),a=Bn(a),a=E5(a,t),a=b5(a,t),o=T5(o),a=T5(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(y=`#version 300 es
`,d=[g,"precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+d,w=["precision mediump sampler2DArray;","#define varying in",t.glslVersion===k8?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===k8?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+w);const b=y+d+o,B=y+w+a,R=M5(r,r.VERTEX_SHADER,b),L=M5(r,r.FRAGMENT_SHADER,B);r.attachShader(p,R),r.attachShader(p,L),t.index0AttributeName!==void 0?r.bindAttribLocation(p,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(p,0,"position"),r.linkProgram(p);function t1(s1){if(n.debug.checkShaderErrors){const f1=r.getProgramInfoLog(p).trim(),z=r.getShaderInfoLog(R).trim(),X=r.getShaderInfoLog(L).trim();let q=!0,J=!0;if(r.getProgramParameter(p,r.LINK_STATUS)===!1)if(q=!1,typeof n.debug.onShaderError=="function")n.debug.onShaderError(r,p,R,L);else{const Z=S5(r,R,"vertex"),i1=S5(r,L,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(p,r.VALIDATE_STATUS)+`

Program Info Log: `+f1+`
`+Z+`
`+i1)}else f1!==""?console.warn("THREE.WebGLProgram: Program Info Log:",f1):(z===""||X==="")&&(J=!1);J&&(s1.diagnostics={runnable:q,programLog:f1,vertexShader:{log:z,prefix:d},fragmentShader:{log:X,prefix:w}})}r.deleteShader(R),r.deleteShader(L),T=new H0(r,p),A=eh(r,p)}let T;this.getUniforms=function(){return T===void 0&&t1(this),T};let A;this.getAttributes=function(){return A===void 0&&t1(this),A};let Y=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return Y===!1&&(Y=r.getProgramParameter(p,Xu)),Y},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(p),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=qu++,this.cacheKey=e,this.usedTimes=1,this.program=p,this.vertexShader=R,this.fragmentShader=L,this}let fh=0;class dh{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(i),o=this._getShaderCacheForMaterial(e);return o.has(r)===!1&&(o.add(r),r.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return i===void 0&&(i=new ph(e),t.set(e,i)),i}}class ph{constructor(e){this.id=fh++,this.code=e,this.usedTimes=0}}function mh(n,e,t,i,r,s,o){const a=new _9,l=new dh,c=[],u=r.isWebGL2,h=r.logarithmicDepthBuffer,f=r.vertexTextures;let m=r.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(T){return T===0?"uv":`uv${T}`}function p(T,A,Y,s1,f1){const z=s1.fog,X=f1.geometry,q=T.isMeshStandardMaterial?s1.environment:null,J=(T.isMeshStandardMaterial?t:e).get(T.envMap||q),Z=J&&J.mapping===h4?J.image.height:null,i1=g[T.type];T.precision!==null&&(m=r.getMaxPrecision(T.precision),m!==T.precision&&console.warn("THREE.WebGLProgram.getParameters:",T.precision,"not supported, using",m,"instead."));const o1=X.morphAttributes.position||X.morphAttributes.normal||X.morphAttributes.color,u1=o1!==void 0?o1.length:0;let h1=0;X.morphAttributes.position!==void 0&&(h1=1),X.morphAttributes.normal!==void 0&&(h1=2),X.morphAttributes.color!==void 0&&(h1=3);let Q,c1,M1,b1;if(i1){const Le=pt[i1];Q=Le.vertexShader,c1=Le.fragmentShader}else Q=T.vertexShader,c1=T.fragmentShader,l.update(T),M1=l.getVertexShaderID(T),b1=l.getFragmentShaderID(T);const S1=n.getRenderTarget(),P1=f1.isInstancedMesh===!0,N1=f1.isBatchedMesh===!0,w1=!!T.map,I1=!!T.matcap,D=!!J,M=!!T.aoMap,S=!!T.lightMap,U=!!T.bumpMap,I=!!T.normalMap,V=!!T.displacementMap,W=!!T.emissiveMap,x=!!T.metalnessMap,_=!!T.roughnessMap,C=T.anisotropy>0,F=T.clearcoat>0,H=T.iridescence>0,k=T.sheen>0,r1=T.transmission>0,e1=C&&!!T.anisotropyMap,a1=F&&!!T.clearcoatMap,x1=F&&!!T.clearcoatNormalMap,T1=F&&!!T.clearcoatRoughnessMap,n1=H&&!!T.iridescenceMap,L1=H&&!!T.iridescenceThicknessMap,P=k&&!!T.sheenColorMap,l1=k&&!!T.sheenRoughnessMap,m1=!!T.specularMap,d1=!!T.specularColorMap,E1=!!T.specularIntensityMap,U1=r1&&!!T.transmissionMap,q1=r1&&!!T.thicknessMap,V1=!!T.gradientMap,v1=!!T.alphaMap,O=T.alphaTest>0,g1=!!T.alphaHash,_1=!!T.extensions,D1=!!X.attributes.uv1,R1=!!X.attributes.uv2,$1=!!X.attributes.uv3;let J1=Kt;return T.toneMapped&&(S1===null||S1.isXRRenderTarget===!0)&&(J1=n.toneMapping),{isWebGL2:u,shaderID:i1,shaderType:T.type,shaderName:T.name,vertexShader:Q,fragmentShader:c1,defines:T.defines,customVertexShaderID:M1,customFragmentShaderID:b1,isRawShaderMaterial:T.isRawShaderMaterial===!0,glslVersion:T.glslVersion,precision:m,batching:N1,instancing:P1,instancingColor:P1&&f1.instanceColor!==null,supportsVertexTextures:f,outputColorSpace:S1===null?n.outputColorSpace:S1.isXRRenderTarget===!0?S1.texture.colorSpace:Pt,map:w1,matcap:I1,envMap:D,envMapMode:D&&J.mapping,envMapCubeUVHeight:Z,aoMap:M,lightMap:S,bumpMap:U,normalMap:I,displacementMap:f&&V,emissiveMap:W,normalMapObjectSpace:I&&T.normalMapType===lo,normalMapTangentSpace:I&&T.normalMapType===$i,metalnessMap:x,roughnessMap:_,anisotropy:C,anisotropyMap:e1,clearcoat:F,clearcoatMap:a1,clearcoatNormalMap:x1,clearcoatRoughnessMap:T1,iridescence:H,iridescenceMap:n1,iridescenceThicknessMap:L1,sheen:k,sheenColorMap:P,sheenRoughnessMap:l1,specularMap:m1,specularColorMap:d1,specularIntensityMap:E1,transmission:r1,transmissionMap:U1,thicknessMap:q1,gradientMap:V1,opaque:T.transparent===!1&&T.blending===n3,alphaMap:v1,alphaTest:O,alphaHash:g1,combine:T.combine,mapUv:w1&&v(T.map.channel),aoMapUv:M&&v(T.aoMap.channel),lightMapUv:S&&v(T.lightMap.channel),bumpMapUv:U&&v(T.bumpMap.channel),normalMapUv:I&&v(T.normalMap.channel),displacementMapUv:V&&v(T.displacementMap.channel),emissiveMapUv:W&&v(T.emissiveMap.channel),metalnessMapUv:x&&v(T.metalnessMap.channel),roughnessMapUv:_&&v(T.roughnessMap.channel),anisotropyMapUv:e1&&v(T.anisotropyMap.channel),clearcoatMapUv:a1&&v(T.clearcoatMap.channel),clearcoatNormalMapUv:x1&&v(T.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:T1&&v(T.clearcoatRoughnessMap.channel),iridescenceMapUv:n1&&v(T.iridescenceMap.channel),iridescenceThicknessMapUv:L1&&v(T.iridescenceThicknessMap.channel),sheenColorMapUv:P&&v(T.sheenColorMap.channel),sheenRoughnessMapUv:l1&&v(T.sheenRoughnessMap.channel),specularMapUv:m1&&v(T.specularMap.channel),specularColorMapUv:d1&&v(T.specularColorMap.channel),specularIntensityMapUv:E1&&v(T.specularIntensityMap.channel),transmissionMapUv:U1&&v(T.transmissionMap.channel),thicknessMapUv:q1&&v(T.thicknessMap.channel),alphaMapUv:v1&&v(T.alphaMap.channel),vertexTangents:!!X.attributes.tangent&&(I||C),vertexColors:T.vertexColors,vertexAlphas:T.vertexColors===!0&&!!X.attributes.color&&X.attributes.color.itemSize===4,vertexUv1s:D1,vertexUv2s:R1,vertexUv3s:$1,pointsUvs:f1.isPoints===!0&&!!X.attributes.uv&&(w1||v1),fog:!!z,useFog:T.fog===!0,fogExp2:z&&z.isFogExp2,flatShading:T.flatShading===!0,sizeAttenuation:T.sizeAttenuation===!0,logarithmicDepthBuffer:h,skinning:f1.isSkinnedMesh===!0,morphTargets:X.morphAttributes.position!==void 0,morphNormals:X.morphAttributes.normal!==void 0,morphColors:X.morphAttributes.color!==void 0,morphTargetsCount:u1,morphTextureStride:h1,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,numSpotLightMaps:A.spotLightMap.length,numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numSpotLightShadowsWithMaps:A.numSpotLightShadowsWithMaps,numLightProbes:A.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:T.dithering,shadowMapEnabled:n.shadowMap.enabled&&Y.length>0,shadowMapType:n.shadowMap.type,toneMapping:J1,useLegacyLights:n._useLegacyLights,decodeVideoTexture:w1&&T.map.isVideoTexture===!0&&ne.getTransfer(T.map.colorSpace)===se,premultipliedAlpha:T.premultipliedAlpha,doubleSided:T.side===ot,flipSided:T.side===He,useDepthPacking:T.depthPacking>=0,depthPacking:T.depthPacking||0,index0AttributeName:T.index0AttributeName,extensionDerivatives:_1&&T.extensions.derivatives===!0,extensionFragDepth:_1&&T.extensions.fragDepth===!0,extensionDrawBuffers:_1&&T.extensions.drawBuffers===!0,extensionShaderTextureLOD:_1&&T.extensions.shaderTextureLOD===!0,extensionClipCullDistance:_1&&T.extensions.clipCullDistance&&i.has("WEBGL_clip_cull_distance"),rendererExtensionFragDepth:u||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||i.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:T.customProgramCacheKey()}}function d(T){const A=[];if(T.shaderID?A.push(T.shaderID):(A.push(T.customVertexShaderID),A.push(T.customFragmentShaderID)),T.defines!==void 0)for(const Y in T.defines)A.push(Y),A.push(T.defines[Y]);return T.isRawShaderMaterial===!1&&(w(A,T),y(A,T),A.push(n.outputColorSpace)),A.push(T.customProgramCacheKey),A.join()}function w(T,A){T.push(A.precision),T.push(A.outputColorSpace),T.push(A.envMapMode),T.push(A.envMapCubeUVHeight),T.push(A.mapUv),T.push(A.alphaMapUv),T.push(A.lightMapUv),T.push(A.aoMapUv),T.push(A.bumpMapUv),T.push(A.normalMapUv),T.push(A.displacementMapUv),T.push(A.emissiveMapUv),T.push(A.metalnessMapUv),T.push(A.roughnessMapUv),T.push(A.anisotropyMapUv),T.push(A.clearcoatMapUv),T.push(A.clearcoatNormalMapUv),T.push(A.clearcoatRoughnessMapUv),T.push(A.iridescenceMapUv),T.push(A.iridescenceThicknessMapUv),T.push(A.sheenColorMapUv),T.push(A.sheenRoughnessMapUv),T.push(A.specularMapUv),T.push(A.specularColorMapUv),T.push(A.specularIntensityMapUv),T.push(A.transmissionMapUv),T.push(A.thicknessMapUv),T.push(A.combine),T.push(A.fogExp2),T.push(A.sizeAttenuation),T.push(A.morphTargetsCount),T.push(A.morphAttributeCount),T.push(A.numDirLights),T.push(A.numPointLights),T.push(A.numSpotLights),T.push(A.numSpotLightMaps),T.push(A.numHemiLights),T.push(A.numRectAreaLights),T.push(A.numDirLightShadows),T.push(A.numPointLightShadows),T.push(A.numSpotLightShadows),T.push(A.numSpotLightShadowsWithMaps),T.push(A.numLightProbes),T.push(A.shadowMapType),T.push(A.toneMapping),T.push(A.numClippingPlanes),T.push(A.numClipIntersection),T.push(A.depthPacking)}function y(T,A){a.disableAll(),A.isWebGL2&&a.enable(0),A.supportsVertexTextures&&a.enable(1),A.instancing&&a.enable(2),A.instancingColor&&a.enable(3),A.matcap&&a.enable(4),A.envMap&&a.enable(5),A.normalMapObjectSpace&&a.enable(6),A.normalMapTangentSpace&&a.enable(7),A.clearcoat&&a.enable(8),A.iridescence&&a.enable(9),A.alphaTest&&a.enable(10),A.vertexColors&&a.enable(11),A.vertexAlphas&&a.enable(12),A.vertexUv1s&&a.enable(13),A.vertexUv2s&&a.enable(14),A.vertexUv3s&&a.enable(15),A.vertexTangents&&a.enable(16),A.anisotropy&&a.enable(17),A.alphaHash&&a.enable(18),A.batching&&a.enable(19),T.push(a.mask),a.disableAll(),A.fog&&a.enable(0),A.useFog&&a.enable(1),A.flatShading&&a.enable(2),A.logarithmicDepthBuffer&&a.enable(3),A.skinning&&a.enable(4),A.morphTargets&&a.enable(5),A.morphNormals&&a.enable(6),A.morphColors&&a.enable(7),A.premultipliedAlpha&&a.enable(8),A.shadowMapEnabled&&a.enable(9),A.useLegacyLights&&a.enable(10),A.doubleSided&&a.enable(11),A.flipSided&&a.enable(12),A.useDepthPacking&&a.enable(13),A.dithering&&a.enable(14),A.transmission&&a.enable(15),A.sheen&&a.enable(16),A.opaque&&a.enable(17),A.pointsUvs&&a.enable(18),A.decodeVideoTexture&&a.enable(19),T.push(a.mask)}function b(T){const A=g[T.type];let Y;if(A){const s1=pt[A];Y=$o.clone(s1.uniforms)}else Y=T.uniforms;return Y}function B(T,A){let Y;for(let s1=0,f1=c.length;s1<f1;s1++){const z=c[s1];if(z.cacheKey===A){Y=z,++Y.usedTimes;break}}return Y===void 0&&(Y=new hh(n,A,T,s),c.push(Y)),Y}function R(T){if(--T.usedTimes===0){const A=c.indexOf(T);c[A]=c[c.length-1],c.pop(),T.destroy()}}function L(T){l.remove(T)}function t1(){l.dispose()}return{getParameters:p,getProgramCacheKey:d,getUniforms:b,acquireProgram:B,releaseProgram:R,releaseShaderCache:L,programs:c,dispose:t1}}function gh(){let n=new WeakMap;function e(s){let o=n.get(s);return o===void 0&&(o={},n.set(s,o)),o}function t(s){n.delete(s)}function i(s,o,a){n.get(s)[o]=a}function r(){n=new WeakMap}return{get:e,remove:t,update:i,dispose:r}}function _h(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function w5(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function R5(){const n=[];let e=0;const t=[],i=[],r=[];function s(){e=0,t.length=0,i.length=0,r.length=0}function o(h,f,m,g,v,p){let d=n[e];return d===void 0?(d={id:h.id,object:h,geometry:f,material:m,groupOrder:g,renderOrder:h.renderOrder,z:v,group:p},n[e]=d):(d.id=h.id,d.object=h,d.geometry=f,d.material=m,d.groupOrder=g,d.renderOrder=h.renderOrder,d.z=v,d.group=p),e++,d}function a(h,f,m,g,v,p){const d=o(h,f,m,g,v,p);m.transmission>0?i.push(d):m.transparent===!0?r.push(d):t.push(d)}function l(h,f,m,g,v,p){const d=o(h,f,m,g,v,p);m.transmission>0?i.unshift(d):m.transparent===!0?r.unshift(d):t.unshift(d)}function c(h,f){t.length>1&&t.sort(h||_h),i.length>1&&i.sort(f||w5),r.length>1&&r.sort(f||w5)}function u(){for(let h=e,f=n.length;h<f;h++){const m=n[h];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.group=null}}return{opaque:t,transmissive:i,transparent:r,init:s,push:a,unshift:l,finish:u,sort:c}}function vh(){let n=new WeakMap;function e(i,r){const s=n.get(i);let o;return s===void 0?(o=new R5,n.set(i,[o])):r>=s.length?(o=new R5,s.push(o)):o=s[r],o}function t(){n=new WeakMap}return{get:e,dispose:t}}function xh(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new N,color:new K1};break;case"SpotLight":t={position:new N,direction:new N,color:new K1,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new N,color:new K1,distance:0,decay:0};break;case"HemisphereLight":t={direction:new N,skyColor:new K1,groundColor:new K1};break;case"RectAreaLight":t={color:new K1,position:new N,halfWidth:new N,halfHeight:new N};break}return n[e.id]=t,t}}}function yh(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new p1};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new p1};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new p1,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let Mh=0;function Sh(n,e){return(e.castShadow?2:0)-(n.castShadow?2:0)+(e.map?1:0)-(n.map?1:0)}function Eh(n,e){const t=new xh,i=yh(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let u=0;u<9;u++)r.probe.push(new N);const s=new N,o=new ce,a=new ce;function l(u,h){let f=0,m=0,g=0;for(let s1=0;s1<9;s1++)r.probe[s1].set(0,0,0);let v=0,p=0,d=0,w=0,y=0,b=0,B=0,R=0,L=0,t1=0,T=0;u.sort(Sh);const A=h===!0?Math.PI:1;for(let s1=0,f1=u.length;s1<f1;s1++){const z=u[s1],X=z.color,q=z.intensity,J=z.distance,Z=z.shadow&&z.shadow.map?z.shadow.map.texture:null;if(z.isAmbientLight)f+=X.r*q*A,m+=X.g*q*A,g+=X.b*q*A;else if(z.isLightProbe){for(let i1=0;i1<9;i1++)r.probe[i1].addScaledVector(z.sh.coefficients[i1],q);T++}else if(z.isDirectionalLight){const i1=t.get(z);if(i1.color.copy(z.color).multiplyScalar(z.intensity*A),z.castShadow){const o1=z.shadow,u1=i.get(z);u1.shadowBias=o1.bias,u1.shadowNormalBias=o1.normalBias,u1.shadowRadius=o1.radius,u1.shadowMapSize=o1.mapSize,r.directionalShadow[v]=u1,r.directionalShadowMap[v]=Z,r.directionalShadowMatrix[v]=z.shadow.matrix,b++}r.directional[v]=i1,v++}else if(z.isSpotLight){const i1=t.get(z);i1.position.setFromMatrixPosition(z.matrixWorld),i1.color.copy(X).multiplyScalar(q*A),i1.distance=J,i1.coneCos=Math.cos(z.angle),i1.penumbraCos=Math.cos(z.angle*(1-z.penumbra)),i1.decay=z.decay,r.spot[d]=i1;const o1=z.shadow;if(z.map&&(r.spotLightMap[L]=z.map,L++,o1.updateMatrices(z),z.castShadow&&t1++),r.spotLightMatrix[d]=o1.matrix,z.castShadow){const u1=i.get(z);u1.shadowBias=o1.bias,u1.shadowNormalBias=o1.normalBias,u1.shadowRadius=o1.radius,u1.shadowMapSize=o1.mapSize,r.spotShadow[d]=u1,r.spotShadowMap[d]=Z,R++}d++}else if(z.isRectAreaLight){const i1=t.get(z);i1.color.copy(X).multiplyScalar(q),i1.halfWidth.set(z.width*.5,0,0),i1.halfHeight.set(0,z.height*.5,0),r.rectArea[w]=i1,w++}else if(z.isPointLight){const i1=t.get(z);if(i1.color.copy(z.color).multiplyScalar(z.intensity*A),i1.distance=z.distance,i1.decay=z.decay,z.castShadow){const o1=z.shadow,u1=i.get(z);u1.shadowBias=o1.bias,u1.shadowNormalBias=o1.normalBias,u1.shadowRadius=o1.radius,u1.shadowMapSize=o1.mapSize,u1.shadowCameraNear=o1.camera.near,u1.shadowCameraFar=o1.camera.far,r.pointShadow[p]=u1,r.pointShadowMap[p]=Z,r.pointShadowMatrix[p]=z.shadow.matrix,B++}r.point[p]=i1,p++}else if(z.isHemisphereLight){const i1=t.get(z);i1.skyColor.copy(z.color).multiplyScalar(q*A),i1.groundColor.copy(z.groundColor).multiplyScalar(q*A),r.hemi[y]=i1,y++}}w>0&&(e.isWebGL2?n.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=y1.LTC_FLOAT_1,r.rectAreaLTC2=y1.LTC_FLOAT_2):(r.rectAreaLTC1=y1.LTC_HALF_1,r.rectAreaLTC2=y1.LTC_HALF_2):n.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=y1.LTC_FLOAT_1,r.rectAreaLTC2=y1.LTC_FLOAT_2):n.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=y1.LTC_HALF_1,r.rectAreaLTC2=y1.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=f,r.ambient[1]=m,r.ambient[2]=g;const Y=r.hash;(Y.directionalLength!==v||Y.pointLength!==p||Y.spotLength!==d||Y.rectAreaLength!==w||Y.hemiLength!==y||Y.numDirectionalShadows!==b||Y.numPointShadows!==B||Y.numSpotShadows!==R||Y.numSpotMaps!==L||Y.numLightProbes!==T)&&(r.directional.length=v,r.spot.length=d,r.rectArea.length=w,r.point.length=p,r.hemi.length=y,r.directionalShadow.length=b,r.directionalShadowMap.length=b,r.pointShadow.length=B,r.pointShadowMap.length=B,r.spotShadow.length=R,r.spotShadowMap.length=R,r.directionalShadowMatrix.length=b,r.pointShadowMatrix.length=B,r.spotLightMatrix.length=R+L-t1,r.spotLightMap.length=L,r.numSpotLightShadowsWithMaps=t1,r.numLightProbes=T,Y.directionalLength=v,Y.pointLength=p,Y.spotLength=d,Y.rectAreaLength=w,Y.hemiLength=y,Y.numDirectionalShadows=b,Y.numPointShadows=B,Y.numSpotShadows=R,Y.numSpotMaps=L,Y.numLightProbes=T,r.version=Mh++)}function c(u,h){let f=0,m=0,g=0,v=0,p=0;const d=h.matrixWorldInverse;for(let w=0,y=u.length;w<y;w++){const b=u[w];if(b.isDirectionalLight){const B=r.directional[f];B.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),B.direction.sub(s),B.direction.transformDirection(d),f++}else if(b.isSpotLight){const B=r.spot[g];B.position.setFromMatrixPosition(b.matrixWorld),B.position.applyMatrix4(d),B.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),B.direction.sub(s),B.direction.transformDirection(d),g++}else if(b.isRectAreaLight){const B=r.rectArea[v];B.position.setFromMatrixPosition(b.matrixWorld),B.position.applyMatrix4(d),a.identity(),o.copy(b.matrixWorld),o.premultiply(d),a.extractRotation(o),B.halfWidth.set(b.width*.5,0,0),B.halfHeight.set(0,b.height*.5,0),B.halfWidth.applyMatrix4(a),B.halfHeight.applyMatrix4(a),v++}else if(b.isPointLight){const B=r.point[m];B.position.setFromMatrixPosition(b.matrixWorld),B.position.applyMatrix4(d),m++}else if(b.isHemisphereLight){const B=r.hemi[p];B.direction.setFromMatrixPosition(b.matrixWorld),B.direction.transformDirection(d),p++}}}return{setup:l,setupView:c,state:r}}function C5(n,e){const t=new Eh(n,e),i=[],r=[];function s(){i.length=0,r.length=0}function o(h){i.push(h)}function a(h){r.push(h)}function l(h){t.setup(i,h)}function c(h){t.setupView(i,h)}return{init:s,state:{lightsArray:i,shadowsArray:r,lights:t},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function bh(n,e){let t=new WeakMap;function i(s,o=0){const a=t.get(s);let l;return a===void 0?(l=new C5(n,e),t.set(s,[l])):o>=a.length?(l=new C5(n,e),a.push(l)):l=a[o],l}function r(){t=new WeakMap}return{get:i,dispose:r}}class Th extends Qt{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=oo,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Ah extends Qt{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const wh=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Rh=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Ch(n,e,t){let i=new v9;const r=new p1,s=new p1,o=new Me,a=new Th({depthPacking:ao}),l=new Ah,c={},u=t.maxTextureSize,h={[$t]:He,[He]:$t,[ot]:ot},f=new Lt({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new p1},radius:{value:4}},vertexShader:wh,fragmentShader:Rh}),m=f.clone();m.defines.HORIZONTAL_PASS=1;const g=new Se;g.setAttribute("position",new tt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const v=new Be(g,f),p=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=d9;let d=this.type;this.render=function(R,L,t1){if(p.enabled===!1||p.autoUpdate===!1&&p.needsUpdate===!1||R.length===0)return;const T=n.getRenderTarget(),A=n.getActiveCubeFace(),Y=n.getActiveMipmapLevel(),s1=n.state;s1.setBlending(jt),s1.buffers.color.setClear(1,1,1,1),s1.buffers.depth.setTest(!0),s1.setScissorTest(!1);const f1=d!==At&&this.type===At,z=d===At&&this.type!==At;for(let X=0,q=R.length;X<q;X++){const J=R[X],Z=J.shadow;if(Z===void 0){console.warn("THREE.WebGLShadowMap:",J,"has no shadow.");continue}if(Z.autoUpdate===!1&&Z.needsUpdate===!1)continue;r.copy(Z.mapSize);const i1=Z.getFrameExtents();if(r.multiply(i1),s.copy(Z.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(s.x=Math.floor(u/i1.x),r.x=s.x*i1.x,Z.mapSize.x=s.x),r.y>u&&(s.y=Math.floor(u/i1.y),r.y=s.y*i1.y,Z.mapSize.y=s.y)),Z.map===null||f1===!0||z===!0){const u1=this.type!==At?{minFilter:Oe,magFilter:Oe}:{};Z.map!==null&&Z.map.dispose(),Z.map=new y2(r.x,r.y,u1),Z.map.texture.name=J.name+".shadowMap",Z.camera.updateProjectionMatrix()}n.setRenderTarget(Z.map),n.clear();const o1=Z.getViewportCount();for(let u1=0;u1<o1;u1++){const h1=Z.getViewport(u1);o.set(s.x*h1.x,s.y*h1.y,s.x*h1.z,s.y*h1.w),s1.viewport(o),Z.updateMatrices(J,u1),i=Z.getFrustum(),b(L,t1,Z.camera,J,this.type)}Z.isPointLightShadow!==!0&&this.type===At&&w(Z,t1),Z.needsUpdate=!1}d=this.type,p.needsUpdate=!1,n.setRenderTarget(T,A,Y)};function w(R,L){const t1=e.update(v);f.defines.VSM_SAMPLES!==R.blurSamples&&(f.defines.VSM_SAMPLES=R.blurSamples,m.defines.VSM_SAMPLES=R.blurSamples,f.needsUpdate=!0,m.needsUpdate=!0),R.mapPass===null&&(R.mapPass=new y2(r.x,r.y)),f.uniforms.shadow_pass.value=R.map.texture,f.uniforms.resolution.value=R.mapSize,f.uniforms.radius.value=R.radius,n.setRenderTarget(R.mapPass),n.clear(),n.renderBufferDirect(L,null,t1,f,v,null),m.uniforms.shadow_pass.value=R.mapPass.texture,m.uniforms.resolution.value=R.mapSize,m.uniforms.radius.value=R.radius,n.setRenderTarget(R.map),n.clear(),n.renderBufferDirect(L,null,t1,m,v,null)}function y(R,L,t1,T){let A=null;const Y=t1.isPointLight===!0?R.customDistanceMaterial:R.customDepthMaterial;if(Y!==void 0)A=Y;else if(A=t1.isPointLight===!0?l:a,n.localClippingEnabled&&L.clipShadows===!0&&Array.isArray(L.clippingPlanes)&&L.clippingPlanes.length!==0||L.displacementMap&&L.displacementScale!==0||L.alphaMap&&L.alphaTest>0||L.map&&L.alphaTest>0){const s1=A.uuid,f1=L.uuid;let z=c[s1];z===void 0&&(z={},c[s1]=z);let X=z[f1];X===void 0&&(X=A.clone(),z[f1]=X,L.addEventListener("dispose",B)),A=X}if(A.visible=L.visible,A.wireframe=L.wireframe,T===At?A.side=L.shadowSide!==null?L.shadowSide:L.side:A.side=L.shadowSide!==null?L.shadowSide:h[L.side],A.alphaMap=L.alphaMap,A.alphaTest=L.alphaTest,A.map=L.map,A.clipShadows=L.clipShadows,A.clippingPlanes=L.clippingPlanes,A.clipIntersection=L.clipIntersection,A.displacementMap=L.displacementMap,A.displacementScale=L.displacementScale,A.displacementBias=L.displacementBias,A.wireframeLinewidth=L.wireframeLinewidth,A.linewidth=L.linewidth,t1.isPointLight===!0&&A.isMeshDistanceMaterial===!0){const s1=n.properties.get(A);s1.light=t1}return A}function b(R,L,t1,T,A){if(R.visible===!1)return;if(R.layers.test(L.layers)&&(R.isMesh||R.isLine||R.isPoints)&&(R.castShadow||R.receiveShadow&&A===At)&&(!R.frustumCulled||i.intersectsObject(R))){R.modelViewMatrix.multiplyMatrices(t1.matrixWorldInverse,R.matrixWorld);const f1=e.update(R),z=R.material;if(Array.isArray(z)){const X=f1.groups;for(let q=0,J=X.length;q<J;q++){const Z=X[q],i1=z[Z.materialIndex];if(i1&&i1.visible){const o1=y(R,i1,T,A);R.onBeforeShadow(n,R,L,t1,f1,o1,Z),n.renderBufferDirect(t1,null,f1,o1,R,Z),R.onAfterShadow(n,R,L,t1,f1,o1,Z)}}}else if(z.visible){const X=y(R,z,T,A);R.onBeforeShadow(n,R,L,t1,f1,X,null),n.renderBufferDirect(t1,null,f1,X,R,null),R.onAfterShadow(n,R,L,t1,f1,X,null)}}const s1=R.children;for(let f1=0,z=s1.length;f1<z;f1++)b(s1[f1],L,t1,T,A)}function B(R){R.target.removeEventListener("dispose",B);for(const t1 in c){const T=c[t1],A=R.target.uuid;A in T&&(T[A].dispose(),delete T[A])}}}function Ph(n,e,t){const i=t.isWebGL2;function r(){let O=!1;const g1=new Me;let _1=null;const D1=new Me(0,0,0,0);return{setMask:function(R1){_1!==R1&&!O&&(n.colorMask(R1,R1,R1,R1),_1=R1)},setLocked:function(R1){O=R1},setClear:function(R1,$1,J1,_e,Le){Le===!0&&(R1*=_e,$1*=_e,J1*=_e),g1.set(R1,$1,J1,_e),D1.equals(g1)===!1&&(n.clearColor(R1,$1,J1,_e),D1.copy(g1))},reset:function(){O=!1,_1=null,D1.set(-1,0,0,0)}}}function s(){let O=!1,g1=null,_1=null,D1=null;return{setTest:function(R1){R1?N1(n.DEPTH_TEST):w1(n.DEPTH_TEST)},setMask:function(R1){g1!==R1&&!O&&(n.depthMask(R1),g1=R1)},setFunc:function(R1){if(_1!==R1){switch(R1){case Os:n.depthFunc(n.NEVER);break;case Fs:n.depthFunc(n.ALWAYS);break;case Bs:n.depthFunc(n.LESS);break;case Y0:n.depthFunc(n.LEQUAL);break;case zs:n.depthFunc(n.EQUAL);break;case Hs:n.depthFunc(n.GEQUAL);break;case Gs:n.depthFunc(n.GREATER);break;case Vs:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}_1=R1}},setLocked:function(R1){O=R1},setClear:function(R1){D1!==R1&&(n.clearDepth(R1),D1=R1)},reset:function(){O=!1,g1=null,_1=null,D1=null}}}function o(){let O=!1,g1=null,_1=null,D1=null,R1=null,$1=null,J1=null,_e=null,Le=null;return{setTest:function(re){O||(re?N1(n.STENCIL_TEST):w1(n.STENCIL_TEST))},setMask:function(re){g1!==re&&!O&&(n.stencilMask(re),g1=re)},setFunc:function(re,De,ht){(_1!==re||D1!==De||R1!==ht)&&(n.stencilFunc(re,De,ht),_1=re,D1=De,R1=ht)},setOp:function(re,De,ht){($1!==re||J1!==De||_e!==ht)&&(n.stencilOp(re,De,ht),$1=re,J1=De,_e=ht)},setLocked:function(re){O=re},setClear:function(re){Le!==re&&(n.clearStencil(re),Le=re)},reset:function(){O=!1,g1=null,_1=null,D1=null,R1=null,$1=null,J1=null,_e=null,Le=null}}}const a=new r,l=new s,c=new o,u=new WeakMap,h=new WeakMap;let f={},m={},g=new WeakMap,v=[],p=null,d=!1,w=null,y=null,b=null,B=null,R=null,L=null,t1=null,T=new K1(0,0,0),A=0,Y=!1,s1=null,f1=null,z=null,X=null,q=null;const J=n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let Z=!1,i1=0;const o1=n.getParameter(n.VERSION);o1.indexOf("WebGL")!==-1?(i1=parseFloat(/^WebGL (\d)/.exec(o1)[1]),Z=i1>=1):o1.indexOf("OpenGL ES")!==-1&&(i1=parseFloat(/^OpenGL ES (\d)/.exec(o1)[1]),Z=i1>=2);let u1=null,h1={};const Q=n.getParameter(n.SCISSOR_BOX),c1=n.getParameter(n.VIEWPORT),M1=new Me().fromArray(Q),b1=new Me().fromArray(c1);function S1(O,g1,_1,D1){const R1=new Uint8Array(4),$1=n.createTexture();n.bindTexture(O,$1),n.texParameteri(O,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(O,n.TEXTURE_MAG_FILTER,n.NEAREST);for(let J1=0;J1<_1;J1++)i&&(O===n.TEXTURE_3D||O===n.TEXTURE_2D_ARRAY)?n.texImage3D(g1,0,n.RGBA,1,1,D1,0,n.RGBA,n.UNSIGNED_BYTE,R1):n.texImage2D(g1+J1,0,n.RGBA,1,1,0,n.RGBA,n.UNSIGNED_BYTE,R1);return $1}const P1={};P1[n.TEXTURE_2D]=S1(n.TEXTURE_2D,n.TEXTURE_2D,1),P1[n.TEXTURE_CUBE_MAP]=S1(n.TEXTURE_CUBE_MAP,n.TEXTURE_CUBE_MAP_POSITIVE_X,6),i&&(P1[n.TEXTURE_2D_ARRAY]=S1(n.TEXTURE_2D_ARRAY,n.TEXTURE_2D_ARRAY,1,1),P1[n.TEXTURE_3D]=S1(n.TEXTURE_3D,n.TEXTURE_3D,1,1)),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),N1(n.DEPTH_TEST),l.setFunc(Y0),W(!1),x(f8),N1(n.CULL_FACE),I(jt);function N1(O){f[O]!==!0&&(n.enable(O),f[O]=!0)}function w1(O){f[O]!==!1&&(n.disable(O),f[O]=!1)}function I1(O,g1){return m[O]!==g1?(n.bindFramebuffer(O,g1),m[O]=g1,i&&(O===n.DRAW_FRAMEBUFFER&&(m[n.FRAMEBUFFER]=g1),O===n.FRAMEBUFFER&&(m[n.DRAW_FRAMEBUFFER]=g1)),!0):!1}function D(O,g1){let _1=v,D1=!1;if(O)if(_1=g.get(g1),_1===void 0&&(_1=[],g.set(g1,_1)),O.isWebGLMultipleRenderTargets){const R1=O.texture;if(_1.length!==R1.length||_1[0]!==n.COLOR_ATTACHMENT0){for(let $1=0,J1=R1.length;$1<J1;$1++)_1[$1]=n.COLOR_ATTACHMENT0+$1;_1.length=R1.length,D1=!0}}else _1[0]!==n.COLOR_ATTACHMENT0&&(_1[0]=n.COLOR_ATTACHMENT0,D1=!0);else _1[0]!==n.BACK&&(_1[0]=n.BACK,D1=!0);D1&&(t.isWebGL2?n.drawBuffers(_1):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(_1))}function M(O){return p!==O?(n.useProgram(O),p=O,!0):!1}const S={[h2]:n.FUNC_ADD,[Ms]:n.FUNC_SUBTRACT,[Ss]:n.FUNC_REVERSE_SUBTRACT};if(i)S[m8]=n.MIN,S[g8]=n.MAX;else{const O=e.get("EXT_blend_minmax");O!==null&&(S[m8]=O.MIN_EXT,S[g8]=O.MAX_EXT)}const U={[Es]:n.ZERO,[bs]:n.ONE,[Ts]:n.SRC_COLOR,[Cn]:n.SRC_ALPHA,[Ls]:n.SRC_ALPHA_SATURATE,[Cs]:n.DST_COLOR,[ws]:n.DST_ALPHA,[As]:n.ONE_MINUS_SRC_COLOR,[Pn]:n.ONE_MINUS_SRC_ALPHA,[Ps]:n.ONE_MINUS_DST_COLOR,[Rs]:n.ONE_MINUS_DST_ALPHA,[Ds]:n.CONSTANT_COLOR,[Is]:n.ONE_MINUS_CONSTANT_COLOR,[Us]:n.CONSTANT_ALPHA,[Ns]:n.ONE_MINUS_CONSTANT_ALPHA};function I(O,g1,_1,D1,R1,$1,J1,_e,Le,re){if(O===jt){d===!0&&(w1(n.BLEND),d=!1);return}if(d===!1&&(N1(n.BLEND),d=!0),O!==ys){if(O!==w||re!==Y){if((y!==h2||R!==h2)&&(n.blendEquation(n.FUNC_ADD),y=h2,R=h2),re)switch(O){case n3:n.blendFuncSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case q0:n.blendFunc(n.ONE,n.ONE);break;case d8:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case p8:n.blendFuncSeparate(n.ZERO,n.SRC_COLOR,n.ZERO,n.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",O);break}else switch(O){case n3:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case q0:n.blendFunc(n.SRC_ALPHA,n.ONE);break;case d8:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case p8:n.blendFunc(n.ZERO,n.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",O);break}b=null,B=null,L=null,t1=null,T.set(0,0,0),A=0,w=O,Y=re}return}R1=R1||g1,$1=$1||_1,J1=J1||D1,(g1!==y||R1!==R)&&(n.blendEquationSeparate(S[g1],S[R1]),y=g1,R=R1),(_1!==b||D1!==B||$1!==L||J1!==t1)&&(n.blendFuncSeparate(U[_1],U[D1],U[$1],U[J1]),b=_1,B=D1,L=$1,t1=J1),(_e.equals(T)===!1||Le!==A)&&(n.blendColor(_e.r,_e.g,_e.b,Le),T.copy(_e),A=Le),w=O,Y=!1}function V(O,g1){O.side===ot?w1(n.CULL_FACE):N1(n.CULL_FACE);let _1=O.side===He;g1&&(_1=!_1),W(_1),O.blending===n3&&O.transparent===!1?I(jt):I(O.blending,O.blendEquation,O.blendSrc,O.blendDst,O.blendEquationAlpha,O.blendSrcAlpha,O.blendDstAlpha,O.blendColor,O.blendAlpha,O.premultipliedAlpha),l.setFunc(O.depthFunc),l.setTest(O.depthTest),l.setMask(O.depthWrite),a.setMask(O.colorWrite);const D1=O.stencilWrite;c.setTest(D1),D1&&(c.setMask(O.stencilWriteMask),c.setFunc(O.stencilFunc,O.stencilRef,O.stencilFuncMask),c.setOp(O.stencilFail,O.stencilZFail,O.stencilZPass)),C(O.polygonOffset,O.polygonOffsetFactor,O.polygonOffsetUnits),O.alphaToCoverage===!0?N1(n.SAMPLE_ALPHA_TO_COVERAGE):w1(n.SAMPLE_ALPHA_TO_COVERAGE)}function W(O){s1!==O&&(O?n.frontFace(n.CW):n.frontFace(n.CCW),s1=O)}function x(O){O!==_s?(N1(n.CULL_FACE),O!==f1&&(O===f8?n.cullFace(n.BACK):O===vs?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):w1(n.CULL_FACE),f1=O}function _(O){O!==z&&(Z&&n.lineWidth(O),z=O)}function C(O,g1,_1){O?(N1(n.POLYGON_OFFSET_FILL),(X!==g1||q!==_1)&&(n.polygonOffset(g1,_1),X=g1,q=_1)):w1(n.POLYGON_OFFSET_FILL)}function F(O){O?N1(n.SCISSOR_TEST):w1(n.SCISSOR_TEST)}function H(O){O===void 0&&(O=n.TEXTURE0+J-1),u1!==O&&(n.activeTexture(O),u1=O)}function k(O,g1,_1){_1===void 0&&(u1===null?_1=n.TEXTURE0+J-1:_1=u1);let D1=h1[_1];D1===void 0&&(D1={type:void 0,texture:void 0},h1[_1]=D1),(D1.type!==O||D1.texture!==g1)&&(u1!==_1&&(n.activeTexture(_1),u1=_1),n.bindTexture(O,g1||P1[O]),D1.type=O,D1.texture=g1)}function r1(){const O=h1[u1];O!==void 0&&O.type!==void 0&&(n.bindTexture(O.type,null),O.type=void 0,O.texture=void 0)}function e1(){try{n.compressedTexImage2D.apply(n,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function a1(){try{n.compressedTexImage3D.apply(n,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function x1(){try{n.texSubImage2D.apply(n,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function T1(){try{n.texSubImage3D.apply(n,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function n1(){try{n.compressedTexSubImage2D.apply(n,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function L1(){try{n.compressedTexSubImage3D.apply(n,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function P(){try{n.texStorage2D.apply(n,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function l1(){try{n.texStorage3D.apply(n,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function m1(){try{n.texImage2D.apply(n,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function d1(){try{n.texImage3D.apply(n,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function E1(O){M1.equals(O)===!1&&(n.scissor(O.x,O.y,O.z,O.w),M1.copy(O))}function U1(O){b1.equals(O)===!1&&(n.viewport(O.x,O.y,O.z,O.w),b1.copy(O))}function q1(O,g1){let _1=h.get(g1);_1===void 0&&(_1=new WeakMap,h.set(g1,_1));let D1=_1.get(O);D1===void 0&&(D1=n.getUniformBlockIndex(g1,O.name),_1.set(O,D1))}function V1(O,g1){const D1=h.get(g1).get(O);u.get(g1)!==D1&&(n.uniformBlockBinding(g1,D1,O.__bindingPointIndex),u.set(g1,D1))}function v1(){n.disable(n.BLEND),n.disable(n.CULL_FACE),n.disable(n.DEPTH_TEST),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SCISSOR_TEST),n.disable(n.STENCIL_TEST),n.disable(n.SAMPLE_ALPHA_TO_COVERAGE),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ONE,n.ZERO),n.blendFuncSeparate(n.ONE,n.ZERO,n.ONE,n.ZERO),n.blendColor(0,0,0,0),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(n.LESS),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(n.ALWAYS,0,4294967295),n.stencilOp(n.KEEP,n.KEEP,n.KEEP),n.clearStencil(0),n.cullFace(n.BACK),n.frontFace(n.CCW),n.polygonOffset(0,0),n.activeTexture(n.TEXTURE0),n.bindFramebuffer(n.FRAMEBUFFER,null),i===!0&&(n.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),n.bindFramebuffer(n.READ_FRAMEBUFFER,null)),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),f={},u1=null,h1={},m={},g=new WeakMap,v=[],p=null,d=!1,w=null,y=null,b=null,B=null,R=null,L=null,t1=null,T=new K1(0,0,0),A=0,Y=!1,s1=null,f1=null,z=null,X=null,q=null,M1.set(0,0,n.canvas.width,n.canvas.height),b1.set(0,0,n.canvas.width,n.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:N1,disable:w1,bindFramebuffer:I1,drawBuffers:D,useProgram:M,setBlending:I,setMaterial:V,setFlipSided:W,setCullFace:x,setLineWidth:_,setPolygonOffset:C,setScissorTest:F,activeTexture:H,bindTexture:k,unbindTexture:r1,compressedTexImage2D:e1,compressedTexImage3D:a1,texImage2D:m1,texImage3D:d1,updateUBOMapping:q1,uniformBlockBinding:V1,texStorage2D:P,texStorage3D:l1,texSubImage2D:x1,texSubImage3D:T1,compressedTexSubImage2D:n1,compressedTexSubImage3D:L1,scissor:E1,viewport:U1,reset:v1}}function Lh(n,e,t,i,r,s,o){const a=r.isWebGL2,l=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,c=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),u=new WeakMap;let h;const f=new WeakMap;let m=!1;try{m=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function g(x,_){return m?new OffscreenCanvas(x,_):V3("canvas")}function v(x,_,C,F){let H=1;if((x.width>F||x.height>F)&&(H=F/Math.max(x.width,x.height)),H<1||_===!0)if(typeof HTMLImageElement<"u"&&x instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&x instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&x instanceof ImageBitmap){const k=_?J0:Math.floor,r1=k(H*x.width),e1=k(H*x.height);h===void 0&&(h=g(r1,e1));const a1=C?g(r1,e1):h;return a1.width=r1,a1.height=e1,a1.getContext("2d").drawImage(x,0,0,r1,e1),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+x.width+"x"+x.height+") to ("+r1+"x"+e1+")."),a1}else return"data"in x&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+x.width+"x"+x.height+")."),x;return x}function p(x){return Fn(x.width)&&Fn(x.height)}function d(x){return a?!1:x.wrapS!==at||x.wrapT!==at||x.minFilter!==Oe&&x.minFilter!==Ze}function w(x,_){return x.generateMipmaps&&_&&x.minFilter!==Oe&&x.minFilter!==Ze}function y(x){n.generateMipmap(x)}function b(x,_,C,F,H=!1){if(a===!1)return _;if(x!==null){if(n[x]!==void 0)return n[x];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+x+"'")}let k=_;if(_===n.RED&&(C===n.FLOAT&&(k=n.R32F),C===n.HALF_FLOAT&&(k=n.R16F),C===n.UNSIGNED_BYTE&&(k=n.R8)),_===n.RED_INTEGER&&(C===n.UNSIGNED_BYTE&&(k=n.R8UI),C===n.UNSIGNED_SHORT&&(k=n.R16UI),C===n.UNSIGNED_INT&&(k=n.R32UI),C===n.BYTE&&(k=n.R8I),C===n.SHORT&&(k=n.R16I),C===n.INT&&(k=n.R32I)),_===n.RG&&(C===n.FLOAT&&(k=n.RG32F),C===n.HALF_FLOAT&&(k=n.RG16F),C===n.UNSIGNED_BYTE&&(k=n.RG8)),_===n.RGBA){const r1=H?j0:ne.getTransfer(F);C===n.FLOAT&&(k=n.RGBA32F),C===n.HALF_FLOAT&&(k=n.RGBA16F),C===n.UNSIGNED_BYTE&&(k=r1===se?n.SRGB8_ALPHA8:n.RGBA8),C===n.UNSIGNED_SHORT_4_4_4_4&&(k=n.RGBA4),C===n.UNSIGNED_SHORT_5_5_5_1&&(k=n.RGB5_A1)}return(k===n.R16F||k===n.R32F||k===n.RG16F||k===n.RG32F||k===n.RGBA16F||k===n.RGBA32F)&&e.get("EXT_color_buffer_float"),k}function B(x,_,C){return w(x,C)===!0||x.isFramebufferTexture&&x.minFilter!==Oe&&x.minFilter!==Ze?Math.log2(Math.max(_.width,_.height))+1:x.mipmaps!==void 0&&x.mipmaps.length>0?x.mipmaps.length:x.isCompressedTexture&&Array.isArray(x.image)?_.mipmaps.length:1}function R(x){return x===Oe||x===_8||x===L4?n.NEAREST:n.LINEAR}function L(x){const _=x.target;_.removeEventListener("dispose",L),T(_),_.isVideoTexture&&u.delete(_)}function t1(x){const _=x.target;_.removeEventListener("dispose",t1),Y(_)}function T(x){const _=i.get(x);if(_.__webglInit===void 0)return;const C=x.source,F=f.get(C);if(F){const H=F[_.__cacheKey];H.usedTimes--,H.usedTimes===0&&A(x),Object.keys(F).length===0&&f.delete(C)}i.remove(x)}function A(x){const _=i.get(x);n.deleteTexture(_.__webglTexture);const C=x.source,F=f.get(C);delete F[_.__cacheKey],o.memory.textures--}function Y(x){const _=x.texture,C=i.get(x),F=i.get(_);if(F.__webglTexture!==void 0&&(n.deleteTexture(F.__webglTexture),o.memory.textures--),x.depthTexture&&x.depthTexture.dispose(),x.isWebGLCubeRenderTarget)for(let H=0;H<6;H++){if(Array.isArray(C.__webglFramebuffer[H]))for(let k=0;k<C.__webglFramebuffer[H].length;k++)n.deleteFramebuffer(C.__webglFramebuffer[H][k]);else n.deleteFramebuffer(C.__webglFramebuffer[H]);C.__webglDepthbuffer&&n.deleteRenderbuffer(C.__webglDepthbuffer[H])}else{if(Array.isArray(C.__webglFramebuffer))for(let H=0;H<C.__webglFramebuffer.length;H++)n.deleteFramebuffer(C.__webglFramebuffer[H]);else n.deleteFramebuffer(C.__webglFramebuffer);if(C.__webglDepthbuffer&&n.deleteRenderbuffer(C.__webglDepthbuffer),C.__webglMultisampledFramebuffer&&n.deleteFramebuffer(C.__webglMultisampledFramebuffer),C.__webglColorRenderbuffer)for(let H=0;H<C.__webglColorRenderbuffer.length;H++)C.__webglColorRenderbuffer[H]&&n.deleteRenderbuffer(C.__webglColorRenderbuffer[H]);C.__webglDepthRenderbuffer&&n.deleteRenderbuffer(C.__webglDepthRenderbuffer)}if(x.isWebGLMultipleRenderTargets)for(let H=0,k=_.length;H<k;H++){const r1=i.get(_[H]);r1.__webglTexture&&(n.deleteTexture(r1.__webglTexture),o.memory.textures--),i.remove(_[H])}i.remove(_),i.remove(x)}let s1=0;function f1(){s1=0}function z(){const x=s1;return x>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+x+" texture units while this GPU supports only "+r.maxTextures),s1+=1,x}function X(x){const _=[];return _.push(x.wrapS),_.push(x.wrapT),_.push(x.wrapR||0),_.push(x.magFilter),_.push(x.minFilter),_.push(x.anisotropy),_.push(x.internalFormat),_.push(x.format),_.push(x.type),_.push(x.generateMipmaps),_.push(x.premultiplyAlpha),_.push(x.flipY),_.push(x.unpackAlignment),_.push(x.colorSpace),_.join()}function q(x,_){const C=i.get(x);if(x.isVideoTexture&&V(x),x.isRenderTargetTexture===!1&&x.version>0&&C.__version!==x.version){const F=x.image;if(F===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(F.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{M1(C,x,_);return}}t.bindTexture(n.TEXTURE_2D,C.__webglTexture,n.TEXTURE0+_)}function J(x,_){const C=i.get(x);if(x.version>0&&C.__version!==x.version){M1(C,x,_);return}t.bindTexture(n.TEXTURE_2D_ARRAY,C.__webglTexture,n.TEXTURE0+_)}function Z(x,_){const C=i.get(x);if(x.version>0&&C.__version!==x.version){M1(C,x,_);return}t.bindTexture(n.TEXTURE_3D,C.__webglTexture,n.TEXTURE0+_)}function i1(x,_){const C=i.get(x);if(x.version>0&&C.__version!==x.version){b1(C,x,_);return}t.bindTexture(n.TEXTURE_CUBE_MAP,C.__webglTexture,n.TEXTURE0+_)}const o1={[In]:n.REPEAT,[at]:n.CLAMP_TO_EDGE,[Un]:n.MIRRORED_REPEAT},u1={[Oe]:n.NEAREST,[_8]:n.NEAREST_MIPMAP_NEAREST,[L4]:n.NEAREST_MIPMAP_LINEAR,[Ze]:n.LINEAR,[$s]:n.LINEAR_MIPMAP_NEAREST,[z3]:n.LINEAR_MIPMAP_LINEAR},h1={[co]:n.NEVER,[go]:n.ALWAYS,[uo]:n.LESS,[Ji]:n.LEQUAL,[ho]:n.EQUAL,[mo]:n.GEQUAL,[fo]:n.GREATER,[po]:n.NOTEQUAL};function Q(x,_,C){if(C?(n.texParameteri(x,n.TEXTURE_WRAP_S,o1[_.wrapS]),n.texParameteri(x,n.TEXTURE_WRAP_T,o1[_.wrapT]),(x===n.TEXTURE_3D||x===n.TEXTURE_2D_ARRAY)&&n.texParameteri(x,n.TEXTURE_WRAP_R,o1[_.wrapR]),n.texParameteri(x,n.TEXTURE_MAG_FILTER,u1[_.magFilter]),n.texParameteri(x,n.TEXTURE_MIN_FILTER,u1[_.minFilter])):(n.texParameteri(x,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(x,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),(x===n.TEXTURE_3D||x===n.TEXTURE_2D_ARRAY)&&n.texParameteri(x,n.TEXTURE_WRAP_R,n.CLAMP_TO_EDGE),(_.wrapS!==at||_.wrapT!==at)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),n.texParameteri(x,n.TEXTURE_MAG_FILTER,R(_.magFilter)),n.texParameteri(x,n.TEXTURE_MIN_FILTER,R(_.minFilter)),_.minFilter!==Oe&&_.minFilter!==Ze&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),_.compareFunction&&(n.texParameteri(x,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(x,n.TEXTURE_COMPARE_FUNC,h1[_.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const F=e.get("EXT_texture_filter_anisotropic");if(_.magFilter===Oe||_.minFilter!==L4&&_.minFilter!==z3||_.type===Xt&&e.has("OES_texture_float_linear")===!1||a===!1&&_.type===H3&&e.has("OES_texture_half_float_linear")===!1)return;(_.anisotropy>1||i.get(_).__currentAnisotropy)&&(n.texParameterf(x,F.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(_.anisotropy,r.getMaxAnisotropy())),i.get(_).__currentAnisotropy=_.anisotropy)}}function c1(x,_){let C=!1;x.__webglInit===void 0&&(x.__webglInit=!0,_.addEventListener("dispose",L));const F=_.source;let H=f.get(F);H===void 0&&(H={},f.set(F,H));const k=X(_);if(k!==x.__cacheKey){H[k]===void 0&&(H[k]={texture:n.createTexture(),usedTimes:0},o.memory.textures++,C=!0),H[k].usedTimes++;const r1=H[x.__cacheKey];r1!==void 0&&(H[x.__cacheKey].usedTimes--,r1.usedTimes===0&&A(_)),x.__cacheKey=k,x.__webglTexture=H[k].texture}return C}function M1(x,_,C){let F=n.TEXTURE_2D;(_.isDataArrayTexture||_.isCompressedArrayTexture)&&(F=n.TEXTURE_2D_ARRAY),_.isData3DTexture&&(F=n.TEXTURE_3D);const H=c1(x,_),k=_.source;t.bindTexture(F,x.__webglTexture,n.TEXTURE0+C);const r1=i.get(k);if(k.version!==r1.__version||H===!0){t.activeTexture(n.TEXTURE0+C);const e1=ne.getPrimaries(ne.workingColorSpace),a1=_.colorSpace===Qe?null:ne.getPrimaries(_.colorSpace),x1=_.colorSpace===Qe||e1===a1?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,_.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,_.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,_.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,x1);const T1=d(_)&&p(_.image)===!1;let n1=v(_.image,T1,!1,r.maxTextureSize);n1=W(_,n1);const L1=p(n1)||a,P=s.convert(_.format,_.colorSpace);let l1=s.convert(_.type),m1=b(_.internalFormat,P,l1,_.colorSpace,_.isVideoTexture);Q(F,_,L1);let d1;const E1=_.mipmaps,U1=a&&_.isVideoTexture!==!0&&m1!==Ki,q1=r1.__version===void 0||H===!0,V1=B(_,n1,L1);if(_.isDepthTexture)m1=n.DEPTH_COMPONENT,a?_.type===Xt?m1=n.DEPTH_COMPONENT32F:_.type===kt?m1=n.DEPTH_COMPONENT24:_.type===g2?m1=n.DEPTH24_STENCIL8:m1=n.DEPTH_COMPONENT16:_.type===Xt&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),_.format===_2&&m1===n.DEPTH_COMPONENT&&_.type!==p9&&_.type!==kt&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),_.type=kt,l1=s.convert(_.type)),_.format===l3&&m1===n.DEPTH_COMPONENT&&(m1=n.DEPTH_STENCIL,_.type!==g2&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),_.type=g2,l1=s.convert(_.type))),q1&&(U1?t.texStorage2D(n.TEXTURE_2D,1,m1,n1.width,n1.height):t.texImage2D(n.TEXTURE_2D,0,m1,n1.width,n1.height,0,P,l1,null));else if(_.isDataTexture)if(E1.length>0&&L1){U1&&q1&&t.texStorage2D(n.TEXTURE_2D,V1,m1,E1[0].width,E1[0].height);for(let v1=0,O=E1.length;v1<O;v1++)d1=E1[v1],U1?t.texSubImage2D(n.TEXTURE_2D,v1,0,0,d1.width,d1.height,P,l1,d1.data):t.texImage2D(n.TEXTURE_2D,v1,m1,d1.width,d1.height,0,P,l1,d1.data);_.generateMipmaps=!1}else U1?(q1&&t.texStorage2D(n.TEXTURE_2D,V1,m1,n1.width,n1.height),t.texSubImage2D(n.TEXTURE_2D,0,0,0,n1.width,n1.height,P,l1,n1.data)):t.texImage2D(n.TEXTURE_2D,0,m1,n1.width,n1.height,0,P,l1,n1.data);else if(_.isCompressedTexture)if(_.isCompressedArrayTexture){U1&&q1&&t.texStorage3D(n.TEXTURE_2D_ARRAY,V1,m1,E1[0].width,E1[0].height,n1.depth);for(let v1=0,O=E1.length;v1<O;v1++)d1=E1[v1],_.format!==lt?P!==null?U1?t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,v1,0,0,0,d1.width,d1.height,n1.depth,P,d1.data,0,0):t.compressedTexImage3D(n.TEXTURE_2D_ARRAY,v1,m1,d1.width,d1.height,n1.depth,0,d1.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):U1?t.texSubImage3D(n.TEXTURE_2D_ARRAY,v1,0,0,0,d1.width,d1.height,n1.depth,P,l1,d1.data):t.texImage3D(n.TEXTURE_2D_ARRAY,v1,m1,d1.width,d1.height,n1.depth,0,P,l1,d1.data)}else{U1&&q1&&t.texStorage2D(n.TEXTURE_2D,V1,m1,E1[0].width,E1[0].height);for(let v1=0,O=E1.length;v1<O;v1++)d1=E1[v1],_.format!==lt?P!==null?U1?t.compressedTexSubImage2D(n.TEXTURE_2D,v1,0,0,d1.width,d1.height,P,d1.data):t.compressedTexImage2D(n.TEXTURE_2D,v1,m1,d1.width,d1.height,0,d1.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):U1?t.texSubImage2D(n.TEXTURE_2D,v1,0,0,d1.width,d1.height,P,l1,d1.data):t.texImage2D(n.TEXTURE_2D,v1,m1,d1.width,d1.height,0,P,l1,d1.data)}else if(_.isDataArrayTexture)U1?(q1&&t.texStorage3D(n.TEXTURE_2D_ARRAY,V1,m1,n1.width,n1.height,n1.depth),t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,n1.width,n1.height,n1.depth,P,l1,n1.data)):t.texImage3D(n.TEXTURE_2D_ARRAY,0,m1,n1.width,n1.height,n1.depth,0,P,l1,n1.data);else if(_.isData3DTexture)U1?(q1&&t.texStorage3D(n.TEXTURE_3D,V1,m1,n1.width,n1.height,n1.depth),t.texSubImage3D(n.TEXTURE_3D,0,0,0,0,n1.width,n1.height,n1.depth,P,l1,n1.data)):t.texImage3D(n.TEXTURE_3D,0,m1,n1.width,n1.height,n1.depth,0,P,l1,n1.data);else if(_.isFramebufferTexture){if(q1)if(U1)t.texStorage2D(n.TEXTURE_2D,V1,m1,n1.width,n1.height);else{let v1=n1.width,O=n1.height;for(let g1=0;g1<V1;g1++)t.texImage2D(n.TEXTURE_2D,g1,m1,v1,O,0,P,l1,null),v1>>=1,O>>=1}}else if(E1.length>0&&L1){U1&&q1&&t.texStorage2D(n.TEXTURE_2D,V1,m1,E1[0].width,E1[0].height);for(let v1=0,O=E1.length;v1<O;v1++)d1=E1[v1],U1?t.texSubImage2D(n.TEXTURE_2D,v1,0,0,P,l1,d1):t.texImage2D(n.TEXTURE_2D,v1,m1,P,l1,d1);_.generateMipmaps=!1}else U1?(q1&&t.texStorage2D(n.TEXTURE_2D,V1,m1,n1.width,n1.height),t.texSubImage2D(n.TEXTURE_2D,0,0,0,P,l1,n1)):t.texImage2D(n.TEXTURE_2D,0,m1,P,l1,n1);w(_,L1)&&y(F),r1.__version=k.version,_.onUpdate&&_.onUpdate(_)}x.__version=_.version}function b1(x,_,C){if(_.image.length!==6)return;const F=c1(x,_),H=_.source;t.bindTexture(n.TEXTURE_CUBE_MAP,x.__webglTexture,n.TEXTURE0+C);const k=i.get(H);if(H.version!==k.__version||F===!0){t.activeTexture(n.TEXTURE0+C);const r1=ne.getPrimaries(ne.workingColorSpace),e1=_.colorSpace===Qe?null:ne.getPrimaries(_.colorSpace),a1=_.colorSpace===Qe||r1===e1?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,_.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,_.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,_.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,a1);const x1=_.isCompressedTexture||_.image[0].isCompressedTexture,T1=_.image[0]&&_.image[0].isDataTexture,n1=[];for(let v1=0;v1<6;v1++)!x1&&!T1?n1[v1]=v(_.image[v1],!1,!0,r.maxCubemapSize):n1[v1]=T1?_.image[v1].image:_.image[v1],n1[v1]=W(_,n1[v1]);const L1=n1[0],P=p(L1)||a,l1=s.convert(_.format,_.colorSpace),m1=s.convert(_.type),d1=b(_.internalFormat,l1,m1,_.colorSpace),E1=a&&_.isVideoTexture!==!0,U1=k.__version===void 0||F===!0;let q1=B(_,L1,P);Q(n.TEXTURE_CUBE_MAP,_,P);let V1;if(x1){E1&&U1&&t.texStorage2D(n.TEXTURE_CUBE_MAP,q1,d1,L1.width,L1.height);for(let v1=0;v1<6;v1++){V1=n1[v1].mipmaps;for(let O=0;O<V1.length;O++){const g1=V1[O];_.format!==lt?l1!==null?E1?t.compressedTexSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+v1,O,0,0,g1.width,g1.height,l1,g1.data):t.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+v1,O,d1,g1.width,g1.height,0,g1.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):E1?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+v1,O,0,0,g1.width,g1.height,l1,m1,g1.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+v1,O,d1,g1.width,g1.height,0,l1,m1,g1.data)}}}else{V1=_.mipmaps,E1&&U1&&(V1.length>0&&q1++,t.texStorage2D(n.TEXTURE_CUBE_MAP,q1,d1,n1[0].width,n1[0].height));for(let v1=0;v1<6;v1++)if(T1){E1?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+v1,0,0,0,n1[v1].width,n1[v1].height,l1,m1,n1[v1].data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+v1,0,d1,n1[v1].width,n1[v1].height,0,l1,m1,n1[v1].data);for(let O=0;O<V1.length;O++){const _1=V1[O].image[v1].image;E1?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+v1,O+1,0,0,_1.width,_1.height,l1,m1,_1.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+v1,O+1,d1,_1.width,_1.height,0,l1,m1,_1.data)}}else{E1?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+v1,0,0,0,l1,m1,n1[v1]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+v1,0,d1,l1,m1,n1[v1]);for(let O=0;O<V1.length;O++){const g1=V1[O];E1?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+v1,O+1,0,0,l1,m1,g1.image[v1]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+v1,O+1,d1,l1,m1,g1.image[v1])}}}w(_,P)&&y(n.TEXTURE_CUBE_MAP),k.__version=H.version,_.onUpdate&&_.onUpdate(_)}x.__version=_.version}function S1(x,_,C,F,H,k){const r1=s.convert(C.format,C.colorSpace),e1=s.convert(C.type),a1=b(C.internalFormat,r1,e1,C.colorSpace);if(!i.get(_).__hasExternalTextures){const T1=Math.max(1,_.width>>k),n1=Math.max(1,_.height>>k);H===n.TEXTURE_3D||H===n.TEXTURE_2D_ARRAY?t.texImage3D(H,k,a1,T1,n1,_.depth,0,r1,e1,null):t.texImage2D(H,k,a1,T1,n1,0,r1,e1,null)}t.bindFramebuffer(n.FRAMEBUFFER,x),I(_)?l.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,F,H,i.get(C).__webglTexture,0,U(_)):(H===n.TEXTURE_2D||H>=n.TEXTURE_CUBE_MAP_POSITIVE_X&&H<=n.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&n.framebufferTexture2D(n.FRAMEBUFFER,F,H,i.get(C).__webglTexture,k),t.bindFramebuffer(n.FRAMEBUFFER,null)}function P1(x,_,C){if(n.bindRenderbuffer(n.RENDERBUFFER,x),_.depthBuffer&&!_.stencilBuffer){let F=a===!0?n.DEPTH_COMPONENT24:n.DEPTH_COMPONENT16;if(C||I(_)){const H=_.depthTexture;H&&H.isDepthTexture&&(H.type===Xt?F=n.DEPTH_COMPONENT32F:H.type===kt&&(F=n.DEPTH_COMPONENT24));const k=U(_);I(_)?l.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,k,F,_.width,_.height):n.renderbufferStorageMultisample(n.RENDERBUFFER,k,F,_.width,_.height)}else n.renderbufferStorage(n.RENDERBUFFER,F,_.width,_.height);n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,x)}else if(_.depthBuffer&&_.stencilBuffer){const F=U(_);C&&I(_)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,F,n.DEPTH24_STENCIL8,_.width,_.height):I(_)?l.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,F,n.DEPTH24_STENCIL8,_.width,_.height):n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,_.width,_.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,x)}else{const F=_.isWebGLMultipleRenderTargets===!0?_.texture:[_.texture];for(let H=0;H<F.length;H++){const k=F[H],r1=s.convert(k.format,k.colorSpace),e1=s.convert(k.type),a1=b(k.internalFormat,r1,e1,k.colorSpace),x1=U(_);C&&I(_)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,x1,a1,_.width,_.height):I(_)?l.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,x1,a1,_.width,_.height):n.renderbufferStorage(n.RENDERBUFFER,a1,_.width,_.height)}}n.bindRenderbuffer(n.RENDERBUFFER,null)}function N1(x,_){if(_&&_.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(n.FRAMEBUFFER,x),!(_.depthTexture&&_.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(_.depthTexture).__webglTexture||_.depthTexture.image.width!==_.width||_.depthTexture.image.height!==_.height)&&(_.depthTexture.image.width=_.width,_.depthTexture.image.height=_.height,_.depthTexture.needsUpdate=!0),q(_.depthTexture,0);const F=i.get(_.depthTexture).__webglTexture,H=U(_);if(_.depthTexture.format===_2)I(_)?l.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,F,0,H):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,F,0);else if(_.depthTexture.format===l3)I(_)?l.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,F,0,H):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,F,0);else throw new Error("Unknown depthTexture format")}function w1(x){const _=i.get(x),C=x.isWebGLCubeRenderTarget===!0;if(x.depthTexture&&!_.__autoAllocateDepthBuffer){if(C)throw new Error("target.depthTexture not supported in Cube render targets");N1(_.__webglFramebuffer,x)}else if(C){_.__webglDepthbuffer=[];for(let F=0;F<6;F++)t.bindFramebuffer(n.FRAMEBUFFER,_.__webglFramebuffer[F]),_.__webglDepthbuffer[F]=n.createRenderbuffer(),P1(_.__webglDepthbuffer[F],x,!1)}else t.bindFramebuffer(n.FRAMEBUFFER,_.__webglFramebuffer),_.__webglDepthbuffer=n.createRenderbuffer(),P1(_.__webglDepthbuffer,x,!1);t.bindFramebuffer(n.FRAMEBUFFER,null)}function I1(x,_,C){const F=i.get(x);_!==void 0&&S1(F.__webglFramebuffer,x,x.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,0),C!==void 0&&w1(x)}function D(x){const _=x.texture,C=i.get(x),F=i.get(_);x.addEventListener("dispose",t1),x.isWebGLMultipleRenderTargets!==!0&&(F.__webglTexture===void 0&&(F.__webglTexture=n.createTexture()),F.__version=_.version,o.memory.textures++);const H=x.isWebGLCubeRenderTarget===!0,k=x.isWebGLMultipleRenderTargets===!0,r1=p(x)||a;if(H){C.__webglFramebuffer=[];for(let e1=0;e1<6;e1++)if(a&&_.mipmaps&&_.mipmaps.length>0){C.__webglFramebuffer[e1]=[];for(let a1=0;a1<_.mipmaps.length;a1++)C.__webglFramebuffer[e1][a1]=n.createFramebuffer()}else C.__webglFramebuffer[e1]=n.createFramebuffer()}else{if(a&&_.mipmaps&&_.mipmaps.length>0){C.__webglFramebuffer=[];for(let e1=0;e1<_.mipmaps.length;e1++)C.__webglFramebuffer[e1]=n.createFramebuffer()}else C.__webglFramebuffer=n.createFramebuffer();if(k)if(r.drawBuffers){const e1=x.texture;for(let a1=0,x1=e1.length;a1<x1;a1++){const T1=i.get(e1[a1]);T1.__webglTexture===void 0&&(T1.__webglTexture=n.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&x.samples>0&&I(x)===!1){const e1=k?_:[_];C.__webglMultisampledFramebuffer=n.createFramebuffer(),C.__webglColorRenderbuffer=[],t.bindFramebuffer(n.FRAMEBUFFER,C.__webglMultisampledFramebuffer);for(let a1=0;a1<e1.length;a1++){const x1=e1[a1];C.__webglColorRenderbuffer[a1]=n.createRenderbuffer(),n.bindRenderbuffer(n.RENDERBUFFER,C.__webglColorRenderbuffer[a1]);const T1=s.convert(x1.format,x1.colorSpace),n1=s.convert(x1.type),L1=b(x1.internalFormat,T1,n1,x1.colorSpace,x.isXRRenderTarget===!0),P=U(x);n.renderbufferStorageMultisample(n.RENDERBUFFER,P,L1,x.width,x.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+a1,n.RENDERBUFFER,C.__webglColorRenderbuffer[a1])}n.bindRenderbuffer(n.RENDERBUFFER,null),x.depthBuffer&&(C.__webglDepthRenderbuffer=n.createRenderbuffer(),P1(C.__webglDepthRenderbuffer,x,!0)),t.bindFramebuffer(n.FRAMEBUFFER,null)}}if(H){t.bindTexture(n.TEXTURE_CUBE_MAP,F.__webglTexture),Q(n.TEXTURE_CUBE_MAP,_,r1);for(let e1=0;e1<6;e1++)if(a&&_.mipmaps&&_.mipmaps.length>0)for(let a1=0;a1<_.mipmaps.length;a1++)S1(C.__webglFramebuffer[e1][a1],x,_,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+e1,a1);else S1(C.__webglFramebuffer[e1],x,_,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+e1,0);w(_,r1)&&y(n.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(k){const e1=x.texture;for(let a1=0,x1=e1.length;a1<x1;a1++){const T1=e1[a1],n1=i.get(T1);t.bindTexture(n.TEXTURE_2D,n1.__webglTexture),Q(n.TEXTURE_2D,T1,r1),S1(C.__webglFramebuffer,x,T1,n.COLOR_ATTACHMENT0+a1,n.TEXTURE_2D,0),w(T1,r1)&&y(n.TEXTURE_2D)}t.unbindTexture()}else{let e1=n.TEXTURE_2D;if((x.isWebGL3DRenderTarget||x.isWebGLArrayRenderTarget)&&(a?e1=x.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(e1,F.__webglTexture),Q(e1,_,r1),a&&_.mipmaps&&_.mipmaps.length>0)for(let a1=0;a1<_.mipmaps.length;a1++)S1(C.__webglFramebuffer[a1],x,_,n.COLOR_ATTACHMENT0,e1,a1);else S1(C.__webglFramebuffer,x,_,n.COLOR_ATTACHMENT0,e1,0);w(_,r1)&&y(e1),t.unbindTexture()}x.depthBuffer&&w1(x)}function M(x){const _=p(x)||a,C=x.isWebGLMultipleRenderTargets===!0?x.texture:[x.texture];for(let F=0,H=C.length;F<H;F++){const k=C[F];if(w(k,_)){const r1=x.isWebGLCubeRenderTarget?n.TEXTURE_CUBE_MAP:n.TEXTURE_2D,e1=i.get(k).__webglTexture;t.bindTexture(r1,e1),y(r1),t.unbindTexture()}}}function S(x){if(a&&x.samples>0&&I(x)===!1){const _=x.isWebGLMultipleRenderTargets?x.texture:[x.texture],C=x.width,F=x.height;let H=n.COLOR_BUFFER_BIT;const k=[],r1=x.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,e1=i.get(x),a1=x.isWebGLMultipleRenderTargets===!0;if(a1)for(let x1=0;x1<_.length;x1++)t.bindFramebuffer(n.FRAMEBUFFER,e1.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+x1,n.RENDERBUFFER,null),t.bindFramebuffer(n.FRAMEBUFFER,e1.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+x1,n.TEXTURE_2D,null,0);t.bindFramebuffer(n.READ_FRAMEBUFFER,e1.__webglMultisampledFramebuffer),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,e1.__webglFramebuffer);for(let x1=0;x1<_.length;x1++){k.push(n.COLOR_ATTACHMENT0+x1),x.depthBuffer&&k.push(r1);const T1=e1.__ignoreDepthValues!==void 0?e1.__ignoreDepthValues:!1;if(T1===!1&&(x.depthBuffer&&(H|=n.DEPTH_BUFFER_BIT),x.stencilBuffer&&(H|=n.STENCIL_BUFFER_BIT)),a1&&n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,e1.__webglColorRenderbuffer[x1]),T1===!0&&(n.invalidateFramebuffer(n.READ_FRAMEBUFFER,[r1]),n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,[r1])),a1){const n1=i.get(_[x1]).__webglTexture;n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,n1,0)}n.blitFramebuffer(0,0,C,F,0,0,C,F,H,n.NEAREST),c&&n.invalidateFramebuffer(n.READ_FRAMEBUFFER,k)}if(t.bindFramebuffer(n.READ_FRAMEBUFFER,null),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),a1)for(let x1=0;x1<_.length;x1++){t.bindFramebuffer(n.FRAMEBUFFER,e1.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+x1,n.RENDERBUFFER,e1.__webglColorRenderbuffer[x1]);const T1=i.get(_[x1]).__webglTexture;t.bindFramebuffer(n.FRAMEBUFFER,e1.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+x1,n.TEXTURE_2D,T1,0)}t.bindFramebuffer(n.DRAW_FRAMEBUFFER,e1.__webglMultisampledFramebuffer)}}function U(x){return Math.min(r.maxSamples,x.samples)}function I(x){const _=i.get(x);return a&&x.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&_.__useRenderToTexture!==!1}function V(x){const _=o.render.frame;u.get(x)!==_&&(u.set(x,_),x.update())}function W(x,_){const C=x.colorSpace,F=x.format,H=x.type;return x.isCompressedTexture===!0||x.isVideoTexture===!0||x.format===On||C!==Pt&&C!==Qe&&(ne.getTransfer(C)===se?a===!1?e.has("EXT_sRGB")===!0&&F===lt?(x.format=On,x.minFilter=Ze,x.generateMipmaps=!1):_=e7.sRGBToLinear(_):(F!==lt||H!==Zt)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",C)),_}this.allocateTextureUnit=z,this.resetTextureUnits=f1,this.setTexture2D=q,this.setTexture2DArray=J,this.setTexture3D=Z,this.setTextureCube=i1,this.rebindTextures=I1,this.setupRenderTarget=D,this.updateRenderTargetMipmap=M,this.updateMultisampleRenderTarget=S,this.setupDepthRenderbuffer=w1,this.setupFrameBufferTexture=S1,this.useMultisampledRTT=I}function Dh(n,e,t){const i=t.isWebGL2;function r(s,o=Qe){let a;const l=ne.getTransfer(o);if(s===Zt)return n.UNSIGNED_BYTE;if(s===ki)return n.UNSIGNED_SHORT_4_4_4_4;if(s===Xi)return n.UNSIGNED_SHORT_5_5_5_1;if(s===Js)return n.BYTE;if(s===Qs)return n.SHORT;if(s===p9)return n.UNSIGNED_SHORT;if(s===Wi)return n.INT;if(s===kt)return n.UNSIGNED_INT;if(s===Xt)return n.FLOAT;if(s===H3)return i?n.HALF_FLOAT:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===eo)return n.ALPHA;if(s===lt)return n.RGBA;if(s===to)return n.LUMINANCE;if(s===no)return n.LUMINANCE_ALPHA;if(s===_2)return n.DEPTH_COMPONENT;if(s===l3)return n.DEPTH_STENCIL;if(s===On)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(s===io)return n.RED;if(s===qi)return n.RED_INTEGER;if(s===ro)return n.RG;if(s===Yi)return n.RG_INTEGER;if(s===ji)return n.RGBA_INTEGER;if(s===D4||s===I4||s===U4||s===N4)if(l===se)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(s===D4)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===I4)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===U4)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===N4)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===D4)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===I4)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===U4)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===N4)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===v8||s===x8||s===y8||s===M8)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===v8)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===x8)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===y8)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===M8)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Ki)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===S8||s===E8)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(s===S8)return l===se?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(s===E8)return l===se?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===b8||s===T8||s===A8||s===w8||s===R8||s===C8||s===P8||s===L8||s===D8||s===I8||s===U8||s===N8||s===O8||s===F8)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(s===b8)return l===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===T8)return l===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===A8)return l===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===w8)return l===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===R8)return l===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===C8)return l===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===P8)return l===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===L8)return l===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===D8)return l===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===I8)return l===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===U8)return l===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===N8)return l===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===O8)return l===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===F8)return l===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===O4||s===B8||s===z8)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(s===O4)return l===se?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(s===B8)return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(s===z8)return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(s===so||s===H8||s===G8||s===V8)if(a=e.get("EXT_texture_compression_rgtc"),a!==null){if(s===O4)return a.COMPRESSED_RED_RGTC1_EXT;if(s===H8)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===G8)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===V8)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===g2?i?n.UNSIGNED_INT_24_8:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):n[s]!==void 0?n[s]:null}return{convert:r}}class Ih extends Je{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class qe extends ie{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Uh={type:"move"};class on{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new qe,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new qe,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new N,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new N),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new qe,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new N,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new N),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let r=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const v of e.hand.values()){const p=t.getJointPose(v,i),d=this._getHandJoint(c,v);p!==null&&(d.matrix.fromArray(p.transform.matrix),d.matrix.decompose(d.position,d.rotation,d.scale),d.matrixWorldNeedsUpdate=!0,d.jointRadius=p.radius),d.visible=p!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],f=u.position.distanceTo(h.position),m=.02,g=.005;c.inputState.pinching&&f>m+g?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&f<=m-g&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,i),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(r=t.getPose(e.targetRaySpace,i),r===null&&s!==null&&(r=s),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(Uh)))}return a!==null&&(a.visible=r!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const i=new qe;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}class Nh extends T2{constructor(e,t){super();const i=this;let r=null,s=1,o=null,a="local-floor",l=1,c=null,u=null,h=null,f=null,m=null,g=null;const v=t.getContextAttributes();let p=null,d=null;const w=[],y=[],b=new p1;let B=null;const R=new Je;R.layers.enable(1),R.viewport=new Me;const L=new Je;L.layers.enable(2),L.viewport=new Me;const t1=[R,L],T=new Ih;T.layers.enable(1),T.layers.enable(2);let A=null,Y=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(Q){let c1=w[Q];return c1===void 0&&(c1=new on,w[Q]=c1),c1.getTargetRaySpace()},this.getControllerGrip=function(Q){let c1=w[Q];return c1===void 0&&(c1=new on,w[Q]=c1),c1.getGripSpace()},this.getHand=function(Q){let c1=w[Q];return c1===void 0&&(c1=new on,w[Q]=c1),c1.getHandSpace()};function s1(Q){const c1=y.indexOf(Q.inputSource);if(c1===-1)return;const M1=w[c1];M1!==void 0&&(M1.update(Q.inputSource,Q.frame,c||o),M1.dispatchEvent({type:Q.type,data:Q.inputSource}))}function f1(){r.removeEventListener("select",s1),r.removeEventListener("selectstart",s1),r.removeEventListener("selectend",s1),r.removeEventListener("squeeze",s1),r.removeEventListener("squeezestart",s1),r.removeEventListener("squeezeend",s1),r.removeEventListener("end",f1),r.removeEventListener("inputsourceschange",z);for(let Q=0;Q<w.length;Q++){const c1=y[Q];c1!==null&&(y[Q]=null,w[Q].disconnect(c1))}A=null,Y=null,e.setRenderTarget(p),m=null,f=null,h=null,r=null,d=null,h1.stop(),i.isPresenting=!1,e.setPixelRatio(B),e.setSize(b.width,b.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(Q){s=Q,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(Q){a=Q,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(Q){c=Q},this.getBaseLayer=function(){return f!==null?f:m},this.getBinding=function(){return h},this.getFrame=function(){return g},this.getSession=function(){return r},this.setSession=async function(Q){if(r=Q,r!==null){if(p=e.getRenderTarget(),r.addEventListener("select",s1),r.addEventListener("selectstart",s1),r.addEventListener("selectend",s1),r.addEventListener("squeeze",s1),r.addEventListener("squeezestart",s1),r.addEventListener("squeezeend",s1),r.addEventListener("end",f1),r.addEventListener("inputsourceschange",z),v.xrCompatible!==!0&&await t.makeXRCompatible(),B=e.getPixelRatio(),e.getSize(b),r.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const c1={antialias:r.renderState.layers===void 0?v.antialias:!0,alpha:!0,depth:v.depth,stencil:v.stencil,framebufferScaleFactor:s};m=new XRWebGLLayer(r,t,c1),r.updateRenderState({baseLayer:m}),e.setPixelRatio(1),e.setSize(m.framebufferWidth,m.framebufferHeight,!1),d=new y2(m.framebufferWidth,m.framebufferHeight,{format:lt,type:Zt,colorSpace:e.outputColorSpace,stencilBuffer:v.stencil})}else{let c1=null,M1=null,b1=null;v.depth&&(b1=v.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,c1=v.stencil?l3:_2,M1=v.stencil?g2:kt);const S1={colorFormat:t.RGBA8,depthFormat:b1,scaleFactor:s};h=new XRWebGLBinding(r,t),f=h.createProjectionLayer(S1),r.updateRenderState({layers:[f]}),e.setPixelRatio(1),e.setSize(f.textureWidth,f.textureHeight,!1),d=new y2(f.textureWidth,f.textureHeight,{format:lt,type:Zt,depthTexture:new h7(f.textureWidth,f.textureHeight,M1,void 0,void 0,void 0,void 0,void 0,void 0,c1),stencilBuffer:v.stencil,colorSpace:e.outputColorSpace,samples:v.antialias?4:0});const P1=e.properties.get(d);P1.__ignoreDepthValues=f.ignoreDepthValues}d.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await r.requestReferenceSpace(a),h1.setContext(r),h1.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode};function z(Q){for(let c1=0;c1<Q.removed.length;c1++){const M1=Q.removed[c1],b1=y.indexOf(M1);b1>=0&&(y[b1]=null,w[b1].disconnect(M1))}for(let c1=0;c1<Q.added.length;c1++){const M1=Q.added[c1];let b1=y.indexOf(M1);if(b1===-1){for(let P1=0;P1<w.length;P1++)if(P1>=y.length){y.push(M1),b1=P1;break}else if(y[P1]===null){y[P1]=M1,b1=P1;break}if(b1===-1)break}const S1=w[b1];S1&&S1.connect(M1)}}const X=new N,q=new N;function J(Q,c1,M1){X.setFromMatrixPosition(c1.matrixWorld),q.setFromMatrixPosition(M1.matrixWorld);const b1=X.distanceTo(q),S1=c1.projectionMatrix.elements,P1=M1.projectionMatrix.elements,N1=S1[14]/(S1[10]-1),w1=S1[14]/(S1[10]+1),I1=(S1[9]+1)/S1[5],D=(S1[9]-1)/S1[5],M=(S1[8]-1)/S1[0],S=(P1[8]+1)/P1[0],U=N1*M,I=N1*S,V=b1/(-M+S),W=V*-M;c1.matrixWorld.decompose(Q.position,Q.quaternion,Q.scale),Q.translateX(W),Q.translateZ(V),Q.matrixWorld.compose(Q.position,Q.quaternion,Q.scale),Q.matrixWorldInverse.copy(Q.matrixWorld).invert();const x=N1+V,_=w1+V,C=U-W,F=I+(b1-W),H=I1*w1/_*x,k=D*w1/_*x;Q.projectionMatrix.makePerspective(C,F,H,k,x,_),Q.projectionMatrixInverse.copy(Q.projectionMatrix).invert()}function Z(Q,c1){c1===null?Q.matrixWorld.copy(Q.matrix):Q.matrixWorld.multiplyMatrices(c1.matrixWorld,Q.matrix),Q.matrixWorldInverse.copy(Q.matrixWorld).invert()}this.updateCamera=function(Q){if(r===null)return;T.near=L.near=R.near=Q.near,T.far=L.far=R.far=Q.far,(A!==T.near||Y!==T.far)&&(r.updateRenderState({depthNear:T.near,depthFar:T.far}),A=T.near,Y=T.far);const c1=Q.parent,M1=T.cameras;Z(T,c1);for(let b1=0;b1<M1.length;b1++)Z(M1[b1],c1);M1.length===2?J(T,R,L):T.projectionMatrix.copy(R.projectionMatrix),i1(Q,T,c1)};function i1(Q,c1,M1){M1===null?Q.matrix.copy(c1.matrixWorld):(Q.matrix.copy(M1.matrixWorld),Q.matrix.invert(),Q.matrix.multiply(c1.matrixWorld)),Q.matrix.decompose(Q.position,Q.quaternion,Q.scale),Q.updateMatrixWorld(!0),Q.projectionMatrix.copy(c1.projectionMatrix),Q.projectionMatrixInverse.copy(c1.projectionMatrixInverse),Q.isPerspectiveCamera&&(Q.fov=G3*2*Math.atan(1/Q.projectionMatrix.elements[5]),Q.zoom=1)}this.getCamera=function(){return T},this.getFoveation=function(){if(!(f===null&&m===null))return l},this.setFoveation=function(Q){l=Q,f!==null&&(f.fixedFoveation=Q),m!==null&&m.fixedFoveation!==void 0&&(m.fixedFoveation=Q)};let o1=null;function u1(Q,c1){if(u=c1.getViewerPose(c||o),g=c1,u!==null){const M1=u.views;m!==null&&(e.setRenderTargetFramebuffer(d,m.framebuffer),e.setRenderTarget(d));let b1=!1;M1.length!==T.cameras.length&&(T.cameras.length=0,b1=!0);for(let S1=0;S1<M1.length;S1++){const P1=M1[S1];let N1=null;if(m!==null)N1=m.getViewport(P1);else{const I1=h.getViewSubImage(f,P1);N1=I1.viewport,S1===0&&(e.setRenderTargetTextures(d,I1.colorTexture,f.ignoreDepthValues?void 0:I1.depthStencilTexture),e.setRenderTarget(d))}let w1=t1[S1];w1===void 0&&(w1=new Je,w1.layers.enable(S1),w1.viewport=new Me,t1[S1]=w1),w1.matrix.fromArray(P1.transform.matrix),w1.matrix.decompose(w1.position,w1.quaternion,w1.scale),w1.projectionMatrix.fromArray(P1.projectionMatrix),w1.projectionMatrixInverse.copy(w1.projectionMatrix).invert(),w1.viewport.set(N1.x,N1.y,N1.width,N1.height),S1===0&&(T.matrix.copy(w1.matrix),T.matrix.decompose(T.position,T.quaternion,T.scale)),b1===!0&&T.cameras.push(w1)}}for(let M1=0;M1<w.length;M1++){const b1=y[M1],S1=w[M1];b1!==null&&S1!==void 0&&S1.update(b1,c1,c||o)}o1&&o1(Q,c1),c1.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:c1}),g=null}const h1=new c7;h1.setAnimationLoop(u1),this.setAnimationLoop=function(Q){o1=Q},this.dispose=function(){}}}function Oh(n,e){function t(p,d){p.matrixAutoUpdate===!0&&p.updateMatrix(),d.value.copy(p.matrix)}function i(p,d){d.color.getRGB(p.fogColor.value,o7(n)),d.isFog?(p.fogNear.value=d.near,p.fogFar.value=d.far):d.isFogExp2&&(p.fogDensity.value=d.density)}function r(p,d,w,y,b){d.isMeshBasicMaterial||d.isMeshLambertMaterial?s(p,d):d.isMeshToonMaterial?(s(p,d),h(p,d)):d.isMeshPhongMaterial?(s(p,d),u(p,d)):d.isMeshStandardMaterial?(s(p,d),f(p,d),d.isMeshPhysicalMaterial&&m(p,d,b)):d.isMeshMatcapMaterial?(s(p,d),g(p,d)):d.isMeshDepthMaterial?s(p,d):d.isMeshDistanceMaterial?(s(p,d),v(p,d)):d.isMeshNormalMaterial?s(p,d):d.isLineBasicMaterial?(o(p,d),d.isLineDashedMaterial&&a(p,d)):d.isPointsMaterial?l(p,d,w,y):d.isSpriteMaterial?c(p,d):d.isShadowMaterial?(p.color.value.copy(d.color),p.opacity.value=d.opacity):d.isShaderMaterial&&(d.uniformsNeedUpdate=!1)}function s(p,d){p.opacity.value=d.opacity,d.color&&p.diffuse.value.copy(d.color),d.emissive&&p.emissive.value.copy(d.emissive).multiplyScalar(d.emissiveIntensity),d.map&&(p.map.value=d.map,t(d.map,p.mapTransform)),d.alphaMap&&(p.alphaMap.value=d.alphaMap,t(d.alphaMap,p.alphaMapTransform)),d.bumpMap&&(p.bumpMap.value=d.bumpMap,t(d.bumpMap,p.bumpMapTransform),p.bumpScale.value=d.bumpScale,d.side===He&&(p.bumpScale.value*=-1)),d.normalMap&&(p.normalMap.value=d.normalMap,t(d.normalMap,p.normalMapTransform),p.normalScale.value.copy(d.normalScale),d.side===He&&p.normalScale.value.negate()),d.displacementMap&&(p.displacementMap.value=d.displacementMap,t(d.displacementMap,p.displacementMapTransform),p.displacementScale.value=d.displacementScale,p.displacementBias.value=d.displacementBias),d.emissiveMap&&(p.emissiveMap.value=d.emissiveMap,t(d.emissiveMap,p.emissiveMapTransform)),d.specularMap&&(p.specularMap.value=d.specularMap,t(d.specularMap,p.specularMapTransform)),d.alphaTest>0&&(p.alphaTest.value=d.alphaTest);const w=e.get(d).envMap;if(w&&(p.envMap.value=w,p.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,p.reflectivity.value=d.reflectivity,p.ior.value=d.ior,p.refractionRatio.value=d.refractionRatio),d.lightMap){p.lightMap.value=d.lightMap;const y=n._useLegacyLights===!0?Math.PI:1;p.lightMapIntensity.value=d.lightMapIntensity*y,t(d.lightMap,p.lightMapTransform)}d.aoMap&&(p.aoMap.value=d.aoMap,p.aoMapIntensity.value=d.aoMapIntensity,t(d.aoMap,p.aoMapTransform))}function o(p,d){p.diffuse.value.copy(d.color),p.opacity.value=d.opacity,d.map&&(p.map.value=d.map,t(d.map,p.mapTransform))}function a(p,d){p.dashSize.value=d.dashSize,p.totalSize.value=d.dashSize+d.gapSize,p.scale.value=d.scale}function l(p,d,w,y){p.diffuse.value.copy(d.color),p.opacity.value=d.opacity,p.size.value=d.size*w,p.scale.value=y*.5,d.map&&(p.map.value=d.map,t(d.map,p.uvTransform)),d.alphaMap&&(p.alphaMap.value=d.alphaMap,t(d.alphaMap,p.alphaMapTransform)),d.alphaTest>0&&(p.alphaTest.value=d.alphaTest)}function c(p,d){p.diffuse.value.copy(d.color),p.opacity.value=d.opacity,p.rotation.value=d.rotation,d.map&&(p.map.value=d.map,t(d.map,p.mapTransform)),d.alphaMap&&(p.alphaMap.value=d.alphaMap,t(d.alphaMap,p.alphaMapTransform)),d.alphaTest>0&&(p.alphaTest.value=d.alphaTest)}function u(p,d){p.specular.value.copy(d.specular),p.shininess.value=Math.max(d.shininess,1e-4)}function h(p,d){d.gradientMap&&(p.gradientMap.value=d.gradientMap)}function f(p,d){p.metalness.value=d.metalness,d.metalnessMap&&(p.metalnessMap.value=d.metalnessMap,t(d.metalnessMap,p.metalnessMapTransform)),p.roughness.value=d.roughness,d.roughnessMap&&(p.roughnessMap.value=d.roughnessMap,t(d.roughnessMap,p.roughnessMapTransform)),e.get(d).envMap&&(p.envMapIntensity.value=d.envMapIntensity)}function m(p,d,w){p.ior.value=d.ior,d.sheen>0&&(p.sheenColor.value.copy(d.sheenColor).multiplyScalar(d.sheen),p.sheenRoughness.value=d.sheenRoughness,d.sheenColorMap&&(p.sheenColorMap.value=d.sheenColorMap,t(d.sheenColorMap,p.sheenColorMapTransform)),d.sheenRoughnessMap&&(p.sheenRoughnessMap.value=d.sheenRoughnessMap,t(d.sheenRoughnessMap,p.sheenRoughnessMapTransform))),d.clearcoat>0&&(p.clearcoat.value=d.clearcoat,p.clearcoatRoughness.value=d.clearcoatRoughness,d.clearcoatMap&&(p.clearcoatMap.value=d.clearcoatMap,t(d.clearcoatMap,p.clearcoatMapTransform)),d.clearcoatRoughnessMap&&(p.clearcoatRoughnessMap.value=d.clearcoatRoughnessMap,t(d.clearcoatRoughnessMap,p.clearcoatRoughnessMapTransform)),d.clearcoatNormalMap&&(p.clearcoatNormalMap.value=d.clearcoatNormalMap,t(d.clearcoatNormalMap,p.clearcoatNormalMapTransform),p.clearcoatNormalScale.value.copy(d.clearcoatNormalScale),d.side===He&&p.clearcoatNormalScale.value.negate())),d.iridescence>0&&(p.iridescence.value=d.iridescence,p.iridescenceIOR.value=d.iridescenceIOR,p.iridescenceThicknessMinimum.value=d.iridescenceThicknessRange[0],p.iridescenceThicknessMaximum.value=d.iridescenceThicknessRange[1],d.iridescenceMap&&(p.iridescenceMap.value=d.iridescenceMap,t(d.iridescenceMap,p.iridescenceMapTransform)),d.iridescenceThicknessMap&&(p.iridescenceThicknessMap.value=d.iridescenceThicknessMap,t(d.iridescenceThicknessMap,p.iridescenceThicknessMapTransform))),d.transmission>0&&(p.transmission.value=d.transmission,p.transmissionSamplerMap.value=w.texture,p.transmissionSamplerSize.value.set(w.width,w.height),d.transmissionMap&&(p.transmissionMap.value=d.transmissionMap,t(d.transmissionMap,p.transmissionMapTransform)),p.thickness.value=d.thickness,d.thicknessMap&&(p.thicknessMap.value=d.thicknessMap,t(d.thicknessMap,p.thicknessMapTransform)),p.attenuationDistance.value=d.attenuationDistance,p.attenuationColor.value.copy(d.attenuationColor)),d.anisotropy>0&&(p.anisotropyVector.value.set(d.anisotropy*Math.cos(d.anisotropyRotation),d.anisotropy*Math.sin(d.anisotropyRotation)),d.anisotropyMap&&(p.anisotropyMap.value=d.anisotropyMap,t(d.anisotropyMap,p.anisotropyMapTransform))),p.specularIntensity.value=d.specularIntensity,p.specularColor.value.copy(d.specularColor),d.specularColorMap&&(p.specularColorMap.value=d.specularColorMap,t(d.specularColorMap,p.specularColorMapTransform)),d.specularIntensityMap&&(p.specularIntensityMap.value=d.specularIntensityMap,t(d.specularIntensityMap,p.specularIntensityMapTransform))}function g(p,d){d.matcap&&(p.matcap.value=d.matcap)}function v(p,d){const w=e.get(d).light;p.referencePosition.value.setFromMatrixPosition(w.matrixWorld),p.nearDistance.value=w.shadow.camera.near,p.farDistance.value=w.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:r}}function Fh(n,e,t,i){let r={},s={},o=[];const a=t.isWebGL2?n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(w,y){const b=y.program;i.uniformBlockBinding(w,b)}function c(w,y){let b=r[w.id];b===void 0&&(g(w),b=u(w),r[w.id]=b,w.addEventListener("dispose",p));const B=y.program;i.updateUBOMapping(w,B);const R=e.render.frame;s[w.id]!==R&&(f(w),s[w.id]=R)}function u(w){const y=h();w.__bindingPointIndex=y;const b=n.createBuffer(),B=w.__size,R=w.usage;return n.bindBuffer(n.UNIFORM_BUFFER,b),n.bufferData(n.UNIFORM_BUFFER,B,R),n.bindBuffer(n.UNIFORM_BUFFER,null),n.bindBufferBase(n.UNIFORM_BUFFER,y,b),b}function h(){for(let w=0;w<a;w++)if(o.indexOf(w)===-1)return o.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(w){const y=r[w.id],b=w.uniforms,B=w.__cache;n.bindBuffer(n.UNIFORM_BUFFER,y);for(let R=0,L=b.length;R<L;R++){const t1=Array.isArray(b[R])?b[R]:[b[R]];for(let T=0,A=t1.length;T<A;T++){const Y=t1[T];if(m(Y,R,T,B)===!0){const s1=Y.__offset,f1=Array.isArray(Y.value)?Y.value:[Y.value];let z=0;for(let X=0;X<f1.length;X++){const q=f1[X],J=v(q);typeof q=="number"||typeof q=="boolean"?(Y.__data[0]=q,n.bufferSubData(n.UNIFORM_BUFFER,s1+z,Y.__data)):q.isMatrix3?(Y.__data[0]=q.elements[0],Y.__data[1]=q.elements[1],Y.__data[2]=q.elements[2],Y.__data[3]=0,Y.__data[4]=q.elements[3],Y.__data[5]=q.elements[4],Y.__data[6]=q.elements[5],Y.__data[7]=0,Y.__data[8]=q.elements[6],Y.__data[9]=q.elements[7],Y.__data[10]=q.elements[8],Y.__data[11]=0):(q.toArray(Y.__data,z),z+=J.storage/Float32Array.BYTES_PER_ELEMENT)}n.bufferSubData(n.UNIFORM_BUFFER,s1,Y.__data)}}}n.bindBuffer(n.UNIFORM_BUFFER,null)}function m(w,y,b,B){const R=w.value,L=y+"_"+b;if(B[L]===void 0)return typeof R=="number"||typeof R=="boolean"?B[L]=R:B[L]=R.clone(),!0;{const t1=B[L];if(typeof R=="number"||typeof R=="boolean"){if(t1!==R)return B[L]=R,!0}else if(t1.equals(R)===!1)return t1.copy(R),!0}return!1}function g(w){const y=w.uniforms;let b=0;const B=16;for(let L=0,t1=y.length;L<t1;L++){const T=Array.isArray(y[L])?y[L]:[y[L]];for(let A=0,Y=T.length;A<Y;A++){const s1=T[A],f1=Array.isArray(s1.value)?s1.value:[s1.value];for(let z=0,X=f1.length;z<X;z++){const q=f1[z],J=v(q),Z=b%B;Z!==0&&B-Z<J.boundary&&(b+=B-Z),s1.__data=new Float32Array(J.storage/Float32Array.BYTES_PER_ELEMENT),s1.__offset=b,b+=J.storage}}}const R=b%B;return R>0&&(b+=B-R),w.__size=b,w.__cache={},this}function v(w){const y={boundary:0,storage:0};return typeof w=="number"||typeof w=="boolean"?(y.boundary=4,y.storage=4):w.isVector2?(y.boundary=8,y.storage=8):w.isVector3||w.isColor?(y.boundary=16,y.storage=12):w.isVector4?(y.boundary=16,y.storage=16):w.isMatrix3?(y.boundary=48,y.storage=48):w.isMatrix4?(y.boundary=64,y.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),y}function p(w){const y=w.target;y.removeEventListener("dispose",p);const b=o.indexOf(y.__bindingPointIndex);o.splice(b,1),n.deleteBuffer(r[y.id]),delete r[y.id],delete s[y.id]}function d(){for(const w in r)n.deleteBuffer(r[w]);o=[],r={},s={}}return{bind:l,update:c,dispose:d}}class _7{constructor(e={}){const{canvas:t=Io(),context:i=null,depth:r=!0,stencil:s=!0,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:h=!1}=e;this.isWebGLRenderer=!0;let f;i!==null?f=i.getContextAttributes().alpha:f=o;const m=new Uint32Array(4),g=new Int32Array(4);let v=null,p=null;const d=[],w=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=Ee,this._useLegacyLights=!1,this.toneMapping=Kt,this.toneMappingExposure=1;const y=this;let b=!1,B=0,R=0,L=null,t1=-1,T=null;const A=new Me,Y=new Me;let s1=null;const f1=new K1(0);let z=0,X=t.width,q=t.height,J=1,Z=null,i1=null;const o1=new Me(0,0,X,q),u1=new Me(0,0,X,q);let h1=!1;const Q=new v9;let c1=!1,M1=!1,b1=null;const S1=new ce,P1=new p1,N1=new N,w1={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function I1(){return L===null?J:1}let D=i;function M(E,G){for(let K=0;K<E.length;K++){const $=E[K],j=t.getContext($,G);if(j!==null)return j}return null}try{const E={alpha:!0,depth:r,stencil:s,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${f9}`),t.addEventListener("webglcontextlost",v1,!1),t.addEventListener("webglcontextrestored",O,!1),t.addEventListener("webglcontextcreationerror",g1,!1),D===null){const G=["webgl2","webgl","experimental-webgl"];if(y.isWebGL1Renderer===!0&&G.shift(),D=M(G,E),D===null)throw M(G)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&D instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),D.getShaderPrecisionFormat===void 0&&(D.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(E){throw console.error("THREE.WebGLRenderer: "+E.message),E}let S,U,I,V,W,x,_,C,F,H,k,r1,e1,a1,x1,T1,n1,L1,P,l1,m1,d1,E1,U1;function q1(){S=new Yc(D),U=new Gc(D,S,e),S.init(U),d1=new Dh(D,S,U),I=new Ph(D,S,U),V=new Zc(D),W=new gh,x=new Lh(D,S,I,W,U,d1,V),_=new Wc(y),C=new qc(y),F=new ra(D,U),E1=new zc(D,S,F,U),H=new jc(D,F,V,E1),k=new eu(D,H,F,V),P=new Qc(D,U,x),T1=new Vc(W),r1=new mh(y,_,C,S,U,E1,T1),e1=new Oh(y,W),a1=new vh,x1=new bh(S,U),L1=new Bc(y,_,C,I,k,f,l),n1=new Ch(y,k,U),U1=new Fh(D,V,U,I),l1=new Hc(D,S,V,U),m1=new Kc(D,S,V,U),V.programs=r1.programs,y.capabilities=U,y.extensions=S,y.properties=W,y.renderLists=a1,y.shadowMap=n1,y.state=I,y.info=V}q1();const V1=new Nh(y,D);this.xr=V1,this.getContext=function(){return D},this.getContextAttributes=function(){return D.getContextAttributes()},this.forceContextLoss=function(){const E=S.get("WEBGL_lose_context");E&&E.loseContext()},this.forceContextRestore=function(){const E=S.get("WEBGL_lose_context");E&&E.restoreContext()},this.getPixelRatio=function(){return J},this.setPixelRatio=function(E){E!==void 0&&(J=E,this.setSize(X,q,!1))},this.getSize=function(E){return E.set(X,q)},this.setSize=function(E,G,K=!0){if(V1.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}X=E,q=G,t.width=Math.floor(E*J),t.height=Math.floor(G*J),K===!0&&(t.style.width=E+"px",t.style.height=G+"px"),this.setViewport(0,0,E,G)},this.getDrawingBufferSize=function(E){return E.set(X*J,q*J).floor()},this.setDrawingBufferSize=function(E,G,K){X=E,q=G,J=K,t.width=Math.floor(E*K),t.height=Math.floor(G*K),this.setViewport(0,0,E,G)},this.getCurrentViewport=function(E){return E.copy(A)},this.getViewport=function(E){return E.copy(o1)},this.setViewport=function(E,G,K,$){E.isVector4?o1.set(E.x,E.y,E.z,E.w):o1.set(E,G,K,$),I.viewport(A.copy(o1).multiplyScalar(J).floor())},this.getScissor=function(E){return E.copy(u1)},this.setScissor=function(E,G,K,$){E.isVector4?u1.set(E.x,E.y,E.z,E.w):u1.set(E,G,K,$),I.scissor(Y.copy(u1).multiplyScalar(J).floor())},this.getScissorTest=function(){return h1},this.setScissorTest=function(E){I.setScissorTest(h1=E)},this.setOpaqueSort=function(E){Z=E},this.setTransparentSort=function(E){i1=E},this.getClearColor=function(E){return E.copy(L1.getClearColor())},this.setClearColor=function(){L1.setClearColor.apply(L1,arguments)},this.getClearAlpha=function(){return L1.getClearAlpha()},this.setClearAlpha=function(){L1.setClearAlpha.apply(L1,arguments)},this.clear=function(E=!0,G=!0,K=!0){let $=0;if(E){let j=!1;if(L!==null){const A1=L.texture.format;j=A1===ji||A1===Yi||A1===qi}if(j){const A1=L.texture.type,C1=A1===Zt||A1===kt||A1===p9||A1===g2||A1===ki||A1===Xi,O1=L1.getClearColor(),F1=L1.getClearAlpha(),W1=O1.r,B1=O1.g,z1=O1.b;C1?(m[0]=W1,m[1]=B1,m[2]=z1,m[3]=F1,D.clearBufferuiv(D.COLOR,0,m)):(g[0]=W1,g[1]=B1,g[2]=z1,g[3]=F1,D.clearBufferiv(D.COLOR,0,g))}else $|=D.COLOR_BUFFER_BIT}G&&($|=D.DEPTH_BUFFER_BIT),K&&($|=D.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),D.clear($)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",v1,!1),t.removeEventListener("webglcontextrestored",O,!1),t.removeEventListener("webglcontextcreationerror",g1,!1),a1.dispose(),x1.dispose(),W.dispose(),_.dispose(),C.dispose(),k.dispose(),E1.dispose(),U1.dispose(),r1.dispose(),V1.dispose(),V1.removeEventListener("sessionstart",Le),V1.removeEventListener("sessionend",re),b1&&(b1.dispose(),b1=null),De.stop()};function v1(E){E.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),b=!0}function O(){console.log("THREE.WebGLRenderer: Context Restored."),b=!1;const E=V.autoReset,G=n1.enabled,K=n1.autoUpdate,$=n1.needsUpdate,j=n1.type;q1(),V.autoReset=E,n1.enabled=G,n1.autoUpdate=K,n1.needsUpdate=$,n1.type=j}function g1(E){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",E.statusMessage)}function _1(E){const G=E.target;G.removeEventListener("dispose",_1),D1(G)}function D1(E){R1(E),W.remove(E)}function R1(E){const G=W.get(E).programs;G!==void 0&&(G.forEach(function(K){r1.releaseProgram(K)}),E.isShaderMaterial&&r1.releaseShaderCache(E))}this.renderBufferDirect=function(E,G,K,$,j,A1){G===null&&(G=w1);const C1=j.isMesh&&j.matrixWorld.determinant()<0,O1=O7(E,G,K,$,j);I.setMaterial($,C1);let F1=K.index,W1=1;if($.wireframe===!0){if(F1=H.getWireframeAttribute(K),F1===void 0)return;W1=2}const B1=K.drawRange,z1=K.attributes.position;let he=B1.start*W1,We=(B1.start+B1.count)*W1;A1!==null&&(he=Math.max(he,A1.start*W1),We=Math.min(We,(A1.start+A1.count)*W1)),F1!==null?(he=Math.max(he,0),We=Math.min(We,F1.count)):z1!=null&&(he=Math.max(he,0),We=Math.min(We,z1.count));const ve=We-he;if(ve<0||ve===1/0)return;E1.setup(j,$,O1,K,F1);let yt,ae=l1;if(F1!==null&&(yt=F.get(F1),ae=m1,ae.setIndex(yt)),j.isMesh)$.wireframe===!0?(I.setLineWidth($.wireframeLinewidth*I1()),ae.setMode(D.LINES)):ae.setMode(D.TRIANGLES);else if(j.isLine){let Y1=$.linewidth;Y1===void 0&&(Y1=1),I.setLineWidth(Y1*I1()),j.isLineSegments?ae.setMode(D.LINES):j.isLineLoop?ae.setMode(D.LINE_LOOP):ae.setMode(D.LINE_STRIP)}else j.isPoints?ae.setMode(D.POINTS):j.isSprite&&ae.setMode(D.TRIANGLES);if(j.isBatchedMesh)ae.renderMultiDraw(j._multiDrawStarts,j._multiDrawCounts,j._multiDrawCount);else if(j.isInstancedMesh)ae.renderInstances(he,ve,j.count);else if(K.isInstancedBufferGeometry){const Y1=K._maxInstanceCount!==void 0?K._maxInstanceCount:1/0,_4=Math.min(K.instanceCount,Y1);ae.renderInstances(he,ve,_4)}else ae.render(he,ve)};function $1(E,G,K){E.transparent===!0&&E.side===ot&&E.forceSinglePass===!1?(E.side=He,E.needsUpdate=!0,$3(E,G,K),E.side=$t,E.needsUpdate=!0,$3(E,G,K),E.side=ot):$3(E,G,K)}this.compile=function(E,G,K=null){K===null&&(K=E),p=x1.get(K),p.init(),w.push(p),K.traverseVisible(function(j){j.isLight&&j.layers.test(G.layers)&&(p.pushLight(j),j.castShadow&&p.pushShadow(j))}),E!==K&&E.traverseVisible(function(j){j.isLight&&j.layers.test(G.layers)&&(p.pushLight(j),j.castShadow&&p.pushShadow(j))}),p.setupLights(y._useLegacyLights);const $=new Set;return E.traverse(function(j){const A1=j.material;if(A1)if(Array.isArray(A1))for(let C1=0;C1<A1.length;C1++){const O1=A1[C1];$1(O1,K,j),$.add(O1)}else $1(A1,K,j),$.add(A1)}),w.pop(),p=null,$},this.compileAsync=function(E,G,K=null){const $=this.compile(E,G,K);return new Promise(j=>{function A1(){if($.forEach(function(C1){W.get(C1).currentProgram.isReady()&&$.delete(C1)}),$.size===0){j(E);return}setTimeout(A1,10)}S.get("KHR_parallel_shader_compile")!==null?A1():setTimeout(A1,10)})};let J1=null;function _e(E){J1&&J1(E)}function Le(){De.stop()}function re(){De.start()}const De=new c7;De.setAnimationLoop(_e),typeof self<"u"&&De.setContext(self),this.setAnimationLoop=function(E){J1=E,V1.setAnimationLoop(E),E===null?De.stop():De.start()},V1.addEventListener("sessionstart",Le),V1.addEventListener("sessionend",re),this.render=function(E,G){if(G!==void 0&&G.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(b===!0)return;E.matrixWorldAutoUpdate===!0&&E.updateMatrixWorld(),G.parent===null&&G.matrixWorldAutoUpdate===!0&&G.updateMatrixWorld(),V1.enabled===!0&&V1.isPresenting===!0&&(V1.cameraAutoUpdate===!0&&V1.updateCamera(G),G=V1.getCamera()),E.isScene===!0&&E.onBeforeRender(y,E,G,L),p=x1.get(E,w.length),p.init(),w.push(p),S1.multiplyMatrices(G.projectionMatrix,G.matrixWorldInverse),Q.setFromProjectionMatrix(S1),M1=this.localClippingEnabled,c1=T1.init(this.clippingPlanes,M1),v=a1.get(E,d.length),v.init(),d.push(v),ht(E,G,0,y.sortObjects),v.finish(),y.sortObjects===!0&&v.sort(Z,i1),this.info.render.frame++,c1===!0&&T1.beginShadows();const K=p.state.shadowsArray;if(n1.render(K,E,G),c1===!0&&T1.endShadows(),this.info.autoReset===!0&&this.info.reset(),L1.render(v,E),p.setupLights(y._useLegacyLights),G.isArrayCamera){const $=G.cameras;for(let j=0,A1=$.length;j<A1;j++){const C1=$[j];C9(v,E,C1,C1.viewport)}}else C9(v,E,G);L!==null&&(x.updateMultisampleRenderTarget(L),x.updateRenderTargetMipmap(L)),E.isScene===!0&&E.onAfterRender(y,E,G),E1.resetDefaultState(),t1=-1,T=null,w.pop(),w.length>0?p=w[w.length-1]:p=null,d.pop(),d.length>0?v=d[d.length-1]:v=null};function ht(E,G,K,$){if(E.visible===!1)return;if(E.layers.test(G.layers)){if(E.isGroup)K=E.renderOrder;else if(E.isLOD)E.autoUpdate===!0&&E.update(G);else if(E.isLight)p.pushLight(E),E.castShadow&&p.pushShadow(E);else if(E.isSprite){if(!E.frustumCulled||Q.intersectsSprite(E)){$&&N1.setFromMatrixPosition(E.matrixWorld).applyMatrix4(S1);const C1=k.update(E),O1=E.material;O1.visible&&v.push(E,C1,O1,K,N1.z,null)}}else if((E.isMesh||E.isLine||E.isPoints)&&(!E.frustumCulled||Q.intersectsObject(E))){const C1=k.update(E),O1=E.material;if($&&(E.boundingSphere!==void 0?(E.boundingSphere===null&&E.computeBoundingSphere(),N1.copy(E.boundingSphere.center)):(C1.boundingSphere===null&&C1.computeBoundingSphere(),N1.copy(C1.boundingSphere.center)),N1.applyMatrix4(E.matrixWorld).applyMatrix4(S1)),Array.isArray(O1)){const F1=C1.groups;for(let W1=0,B1=F1.length;W1<B1;W1++){const z1=F1[W1],he=O1[z1.materialIndex];he&&he.visible&&v.push(E,C1,he,K,N1.z,z1)}}else O1.visible&&v.push(E,C1,O1,K,N1.z,null)}}const A1=E.children;for(let C1=0,O1=A1.length;C1<O1;C1++)ht(A1[C1],G,K,$)}function C9(E,G,K,$){const j=E.opaque,A1=E.transmissive,C1=E.transparent;p.setupLightsView(K),c1===!0&&T1.setGlobalState(y.clippingPlanes,K),A1.length>0&&N7(j,A1,G,K),$&&I.viewport(A.copy($)),j.length>0&&Z3(j,G,K),A1.length>0&&Z3(A1,G,K),C1.length>0&&Z3(C1,G,K),I.buffers.depth.setTest(!0),I.buffers.depth.setMask(!0),I.buffers.color.setMask(!0),I.setPolygonOffset(!1)}function N7(E,G,K,$){if((K.isScene===!0?K.overrideMaterial:null)!==null)return;const A1=U.isWebGL2;b1===null&&(b1=new y2(1,1,{generateMipmaps:!0,type:S.has("EXT_color_buffer_half_float")?H3:Zt,minFilter:z3,samples:A1?4:0})),y.getDrawingBufferSize(P1),A1?b1.setSize(P1.x,P1.y):b1.setSize(J0(P1.x),J0(P1.y));const C1=y.getRenderTarget();y.setRenderTarget(b1),y.getClearColor(f1),z=y.getClearAlpha(),z<1&&y.setClearColor(16777215,.5),y.clear();const O1=y.toneMapping;y.toneMapping=Kt,Z3(E,K,$),x.updateMultisampleRenderTarget(b1),x.updateRenderTargetMipmap(b1);let F1=!1;for(let W1=0,B1=G.length;W1<B1;W1++){const z1=G[W1],he=z1.object,We=z1.geometry,ve=z1.material,yt=z1.group;if(ve.side===ot&&he.layers.test($.layers)){const ae=ve.side;ve.side=He,ve.needsUpdate=!0,P9(he,K,$,We,ve,yt),ve.side=ae,ve.needsUpdate=!0,F1=!0}}F1===!0&&(x.updateMultisampleRenderTarget(b1),x.updateRenderTargetMipmap(b1)),y.setRenderTarget(C1),y.setClearColor(f1,z),y.toneMapping=O1}function Z3(E,G,K){const $=G.isScene===!0?G.overrideMaterial:null;for(let j=0,A1=E.length;j<A1;j++){const C1=E[j],O1=C1.object,F1=C1.geometry,W1=$===null?C1.material:$,B1=C1.group;O1.layers.test(K.layers)&&P9(O1,G,K,F1,W1,B1)}}function P9(E,G,K,$,j,A1){E.onBeforeRender(y,G,K,$,j,A1),E.modelViewMatrix.multiplyMatrices(K.matrixWorldInverse,E.matrixWorld),E.normalMatrix.getNormalMatrix(E.modelViewMatrix),j.onBeforeRender(y,G,K,$,E,A1),j.transparent===!0&&j.side===ot&&j.forceSinglePass===!1?(j.side=He,j.needsUpdate=!0,y.renderBufferDirect(K,G,$,j,E,A1),j.side=$t,j.needsUpdate=!0,y.renderBufferDirect(K,G,$,j,E,A1),j.side=ot):y.renderBufferDirect(K,G,$,j,E,A1),E.onAfterRender(y,G,K,$,j,A1)}function $3(E,G,K){G.isScene!==!0&&(G=w1);const $=W.get(E),j=p.state.lights,A1=p.state.shadowsArray,C1=j.state.version,O1=r1.getParameters(E,j.state,A1,G,K),F1=r1.getProgramCacheKey(O1);let W1=$.programs;$.environment=E.isMeshStandardMaterial?G.environment:null,$.fog=G.fog,$.envMap=(E.isMeshStandardMaterial?C:_).get(E.envMap||$.environment),W1===void 0&&(E.addEventListener("dispose",_1),W1=new Map,$.programs=W1);let B1=W1.get(F1);if(B1!==void 0){if($.currentProgram===B1&&$.lightsStateVersion===C1)return D9(E,O1),B1}else O1.uniforms=r1.getUniforms(E),E.onBuild(K,O1,y),E.onBeforeCompile(O1,y),B1=r1.acquireProgram(O1,F1),W1.set(F1,B1),$.uniforms=O1.uniforms;const z1=$.uniforms;return(!E.isShaderMaterial&&!E.isRawShaderMaterial||E.clipping===!0)&&(z1.clippingPlanes=T1.uniform),D9(E,O1),$.needsLights=B7(E),$.lightsStateVersion=C1,$.needsLights&&(z1.ambientLightColor.value=j.state.ambient,z1.lightProbe.value=j.state.probe,z1.directionalLights.value=j.state.directional,z1.directionalLightShadows.value=j.state.directionalShadow,z1.spotLights.value=j.state.spot,z1.spotLightShadows.value=j.state.spotShadow,z1.rectAreaLights.value=j.state.rectArea,z1.ltc_1.value=j.state.rectAreaLTC1,z1.ltc_2.value=j.state.rectAreaLTC2,z1.pointLights.value=j.state.point,z1.pointLightShadows.value=j.state.pointShadow,z1.hemisphereLights.value=j.state.hemi,z1.directionalShadowMap.value=j.state.directionalShadowMap,z1.directionalShadowMatrix.value=j.state.directionalShadowMatrix,z1.spotShadowMap.value=j.state.spotShadowMap,z1.spotLightMatrix.value=j.state.spotLightMatrix,z1.spotLightMap.value=j.state.spotLightMap,z1.pointShadowMap.value=j.state.pointShadowMap,z1.pointShadowMatrix.value=j.state.pointShadowMatrix),$.currentProgram=B1,$.uniformsList=null,B1}function L9(E){if(E.uniformsList===null){const G=E.currentProgram.getUniforms();E.uniformsList=H0.seqWithValue(G.seq,E.uniforms)}return E.uniformsList}function D9(E,G){const K=W.get(E);K.outputColorSpace=G.outputColorSpace,K.batching=G.batching,K.instancing=G.instancing,K.instancingColor=G.instancingColor,K.skinning=G.skinning,K.morphTargets=G.morphTargets,K.morphNormals=G.morphNormals,K.morphColors=G.morphColors,K.morphTargetsCount=G.morphTargetsCount,K.numClippingPlanes=G.numClippingPlanes,K.numIntersection=G.numClipIntersection,K.vertexAlphas=G.vertexAlphas,K.vertexTangents=G.vertexTangents,K.toneMapping=G.toneMapping}function O7(E,G,K,$,j){G.isScene!==!0&&(G=w1),x.resetTextureUnits();const A1=G.fog,C1=$.isMeshStandardMaterial?G.environment:null,O1=L===null?y.outputColorSpace:L.isXRRenderTarget===!0?L.texture.colorSpace:Pt,F1=($.isMeshStandardMaterial?C:_).get($.envMap||C1),W1=$.vertexColors===!0&&!!K.attributes.color&&K.attributes.color.itemSize===4,B1=!!K.attributes.tangent&&(!!$.normalMap||$.anisotropy>0),z1=!!K.morphAttributes.position,he=!!K.morphAttributes.normal,We=!!K.morphAttributes.color;let ve=Kt;$.toneMapped&&(L===null||L.isXRRenderTarget===!0)&&(ve=y.toneMapping);const yt=K.morphAttributes.position||K.morphAttributes.normal||K.morphAttributes.color,ae=yt!==void 0?yt.length:0,Y1=W.get($),_4=p.state.lights;if(c1===!0&&(M1===!0||E!==T)){const je=E===T&&$.id===t1;T1.setState($,E,je)}let ue=!1;$.version===Y1.__version?(Y1.needsLights&&Y1.lightsStateVersion!==_4.state.version||Y1.outputColorSpace!==O1||j.isBatchedMesh&&Y1.batching===!1||!j.isBatchedMesh&&Y1.batching===!0||j.isInstancedMesh&&Y1.instancing===!1||!j.isInstancedMesh&&Y1.instancing===!0||j.isSkinnedMesh&&Y1.skinning===!1||!j.isSkinnedMesh&&Y1.skinning===!0||j.isInstancedMesh&&Y1.instancingColor===!0&&j.instanceColor===null||j.isInstancedMesh&&Y1.instancingColor===!1&&j.instanceColor!==null||Y1.envMap!==F1||$.fog===!0&&Y1.fog!==A1||Y1.numClippingPlanes!==void 0&&(Y1.numClippingPlanes!==T1.numPlanes||Y1.numIntersection!==T1.numIntersection)||Y1.vertexAlphas!==W1||Y1.vertexTangents!==B1||Y1.morphTargets!==z1||Y1.morphNormals!==he||Y1.morphColors!==We||Y1.toneMapping!==ve||U.isWebGL2===!0&&Y1.morphTargetsCount!==ae)&&(ue=!0):(ue=!0,Y1.__version=$.version);let t2=Y1.currentProgram;ue===!0&&(t2=$3($,G,j));let I9=!1,p3=!1,v4=!1;const Ae=t2.getUniforms(),n2=Y1.uniforms;if(I.useProgram(t2.program)&&(I9=!0,p3=!0,v4=!0),$.id!==t1&&(t1=$.id,p3=!0),I9||T!==E){Ae.setValue(D,"projectionMatrix",E.projectionMatrix),Ae.setValue(D,"viewMatrix",E.matrixWorldInverse);const je=Ae.map.cameraPosition;je!==void 0&&je.setValue(D,N1.setFromMatrixPosition(E.matrixWorld)),U.logarithmicDepthBuffer&&Ae.setValue(D,"logDepthBufFC",2/(Math.log(E.far+1)/Math.LN2)),($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial)&&Ae.setValue(D,"isOrthographic",E.isOrthographicCamera===!0),T!==E&&(T=E,p3=!0,v4=!0)}if(j.isSkinnedMesh){Ae.setOptional(D,j,"bindMatrix"),Ae.setOptional(D,j,"bindMatrixInverse");const je=j.skeleton;je&&(U.floatVertexTextures?(je.boneTexture===null&&je.computeBoneTexture(),Ae.setValue(D,"boneTexture",je.boneTexture,x)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}j.isBatchedMesh&&(Ae.setOptional(D,j,"batchingTexture"),Ae.setValue(D,"batchingTexture",j._matricesTexture,x));const x4=K.morphAttributes;if((x4.position!==void 0||x4.normal!==void 0||x4.color!==void 0&&U.isWebGL2===!0)&&P.update(j,K,t2),(p3||Y1.receiveShadow!==j.receiveShadow)&&(Y1.receiveShadow=j.receiveShadow,Ae.setValue(D,"receiveShadow",j.receiveShadow)),$.isMeshGouraudMaterial&&$.envMap!==null&&(n2.envMap.value=F1,n2.flipEnvMap.value=F1.isCubeTexture&&F1.isRenderTargetTexture===!1?-1:1),p3&&(Ae.setValue(D,"toneMappingExposure",y.toneMappingExposure),Y1.needsLights&&F7(n2,v4),A1&&$.fog===!0&&e1.refreshFogUniforms(n2,A1),e1.refreshMaterialUniforms(n2,$,J,q,b1),H0.upload(D,L9(Y1),n2,x)),$.isShaderMaterial&&$.uniformsNeedUpdate===!0&&(H0.upload(D,L9(Y1),n2,x),$.uniformsNeedUpdate=!1),$.isSpriteMaterial&&Ae.setValue(D,"center",j.center),Ae.setValue(D,"modelViewMatrix",j.modelViewMatrix),Ae.setValue(D,"normalMatrix",j.normalMatrix),Ae.setValue(D,"modelMatrix",j.matrixWorld),$.isShaderMaterial||$.isRawShaderMaterial){const je=$.uniformsGroups;for(let y4=0,z7=je.length;y4<z7;y4++)if(U.isWebGL2){const U9=je[y4];U1.update(U9,t2),U1.bind(U9,t2)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return t2}function F7(E,G){E.ambientLightColor.needsUpdate=G,E.lightProbe.needsUpdate=G,E.directionalLights.needsUpdate=G,E.directionalLightShadows.needsUpdate=G,E.pointLights.needsUpdate=G,E.pointLightShadows.needsUpdate=G,E.spotLights.needsUpdate=G,E.spotLightShadows.needsUpdate=G,E.rectAreaLights.needsUpdate=G,E.hemisphereLights.needsUpdate=G}function B7(E){return E.isMeshLambertMaterial||E.isMeshToonMaterial||E.isMeshPhongMaterial||E.isMeshStandardMaterial||E.isShadowMaterial||E.isShaderMaterial&&E.lights===!0}this.getActiveCubeFace=function(){return B},this.getActiveMipmapLevel=function(){return R},this.getRenderTarget=function(){return L},this.setRenderTargetTextures=function(E,G,K){W.get(E.texture).__webglTexture=G,W.get(E.depthTexture).__webglTexture=K;const $=W.get(E);$.__hasExternalTextures=!0,$.__hasExternalTextures&&($.__autoAllocateDepthBuffer=K===void 0,$.__autoAllocateDepthBuffer||S.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),$.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(E,G){const K=W.get(E);K.__webglFramebuffer=G,K.__useDefaultFramebuffer=G===void 0},this.setRenderTarget=function(E,G=0,K=0){L=E,B=G,R=K;let $=!0,j=null,A1=!1,C1=!1;if(E){const F1=W.get(E);F1.__useDefaultFramebuffer!==void 0?(I.bindFramebuffer(D.FRAMEBUFFER,null),$=!1):F1.__webglFramebuffer===void 0?x.setupRenderTarget(E):F1.__hasExternalTextures&&x.rebindTextures(E,W.get(E.texture).__webglTexture,W.get(E.depthTexture).__webglTexture);const W1=E.texture;(W1.isData3DTexture||W1.isDataArrayTexture||W1.isCompressedArrayTexture)&&(C1=!0);const B1=W.get(E).__webglFramebuffer;E.isWebGLCubeRenderTarget?(Array.isArray(B1[G])?j=B1[G][K]:j=B1[G],A1=!0):U.isWebGL2&&E.samples>0&&x.useMultisampledRTT(E)===!1?j=W.get(E).__webglMultisampledFramebuffer:Array.isArray(B1)?j=B1[K]:j=B1,A.copy(E.viewport),Y.copy(E.scissor),s1=E.scissorTest}else A.copy(o1).multiplyScalar(J).floor(),Y.copy(u1).multiplyScalar(J).floor(),s1=h1;if(I.bindFramebuffer(D.FRAMEBUFFER,j)&&U.drawBuffers&&$&&I.drawBuffers(E,j),I.viewport(A),I.scissor(Y),I.setScissorTest(s1),A1){const F1=W.get(E.texture);D.framebufferTexture2D(D.FRAMEBUFFER,D.COLOR_ATTACHMENT0,D.TEXTURE_CUBE_MAP_POSITIVE_X+G,F1.__webglTexture,K)}else if(C1){const F1=W.get(E.texture),W1=G||0;D.framebufferTextureLayer(D.FRAMEBUFFER,D.COLOR_ATTACHMENT0,F1.__webglTexture,K||0,W1)}t1=-1},this.readRenderTargetPixels=function(E,G,K,$,j,A1,C1){if(!(E&&E.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let O1=W.get(E).__webglFramebuffer;if(E.isWebGLCubeRenderTarget&&C1!==void 0&&(O1=O1[C1]),O1){I.bindFramebuffer(D.FRAMEBUFFER,O1);try{const F1=E.texture,W1=F1.format,B1=F1.type;if(W1!==lt&&d1.convert(W1)!==D.getParameter(D.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const z1=B1===H3&&(S.has("EXT_color_buffer_half_float")||U.isWebGL2&&S.has("EXT_color_buffer_float"));if(B1!==Zt&&d1.convert(B1)!==D.getParameter(D.IMPLEMENTATION_COLOR_READ_TYPE)&&!(B1===Xt&&(U.isWebGL2||S.has("OES_texture_float")||S.has("WEBGL_color_buffer_float")))&&!z1){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}G>=0&&G<=E.width-$&&K>=0&&K<=E.height-j&&D.readPixels(G,K,$,j,d1.convert(W1),d1.convert(B1),A1)}finally{const F1=L!==null?W.get(L).__webglFramebuffer:null;I.bindFramebuffer(D.FRAMEBUFFER,F1)}}},this.copyFramebufferToTexture=function(E,G,K=0){const $=Math.pow(2,-K),j=Math.floor(G.image.width*$),A1=Math.floor(G.image.height*$);x.setTexture2D(G,0),D.copyTexSubImage2D(D.TEXTURE_2D,K,0,0,E.x,E.y,j,A1),I.unbindTexture()},this.copyTextureToTexture=function(E,G,K,$=0){const j=G.image.width,A1=G.image.height,C1=d1.convert(K.format),O1=d1.convert(K.type);x.setTexture2D(K,0),D.pixelStorei(D.UNPACK_FLIP_Y_WEBGL,K.flipY),D.pixelStorei(D.UNPACK_PREMULTIPLY_ALPHA_WEBGL,K.premultiplyAlpha),D.pixelStorei(D.UNPACK_ALIGNMENT,K.unpackAlignment),G.isDataTexture?D.texSubImage2D(D.TEXTURE_2D,$,E.x,E.y,j,A1,C1,O1,G.image.data):G.isCompressedTexture?D.compressedTexSubImage2D(D.TEXTURE_2D,$,E.x,E.y,G.mipmaps[0].width,G.mipmaps[0].height,C1,G.mipmaps[0].data):D.texSubImage2D(D.TEXTURE_2D,$,E.x,E.y,C1,O1,G.image),$===0&&K.generateMipmaps&&D.generateMipmap(D.TEXTURE_2D),I.unbindTexture()},this.copyTextureToTexture3D=function(E,G,K,$,j=0){if(y.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const A1=E.max.x-E.min.x+1,C1=E.max.y-E.min.y+1,O1=E.max.z-E.min.z+1,F1=d1.convert($.format),W1=d1.convert($.type);let B1;if($.isData3DTexture)x.setTexture3D($,0),B1=D.TEXTURE_3D;else if($.isDataArrayTexture||$.isCompressedArrayTexture)x.setTexture2DArray($,0),B1=D.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}D.pixelStorei(D.UNPACK_FLIP_Y_WEBGL,$.flipY),D.pixelStorei(D.UNPACK_PREMULTIPLY_ALPHA_WEBGL,$.premultiplyAlpha),D.pixelStorei(D.UNPACK_ALIGNMENT,$.unpackAlignment);const z1=D.getParameter(D.UNPACK_ROW_LENGTH),he=D.getParameter(D.UNPACK_IMAGE_HEIGHT),We=D.getParameter(D.UNPACK_SKIP_PIXELS),ve=D.getParameter(D.UNPACK_SKIP_ROWS),yt=D.getParameter(D.UNPACK_SKIP_IMAGES),ae=K.isCompressedTexture?K.mipmaps[j]:K.image;D.pixelStorei(D.UNPACK_ROW_LENGTH,ae.width),D.pixelStorei(D.UNPACK_IMAGE_HEIGHT,ae.height),D.pixelStorei(D.UNPACK_SKIP_PIXELS,E.min.x),D.pixelStorei(D.UNPACK_SKIP_ROWS,E.min.y),D.pixelStorei(D.UNPACK_SKIP_IMAGES,E.min.z),K.isDataTexture||K.isData3DTexture?D.texSubImage3D(B1,j,G.x,G.y,G.z,A1,C1,O1,F1,W1,ae.data):K.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),D.compressedTexSubImage3D(B1,j,G.x,G.y,G.z,A1,C1,O1,F1,ae.data)):D.texSubImage3D(B1,j,G.x,G.y,G.z,A1,C1,O1,F1,W1,ae),D.pixelStorei(D.UNPACK_ROW_LENGTH,z1),D.pixelStorei(D.UNPACK_IMAGE_HEIGHT,he),D.pixelStorei(D.UNPACK_SKIP_PIXELS,We),D.pixelStorei(D.UNPACK_SKIP_ROWS,ve),D.pixelStorei(D.UNPACK_SKIP_IMAGES,yt),j===0&&$.generateMipmaps&&D.generateMipmap(B1),I.unbindTexture()},this.initTexture=function(E){E.isCubeTexture?x.setTextureCube(E,0):E.isData3DTexture?x.setTexture3D(E,0):E.isDataArrayTexture||E.isCompressedArrayTexture?x.setTexture2DArray(E,0):x.setTexture2D(E,0),I.unbindTexture()},this.resetState=function(){B=0,R=0,L=null,I.reset(),E1.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Rt}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===m9?"display-p3":"srgb",t.unpackColorSpace=ne.workingColorSpace===f4?"display-p3":"srgb"}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===Ee?v2:Zi}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===v2?Ee:Pt}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class Bh extends _7{}Bh.prototype.isWebGL1Renderer=!0;class zh extends ie{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}}class Hh{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Nn,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.version=0,this.uuid=vt()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return console.warn("THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let r=0,s=this.stride;r<s;r++)this.array[e+r]=t.array[i+r];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=vt()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=vt()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Ie=new N;class Q0{constructor(e,t,i,r=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)Ie.fromBufferAttribute(this,t),Ie.applyMatrix4(e),this.setXYZ(t,Ie.x,Ie.y,Ie.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Ie.fromBufferAttribute(this,t),Ie.applyNormalMatrix(e),this.setXYZ(t,Ie.x,Ie.y,Ie.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Ie.fromBufferAttribute(this,t),Ie.transformDirection(e),this.setXYZ(t,Ie.x,Ie.y,Ie.z);return this}setX(e,t){return this.normalized&&(t=te(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=te(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=te(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=te(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=gt(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=gt(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=gt(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=gt(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=te(t,this.array),i=te(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=te(t,this.array),i=te(i,this.array),r=te(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=r,this}setXYZW(e,t,i,r,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=te(t,this.array),i=te(i,this.array),r=te(r,this.array),s=te(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=r,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const r=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[r+s])}return new tt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Q0(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const r=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[r+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class v7 extends Qt{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new K1(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let X2;const y3=new N,q2=new N,Y2=new N,j2=new p1,M3=new p1,x7=new ce,A0=new N,S3=new N,w0=new N,P5=new p1,an=new p1,L5=new p1;class Gh extends ie{constructor(e=new v7){if(super(),this.isSprite=!0,this.type="Sprite",X2===void 0){X2=new Se;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new Hh(t,5);X2.setIndex([0,1,2,0,2,3]),X2.setAttribute("position",new Q0(i,3,0,!1)),X2.setAttribute("uv",new Q0(i,2,3,!1))}this.geometry=X2,this.material=e,this.center=new p1(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),q2.setFromMatrixScale(this.matrixWorld),x7.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Y2.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&q2.multiplyScalar(-Y2.z);const i=this.material.rotation;let r,s;i!==0&&(s=Math.cos(i),r=Math.sin(i));const o=this.center;R0(A0.set(-.5,-.5,0),Y2,o,q2,r,s),R0(S3.set(.5,-.5,0),Y2,o,q2,r,s),R0(w0.set(.5,.5,0),Y2,o,q2,r,s),P5.set(0,0),an.set(1,0),L5.set(1,1);let a=e.ray.intersectTriangle(A0,S3,w0,!1,y3);if(a===null&&(R0(S3.set(-.5,.5,0),Y2,o,q2,r,s),an.set(0,1),a=e.ray.intersectTriangle(A0,w0,S3,!1,y3),a===null))return;const l=e.ray.origin.distanceTo(y3);l<e.near||l>e.far||t.push({distance:l,point:y3.clone(),uv:$e.getInterpolation(y3,A0,S3,w0,P5,an,L5,new p1),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function R0(n,e,t,i,r,s){j2.subVectors(n,t).addScalar(.5).multiply(i),r!==void 0?(M3.x=s*j2.x-r*j2.y,M3.y=r*j2.x+s*j2.y):M3.copy(j2),n.copy(e),n.x+=M3.x,n.y+=M3.y,n.applyMatrix4(x7)}class m4 extends Qt{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new K1(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const D5=new N,I5=new N,U5=new ce,ln=new h3,C0=new j3;class y9 extends ie{constructor(e=new Se,t=new m4){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[0];for(let r=1,s=t.count;r<s;r++)D5.fromBufferAttribute(t,r-1),I5.fromBufferAttribute(t,r),i[r]=i[r-1],i[r]+=D5.distanceTo(I5);e.setAttribute("lineDistance",new fe(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const i=this.geometry,r=this.matrixWorld,s=e.params.Line.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),C0.copy(i.boundingSphere),C0.applyMatrix4(r),C0.radius+=s,e.ray.intersectsSphere(C0)===!1)return;U5.copy(r).invert(),ln.copy(e.ray).applyMatrix4(U5);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new N,u=new N,h=new N,f=new N,m=this.isLineSegments?2:1,g=i.index,p=i.attributes.position;if(g!==null){const d=Math.max(0,o.start),w=Math.min(g.count,o.start+o.count);for(let y=d,b=w-1;y<b;y+=m){const B=g.getX(y),R=g.getX(y+1);if(c.fromBufferAttribute(p,B),u.fromBufferAttribute(p,R),ln.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const t1=e.ray.origin.distanceTo(f);t1<e.near||t1>e.far||t.push({distance:t1,point:h.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else{const d=Math.max(0,o.start),w=Math.min(p.count,o.start+o.count);for(let y=d,b=w-1;y<b;y+=m){if(c.fromBufferAttribute(p,y),u.fromBufferAttribute(p,y+1),ln.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const R=e.ray.origin.distanceTo(f);R<e.near||R>e.far||t.push({distance:R,point:h.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}class y7 extends Qt{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new K1(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const N5=new ce,zn=new h3,P0=new j3,L0=new N;class M9 extends ie{constructor(e=new Se,t=new y7){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const i=this.geometry,r=this.matrixWorld,s=e.params.Points.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),P0.copy(i.boundingSphere),P0.applyMatrix4(r),P0.radius+=s,e.ray.intersectsSphere(P0)===!1)return;N5.copy(r).invert(),zn.copy(e.ray).applyMatrix4(N5);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=i.index,h=i.attributes.position;if(c!==null){const f=Math.max(0,o.start),m=Math.min(c.count,o.start+o.count);for(let g=f,v=m;g<v;g++){const p=c.getX(g);L0.fromBufferAttribute(h,p),O5(L0,p,l,r,e,t,this)}}else{const f=Math.max(0,o.start),m=Math.min(h.count,o.start+o.count);for(let g=f,v=m;g<v;g++)L0.fromBufferAttribute(h,g),O5(L0,g,l,r,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function O5(n,e,t,i,r,s,o){const a=zn.distanceSqToPoint(n);if(a<t){const l=new N;zn.closestPointToPoint(n,l),l.applyMatrix4(i);const c=r.ray.origin.distanceTo(l);if(c<r.near||c>r.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,object:o})}}class xt{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let i,r=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)i=this.getPoint(o/e),s+=i.distanceTo(r),t.push(s),r=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const i=this.getLengths();let r=0;const s=i.length;let o;t?o=t:o=e*i[s-1];let a=0,l=s-1,c;for(;a<=l;)if(r=Math.floor(a+(l-a)/2),c=i[r]-o,c<0)a=r+1;else if(c>0)l=r-1;else{l=r;break}if(r=l,i[r]===o)return r/(s-1);const u=i[r],f=i[r+1]-u,m=(o-u)/f;return(r+m)/(s-1)}getTangent(e,t){let r=e-1e-4,s=e+1e-4;r<0&&(r=0),s>1&&(s=1);const o=this.getPoint(r),a=this.getPoint(s),l=t||(o.isVector2?new p1:new N);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t){const i=new N,r=[],s=[],o=[],a=new N,l=new ce;for(let m=0;m<=e;m++){const g=m/e;r[m]=this.getTangentAt(g,new N)}s[0]=new N,o[0]=new N;let c=Number.MAX_VALUE;const u=Math.abs(r[0].x),h=Math.abs(r[0].y),f=Math.abs(r[0].z);u<=c&&(c=u,i.set(1,0,0)),h<=c&&(c=h,i.set(0,1,0)),f<=c&&i.set(0,0,1),a.crossVectors(r[0],i).normalize(),s[0].crossVectors(r[0],a),o[0].crossVectors(r[0],s[0]);for(let m=1;m<=e;m++){if(s[m]=s[m-1].clone(),o[m]=o[m-1].clone(),a.crossVectors(r[m-1],r[m]),a.length()>Number.EPSILON){a.normalize();const g=Math.acos(ye(r[m-1].dot(r[m]),-1,1));s[m].applyMatrix4(l.makeRotationAxis(a,g))}o[m].crossVectors(r[m],s[m])}if(t===!0){let m=Math.acos(ye(s[0].dot(s[e]),-1,1));m/=e,r[0].dot(a.crossVectors(s[0],s[e]))>0&&(m=-m);for(let g=1;g<=e;g++)s[g].applyMatrix4(l.makeRotationAxis(r[g],m*g)),o[g].crossVectors(r[g],s[g])}return{tangents:r,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class S9 extends xt{constructor(e=0,t=0,i=1,r=1,s=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=r,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t){const i=t||new p1,r=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=r;for(;s>r;)s-=r;s<Number.EPSILON&&(o?s=0:s=r),this.aClockwise===!0&&!o&&(s===r?s=-r:s=s-r);const a=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),f=l-this.aX,m=c-this.aY;l=f*u-m*h+this.aX,c=f*h+m*u+this.aY}return i.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class Vh extends S9{constructor(e,t,i,r,s,o){super(e,t,i,i,r,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function E9(){let n=0,e=0,t=0,i=0;function r(s,o,a,l){n=s,e=a,t=-3*s+3*o-2*a-l,i=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){r(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,u,h){let f=(o-s)/c-(a-s)/(c+u)+(a-o)/u,m=(a-o)/u-(l-o)/(u+h)+(l-a)/h;f*=u,m*=u,r(o,a,f,m)},calc:function(s){const o=s*s,a=o*s;return n+e*s+t*o+i*a}}}const D0=new N,cn=new E9,un=new E9,hn=new E9;class M7 extends xt{constructor(e=[],t=!1,i="centripetal",r=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=r}getPoint(e,t=new N){const i=t,r=this.points,s=r.length,o=(s-(this.closed?0:1))*e;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let c,u;this.closed||a>0?c=r[(a-1)%s]:(D0.subVectors(r[0],r[1]).add(r[0]),c=D0);const h=r[a%s],f=r[(a+1)%s];if(this.closed||a+2<s?u=r[(a+2)%s]:(D0.subVectors(r[s-1],r[s-2]).add(r[s-1]),u=D0),this.curveType==="centripetal"||this.curveType==="chordal"){const m=this.curveType==="chordal"?.5:.25;let g=Math.pow(c.distanceToSquared(h),m),v=Math.pow(h.distanceToSquared(f),m),p=Math.pow(f.distanceToSquared(u),m);v<1e-4&&(v=1),g<1e-4&&(g=v),p<1e-4&&(p=v),cn.initNonuniformCatmullRom(c.x,h.x,f.x,u.x,g,v,p),un.initNonuniformCatmullRom(c.y,h.y,f.y,u.y,g,v,p),hn.initNonuniformCatmullRom(c.z,h.z,f.z,u.z,g,v,p)}else this.curveType==="catmullrom"&&(cn.initCatmullRom(c.x,h.x,f.x,u.x,this.tension),un.initCatmullRom(c.y,h.y,f.y,u.y,this.tension),hn.initCatmullRom(c.z,h.z,f.z,u.z,this.tension));return i.set(cn.calc(l),un.calc(l),hn.calc(l)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const r=e.points[t];this.points.push(new N().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function F5(n,e,t,i,r){const s=(i-e)*.5,o=(r-t)*.5,a=n*n,l=n*a;return(2*t-2*i+s+o)*l+(-3*t+3*i-2*s-o)*a+s*n+t}function Wh(n,e){const t=1-n;return t*t*e}function kh(n,e){return 2*(1-n)*n*e}function Xh(n,e){return n*n*e}function L3(n,e,t,i){return Wh(n,e)+kh(n,t)+Xh(n,i)}function qh(n,e){const t=1-n;return t*t*t*e}function Yh(n,e){const t=1-n;return 3*t*t*n*e}function jh(n,e){return 3*(1-n)*n*n*e}function Kh(n,e){return n*n*n*e}function D3(n,e,t,i,r){return qh(n,e)+Yh(n,t)+jh(n,i)+Kh(n,r)}class S7 extends xt{constructor(e=new p1,t=new p1,i=new p1,r=new p1){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=r}getPoint(e,t=new p1){const i=t,r=this.v0,s=this.v1,o=this.v2,a=this.v3;return i.set(D3(e,r.x,s.x,o.x,a.x),D3(e,r.y,s.y,o.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class b9 extends xt{constructor(e=new N,t=new N,i=new N,r=new N){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=r}getPoint(e,t=new N){const i=t,r=this.v0,s=this.v1,o=this.v2,a=this.v3;return i.set(D3(e,r.x,s.x,o.x,a.x),D3(e,r.y,s.y,o.y,a.y),D3(e,r.z,s.z,o.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class E7 extends xt{constructor(e=new p1,t=new p1){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new p1){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new p1){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Zh extends xt{constructor(e=new N,t=new N){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new N){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new N){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class b7 extends xt{constructor(e=new p1,t=new p1,i=new p1){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new p1){const i=t,r=this.v0,s=this.v1,o=this.v2;return i.set(L3(e,r.x,s.x,o.x),L3(e,r.y,s.y,o.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class $h extends xt{constructor(e=new N,t=new N,i=new N){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new N){const i=t,r=this.v0,s=this.v1,o=this.v2;return i.set(L3(e,r.x,s.x,o.x),L3(e,r.y,s.y,o.y),L3(e,r.z,s.z,o.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class T7 extends xt{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new p1){const i=t,r=this.points,s=(r.length-1)*e,o=Math.floor(s),a=s-o,l=r[o===0?o:o-1],c=r[o],u=r[o>r.length-2?r.length-1:o+1],h=r[o>r.length-3?r.length-1:o+2];return i.set(F5(a,l.x,c.x,u.x,h.x),F5(a,l.y,c.y,u.y,h.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const r=e.points[t];this.points.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const r=this.points[t];e.points.push(r.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const r=e.points[t];this.points.push(new p1().fromArray(r))}return this}}var Hn=Object.freeze({__proto__:null,ArcCurve:Vh,CatmullRomCurve3:M7,CubicBezierCurve:S7,CubicBezierCurve3:b9,EllipseCurve:S9,LineCurve:E7,LineCurve3:Zh,QuadraticBezierCurve:b7,QuadraticBezierCurve3:$h,SplineCurve:T7});class Jh extends xt{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const i=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Hn[i](t,e))}return this}getPoint(e,t){const i=e*this.getLength(),r=this.getCurveLengths();let s=0;for(;s<r.length;){if(r[s]>=i){const o=r[s]-i,a=this.curves[s],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let i=0,r=this.curves.length;i<r;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let i;for(let r=0,s=this.curves;r<s.length;r++){const o=s[r],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,l=o.getPoints(a);for(let c=0;c<l.length;c++){const u=l[c];i&&i.equals(u)||(t.push(u),i=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){const r=this.curves[t];e.curves.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const r=e.curves[t];this.curves.push(new Hn[r.type]().fromJSON(r))}return this}}class B5 extends Jh{constructor(e){super(),this.type="Path",this.currentPoint=new p1,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const i=new E7(this.currentPoint.clone(),new p1(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,r){const s=new b7(this.currentPoint.clone(),new p1(e,t),new p1(i,r));return this.curves.push(s),this.currentPoint.set(i,r),this}bezierCurveTo(e,t,i,r,s,o){const a=new S7(this.currentPoint.clone(),new p1(e,t),new p1(i,r),new p1(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),i=new T7(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,r,s,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,i,r,s,o),this}absarc(e,t,i,r,s,o){return this.absellipse(e,t,i,i,r,s,o),this}ellipse(e,t,i,r,s,o,a,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+c,t+u,i,r,s,o,a,l),this}absellipse(e,t,i,r,s,o,a,l){const c=new S9(e,t,i,r,s,o,a,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class A7 extends B5{constructor(e){super(e),this.uuid=vt(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let i=0,r=this.holes.length;i<r;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const r=e.holes[t];this.holes.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){const r=this.holes[t];e.holes.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const r=e.holes[t];this.holes.push(new B5().fromJSON(r))}return this}}const Qh={triangulate:function(n,e,t=2){const i=e&&e.length,r=i?e[0]*t:n.length;let s=w7(n,0,r,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c,u,h,f,m;if(i&&(s=sf(n,e,s,t)),n.length>80*t){a=c=n[0],l=u=n[1];for(let g=t;g<r;g+=t)h=n[g],f=n[g+1],h<a&&(a=h),f<l&&(l=f),h>c&&(c=h),f>u&&(u=f);m=Math.max(c-a,u-l),m=m!==0?32767/m:0}return W3(s,o,t,a,l,m,0),o}};function w7(n,e,t,i,r){let s,o;if(r===gf(n,e,t,i)>0)for(s=e;s<t;s+=i)o=z5(s,n[s],n[s+1],o);else for(s=t-i;s>=e;s-=i)o=z5(s,n[s],n[s+1],o);return o&&g4(o,o.next)&&(X3(o),o=o.next),o}function S2(n,e){if(!n)return n;e||(e=n);let t=n,i;do if(i=!1,!t.steiner&&(g4(t,t.next)||le(t.prev,t,t.next)===0)){if(X3(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function W3(n,e,t,i,r,s,o){if(!n)return;!o&&s&&uf(n,i,r,s);let a=n,l,c;for(;n.prev!==n.next;){if(l=n.prev,c=n.next,s?tf(n,i,r,s):ef(n)){e.push(l.i/t|0),e.push(n.i/t|0),e.push(c.i/t|0),X3(n),n=c.next,a=c.next;continue}if(n=c,n===a){o?o===1?(n=nf(S2(n),e,t),W3(n,e,t,i,r,s,2)):o===2&&rf(n,e,t,i,r,s):W3(S2(n),e,t,i,r,s,1);break}}}function ef(n){const e=n.prev,t=n,i=n.next;if(le(e,t,i)>=0)return!1;const r=e.x,s=t.x,o=i.x,a=e.y,l=t.y,c=i.y,u=r<s?r<o?r:o:s<o?s:o,h=a<l?a<c?a:c:l<c?l:c,f=r>s?r>o?r:o:s>o?s:o,m=a>l?a>c?a:c:l>c?l:c;let g=i.next;for(;g!==e;){if(g.x>=u&&g.x<=f&&g.y>=h&&g.y<=m&&J2(r,a,s,l,o,c,g.x,g.y)&&le(g.prev,g,g.next)>=0)return!1;g=g.next}return!0}function tf(n,e,t,i){const r=n.prev,s=n,o=n.next;if(le(r,s,o)>=0)return!1;const a=r.x,l=s.x,c=o.x,u=r.y,h=s.y,f=o.y,m=a<l?a<c?a:c:l<c?l:c,g=u<h?u<f?u:f:h<f?h:f,v=a>l?a>c?a:c:l>c?l:c,p=u>h?u>f?u:f:h>f?h:f,d=Gn(m,g,e,t,i),w=Gn(v,p,e,t,i);let y=n.prevZ,b=n.nextZ;for(;y&&y.z>=d&&b&&b.z<=w;){if(y.x>=m&&y.x<=v&&y.y>=g&&y.y<=p&&y!==r&&y!==o&&J2(a,u,l,h,c,f,y.x,y.y)&&le(y.prev,y,y.next)>=0||(y=y.prevZ,b.x>=m&&b.x<=v&&b.y>=g&&b.y<=p&&b!==r&&b!==o&&J2(a,u,l,h,c,f,b.x,b.y)&&le(b.prev,b,b.next)>=0))return!1;b=b.nextZ}for(;y&&y.z>=d;){if(y.x>=m&&y.x<=v&&y.y>=g&&y.y<=p&&y!==r&&y!==o&&J2(a,u,l,h,c,f,y.x,y.y)&&le(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;b&&b.z<=w;){if(b.x>=m&&b.x<=v&&b.y>=g&&b.y<=p&&b!==r&&b!==o&&J2(a,u,l,h,c,f,b.x,b.y)&&le(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function nf(n,e,t){let i=n;do{const r=i.prev,s=i.next.next;!g4(r,s)&&R7(r,i,i.next,s)&&k3(r,s)&&k3(s,r)&&(e.push(r.i/t|0),e.push(i.i/t|0),e.push(s.i/t|0),X3(i),X3(i.next),i=n=s),i=i.next}while(i!==n);return S2(i)}function rf(n,e,t,i,r,s){let o=n;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&df(o,a)){let l=C7(o,a);o=S2(o,o.next),l=S2(l,l.next),W3(o,e,t,i,r,s,0),W3(l,e,t,i,r,s,0);return}a=a.next}o=o.next}while(o!==n)}function sf(n,e,t,i){const r=[];let s,o,a,l,c;for(s=0,o=e.length;s<o;s++)a=e[s]*i,l=s<o-1?e[s+1]*i:n.length,c=w7(n,a,l,i,!1),c===c.next&&(c.steiner=!0),r.push(ff(c));for(r.sort(of),s=0;s<r.length;s++)t=af(r[s],t);return t}function of(n,e){return n.x-e.x}function af(n,e){const t=lf(n,e);if(!t)return e;const i=C7(t,n);return S2(i,i.next),S2(t,t.next)}function lf(n,e){let t=e,i=-1/0,r;const s=n.x,o=n.y;do{if(o<=t.y&&o>=t.next.y&&t.next.y!==t.y){const f=t.x+(o-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(f<=s&&f>i&&(i=f,r=t.x<t.next.x?t:t.next,f===s))return r}t=t.next}while(t!==e);if(!r)return null;const a=r,l=r.x,c=r.y;let u=1/0,h;t=r;do s>=t.x&&t.x>=l&&s!==t.x&&J2(o<c?s:i,o,l,c,o<c?i:s,o,t.x,t.y)&&(h=Math.abs(o-t.y)/(s-t.x),k3(t,n)&&(h<u||h===u&&(t.x>r.x||t.x===r.x&&cf(r,t)))&&(r=t,u=h)),t=t.next;while(t!==a);return r}function cf(n,e){return le(n.prev,n,e.prev)<0&&le(e.next,n,n.next)<0}function uf(n,e,t,i){let r=n;do r.z===0&&(r.z=Gn(r.x,r.y,e,t,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==n);r.prevZ.nextZ=null,r.prevZ=null,hf(r)}function hf(n){let e,t,i,r,s,o,a,l,c=1;do{for(t=n,n=null,s=null,o=0;t;){for(o++,i=t,a=0,e=0;e<c&&(a++,i=i.nextZ,!!i);e++);for(l=c;a>0||l>0&&i;)a!==0&&(l===0||!i||t.z<=i.z)?(r=t,t=t.nextZ,a--):(r=i,i=i.nextZ,l--),s?s.nextZ=r:n=r,r.prevZ=s,s=r;t=i}s.nextZ=null,c*=2}while(o>1);return n}function Gn(n,e,t,i,r){return n=(n-t)*r|0,e=(e-i)*r|0,n=(n|n<<8)&16711935,n=(n|n<<4)&252645135,n=(n|n<<2)&858993459,n=(n|n<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,n|e<<1}function ff(n){let e=n,t=n;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==n);return t}function J2(n,e,t,i,r,s,o,a){return(r-o)*(e-a)>=(n-o)*(s-a)&&(n-o)*(i-a)>=(t-o)*(e-a)&&(t-o)*(s-a)>=(r-o)*(i-a)}function df(n,e){return n.next.i!==e.i&&n.prev.i!==e.i&&!pf(n,e)&&(k3(n,e)&&k3(e,n)&&mf(n,e)&&(le(n.prev,n,e.prev)||le(n,e.prev,e))||g4(n,e)&&le(n.prev,n,n.next)>0&&le(e.prev,e,e.next)>0)}function le(n,e,t){return(e.y-n.y)*(t.x-e.x)-(e.x-n.x)*(t.y-e.y)}function g4(n,e){return n.x===e.x&&n.y===e.y}function R7(n,e,t,i){const r=U0(le(n,e,t)),s=U0(le(n,e,i)),o=U0(le(t,i,n)),a=U0(le(t,i,e));return!!(r!==s&&o!==a||r===0&&I0(n,t,e)||s===0&&I0(n,i,e)||o===0&&I0(t,n,i)||a===0&&I0(t,e,i))}function I0(n,e,t){return e.x<=Math.max(n.x,t.x)&&e.x>=Math.min(n.x,t.x)&&e.y<=Math.max(n.y,t.y)&&e.y>=Math.min(n.y,t.y)}function U0(n){return n>0?1:n<0?-1:0}function pf(n,e){let t=n;do{if(t.i!==n.i&&t.next.i!==n.i&&t.i!==e.i&&t.next.i!==e.i&&R7(t,t.next,n,e))return!0;t=t.next}while(t!==n);return!1}function k3(n,e){return le(n.prev,n,n.next)<0?le(n,e,n.next)>=0&&le(n,n.prev,e)>=0:le(n,e,n.prev)<0||le(n,n.next,e)<0}function mf(n,e){let t=n,i=!1;const r=(n.x+e.x)/2,s=(n.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&r<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==n);return i}function C7(n,e){const t=new Vn(n.i,n.x,n.y),i=new Vn(e.i,e.x,e.y),r=n.next,s=e.prev;return n.next=e,e.prev=n,t.next=r,r.prev=t,i.next=t,t.prev=i,s.next=i,i.prev=s,i}function z5(n,e,t,i){const r=new Vn(n,e,t);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function X3(n){n.next.prev=n.prev,n.prev.next=n.next,n.prevZ&&(n.prevZ.nextZ=n.nextZ),n.nextZ&&(n.nextZ.prevZ=n.prevZ)}function Vn(n,e,t){this.i=n,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function gf(n,e,t,i){let r=0;for(let s=e,o=t-i;s<t;s+=i)r+=(n[o]-n[s])*(n[s+1]+n[o+1]),o=s;return r}class I3{static area(e){const t=e.length;let i=0;for(let r=t-1,s=0;s<t;r=s++)i+=e[r].x*e[s].y-e[s].x*e[r].y;return i*.5}static isClockWise(e){return I3.area(e)<0}static triangulateShape(e,t){const i=[],r=[],s=[];H5(e),G5(i,e);let o=e.length;t.forEach(H5);for(let l=0;l<t.length;l++)r.push(o),o+=t[l].length,G5(i,t[l]);const a=Qh.triangulate(i,r);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function H5(n){const e=n.length;e>2&&n[e-1].equals(n[0])&&n.pop()}function G5(n,e){for(let t=0;t<e.length;t++)n.push(e[t].x),n.push(e[t].y)}class T9 extends Se{constructor(e=new A7([new p1(.5,.5),new p1(-.5,.5),new p1(-.5,-.5),new p1(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,r=[],s=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];o(c)}this.setAttribute("position",new fe(r,3)),this.setAttribute("uv",new fe(s,2)),this.computeVertexNormals();function o(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1,h=t.depth!==void 0?t.depth:1;let f=t.bevelEnabled!==void 0?t.bevelEnabled:!0,m=t.bevelThickness!==void 0?t.bevelThickness:.2,g=t.bevelSize!==void 0?t.bevelSize:m-.1,v=t.bevelOffset!==void 0?t.bevelOffset:0,p=t.bevelSegments!==void 0?t.bevelSegments:3;const d=t.extrudePath,w=t.UVGenerator!==void 0?t.UVGenerator:_f;let y,b=!1,B,R,L,t1;d&&(y=d.getSpacedPoints(u),b=!0,f=!1,B=d.computeFrenetFrames(u,!1),R=new N,L=new N,t1=new N),f||(p=0,m=0,g=0,v=0);const T=a.extractPoints(c);let A=T.shape;const Y=T.holes;if(!I3.isClockWise(A)){A=A.reverse();for(let D=0,M=Y.length;D<M;D++){const S=Y[D];I3.isClockWise(S)&&(Y[D]=S.reverse())}}const f1=I3.triangulateShape(A,Y),z=A;for(let D=0,M=Y.length;D<M;D++){const S=Y[D];A=A.concat(S)}function X(D,M,S){return M||console.error("THREE.ExtrudeGeometry: vec does not exist"),D.clone().addScaledVector(M,S)}const q=A.length,J=f1.length;function Z(D,M,S){let U,I,V;const W=D.x-M.x,x=D.y-M.y,_=S.x-D.x,C=S.y-D.y,F=W*W+x*x,H=W*C-x*_;if(Math.abs(H)>Number.EPSILON){const k=Math.sqrt(F),r1=Math.sqrt(_*_+C*C),e1=M.x-x/k,a1=M.y+W/k,x1=S.x-C/r1,T1=S.y+_/r1,n1=((x1-e1)*C-(T1-a1)*_)/(W*C-x*_);U=e1+W*n1-D.x,I=a1+x*n1-D.y;const L1=U*U+I*I;if(L1<=2)return new p1(U,I);V=Math.sqrt(L1/2)}else{let k=!1;W>Number.EPSILON?_>Number.EPSILON&&(k=!0):W<-Number.EPSILON?_<-Number.EPSILON&&(k=!0):Math.sign(x)===Math.sign(C)&&(k=!0),k?(U=-x,I=W,V=Math.sqrt(F)):(U=W,I=x,V=Math.sqrt(F/2))}return new p1(U/V,I/V)}const i1=[];for(let D=0,M=z.length,S=M-1,U=D+1;D<M;D++,S++,U++)S===M&&(S=0),U===M&&(U=0),i1[D]=Z(z[D],z[S],z[U]);const o1=[];let u1,h1=i1.concat();for(let D=0,M=Y.length;D<M;D++){const S=Y[D];u1=[];for(let U=0,I=S.length,V=I-1,W=U+1;U<I;U++,V++,W++)V===I&&(V=0),W===I&&(W=0),u1[U]=Z(S[U],S[V],S[W]);o1.push(u1),h1=h1.concat(u1)}for(let D=0;D<p;D++){const M=D/p,S=m*Math.cos(M*Math.PI/2),U=g*Math.sin(M*Math.PI/2)+v;for(let I=0,V=z.length;I<V;I++){const W=X(z[I],i1[I],U);S1(W.x,W.y,-S)}for(let I=0,V=Y.length;I<V;I++){const W=Y[I];u1=o1[I];for(let x=0,_=W.length;x<_;x++){const C=X(W[x],u1[x],U);S1(C.x,C.y,-S)}}}const Q=g+v;for(let D=0;D<q;D++){const M=f?X(A[D],h1[D],Q):A[D];b?(L.copy(B.normals[0]).multiplyScalar(M.x),R.copy(B.binormals[0]).multiplyScalar(M.y),t1.copy(y[0]).add(L).add(R),S1(t1.x,t1.y,t1.z)):S1(M.x,M.y,0)}for(let D=1;D<=u;D++)for(let M=0;M<q;M++){const S=f?X(A[M],h1[M],Q):A[M];b?(L.copy(B.normals[D]).multiplyScalar(S.x),R.copy(B.binormals[D]).multiplyScalar(S.y),t1.copy(y[D]).add(L).add(R),S1(t1.x,t1.y,t1.z)):S1(S.x,S.y,h/u*D)}for(let D=p-1;D>=0;D--){const M=D/p,S=m*Math.cos(M*Math.PI/2),U=g*Math.sin(M*Math.PI/2)+v;for(let I=0,V=z.length;I<V;I++){const W=X(z[I],i1[I],U);S1(W.x,W.y,h+S)}for(let I=0,V=Y.length;I<V;I++){const W=Y[I];u1=o1[I];for(let x=0,_=W.length;x<_;x++){const C=X(W[x],u1[x],U);b?S1(C.x,C.y+y[u-1].y,y[u-1].x+S):S1(C.x,C.y,h+S)}}}c1(),M1();function c1(){const D=r.length/3;if(f){let M=0,S=q*M;for(let U=0;U<J;U++){const I=f1[U];P1(I[2]+S,I[1]+S,I[0]+S)}M=u+p*2,S=q*M;for(let U=0;U<J;U++){const I=f1[U];P1(I[0]+S,I[1]+S,I[2]+S)}}else{for(let M=0;M<J;M++){const S=f1[M];P1(S[2],S[1],S[0])}for(let M=0;M<J;M++){const S=f1[M];P1(S[0]+q*u,S[1]+q*u,S[2]+q*u)}}i.addGroup(D,r.length/3-D,0)}function M1(){const D=r.length/3;let M=0;b1(z,M),M+=z.length;for(let S=0,U=Y.length;S<U;S++){const I=Y[S];b1(I,M),M+=I.length}i.addGroup(D,r.length/3-D,1)}function b1(D,M){let S=D.length;for(;--S>=0;){const U=S;let I=S-1;I<0&&(I=D.length-1);for(let V=0,W=u+p*2;V<W;V++){const x=q*V,_=q*(V+1),C=M+U+x,F=M+I+x,H=M+I+_,k=M+U+_;N1(C,F,H,k)}}}function S1(D,M,S){l.push(D),l.push(M),l.push(S)}function P1(D,M,S){w1(D),w1(M),w1(S);const U=r.length/3,I=w.generateTopUV(i,r,U-3,U-2,U-1);I1(I[0]),I1(I[1]),I1(I[2])}function N1(D,M,S,U){w1(D),w1(M),w1(U),w1(M),w1(S),w1(U);const I=r.length/3,V=w.generateSideWallUV(i,r,I-6,I-3,I-2,I-1);I1(V[0]),I1(V[1]),I1(V[3]),I1(V[1]),I1(V[2]),I1(V[3])}function w1(D){r.push(l[D*3+0]),r.push(l[D*3+1]),r.push(l[D*3+2])}function I1(D){s.push(D.x),s.push(D.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,i=this.parameters.options;return vf(t,i,e)}static fromJSON(e,t){const i=[];for(let s=0,o=e.shapes.length;s<o;s++){const a=t[e.shapes[s]];i.push(a)}const r=e.options.extrudePath;return r!==void 0&&(e.options.extrudePath=new Hn[r.type]().fromJSON(r)),new T9(i,e.options)}}const _f={generateTopUV:function(n,e,t,i,r){const s=e[t*3],o=e[t*3+1],a=e[i*3],l=e[i*3+1],c=e[r*3],u=e[r*3+1];return[new p1(s,o),new p1(a,l),new p1(c,u)]},generateSideWallUV:function(n,e,t,i,r,s){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[i*3],u=e[i*3+1],h=e[i*3+2],f=e[r*3],m=e[r*3+1],g=e[r*3+2],v=e[s*3],p=e[s*3+1],d=e[s*3+2];return Math.abs(a-u)<Math.abs(o-c)?[new p1(o,1-l),new p1(c,1-h),new p1(f,1-g),new p1(v,1-d)]:[new p1(a,1-l),new p1(u,1-h),new p1(m,1-g),new p1(p,1-d)]}};function vf(n,e,t){if(t.shapes=[],Array.isArray(n))for(let i=0,r=n.length;i<r;i++){const s=n[i];t.shapes.push(s.uuid)}else t.shapes.push(n.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class A9 extends Se{constructor(e=1,t=32,i=16,r=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:r,phiLength:s,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const l=Math.min(o+a,Math.PI);let c=0;const u=[],h=new N,f=new N,m=[],g=[],v=[],p=[];for(let d=0;d<=i;d++){const w=[],y=d/i;let b=0;d===0&&o===0?b=.5/t:d===i&&l===Math.PI&&(b=-.5/t);for(let B=0;B<=t;B++){const R=B/t;h.x=-e*Math.cos(r+R*s)*Math.sin(o+y*a),h.y=e*Math.cos(o+y*a),h.z=e*Math.sin(r+R*s)*Math.sin(o+y*a),g.push(h.x,h.y,h.z),f.copy(h).normalize(),v.push(f.x,f.y,f.z),p.push(R+b,1-y),w.push(c++)}u.push(w)}for(let d=0;d<i;d++)for(let w=0;w<t;w++){const y=u[d][w+1],b=u[d][w],B=u[d+1][w],R=u[d+1][w+1];(d!==0||o>0)&&m.push(y,b,R),(d!==i-1||l<Math.PI)&&m.push(b,B,R)}this.setIndex(m),this.setAttribute("position",new fe(g,3)),this.setAttribute("normal",new fe(v,3)),this.setAttribute("uv",new fe(p,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new A9(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class P7 extends Qt{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new K1(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new K1(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=$i,this.normalScale=new p1(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}const V5={enabled:!1,files:{},add:function(n,e){this.enabled!==!1&&(this.files[n]=e)},get:function(n){if(this.enabled!==!1)return this.files[n]},remove:function(n){delete this.files[n]},clear:function(){this.files={}}};class xf{constructor(e,t,i){const r=this;let s=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(u){a++,s===!1&&r.onStart!==void 0&&r.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,r.onProgress!==void 0&&r.onProgress(u,o,a),o===a&&(s=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(u){r.onError!==void 0&&r.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return h!==-1&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,f=c.length;h<f;h+=2){const m=c[h],g=c[h+1];if(m.global&&(m.lastIndex=0),m.test(u))return g}return null}}}const yf=new xf;class w9{constructor(e){this.manager=e!==void 0?e:yf,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const i=this;return new Promise(function(r,s){i.load(e,r,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}w9.DEFAULT_MATERIAL_NAME="__DEFAULT";class Mf extends w9{constructor(e){super(e)}load(e,t,i,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=V5.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a=V3("img");function l(){u(),V5.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(h){u(),r&&r(h),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class Dt extends w9{constructor(e){super(e)}load(e,t,i,r){const s=new Ge,o=new Mf(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},i,r),s}}class R9 extends ie{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new K1(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class Sf extends R9{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(ie.DEFAULT_UP),this.updateMatrix(),this.groundColor=new K1(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const fn=new ce,W5=new N,k5=new N;class Ef{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new p1(512,512),this.map=null,this.mapPass=null,this.matrix=new ce,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new v9,this._frameExtents=new p1(1,1),this._viewportCount=1,this._viewports=[new Me(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;W5.setFromMatrixPosition(e.matrixWorld),t.position.copy(W5),k5.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(k5),t.updateMatrixWorld(),fn.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(fn),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(fn)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class bf extends Ef{constructor(){super(new u7(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class dn extends R9{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(ie.DEFAULT_UP),this.updateMatrix(),this.target=new ie,this.shadow=new bf}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Tf extends R9{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Af{constructor(e,t,i=0,r=1/0){this.ray=new h3(e,t),this.near=i,this.far=r,this.camera=null,this.layers=new _9,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,i=[]){return Wn(e,this,i,t),i.sort(X5),i}intersectObjects(e,t=!0,i=[]){for(let r=0,s=e.length;r<s;r++)Wn(e[r],this,i,t);return i.sort(X5),i}}function X5(n,e){return n.distance-e.distance}function Wn(n,e,t,i){if(n.layers.test(e.layers)&&n.raycast(e,t),i===!0){const r=n.children;for(let s=0,o=r.length;s<o;s++)Wn(r[s],e,t,!0)}}class kn{constructor(e=1,t=0,i=0){return this.radius=e,this.phi=t,this.theta=i,this}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(ye(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:f9}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=f9);const wf=()=>new zh,Rf=(n,e)=>{const t=new Je(45,n/e,.1,1e5);return t.position.set(-270,680,-900),t.lookAt(0,0,0),t},Cf=(n,e)=>{const t=new _7({antialias:!0,alpha:!0});return t.shadowMap.enabled=!1,t.shadowMap.type=d9,t.setSize(n,e),t.setPixelRatio(window.devicePixelRatio),t},Pf=n=>{const e=new Tf(13421772,.4);n.add(e);const t=new dn(16777215,.2);t.position.set(1,.1,0).normalize(),n.add(t);const i=new dn(267583487,.2);i.position.set(1,.1,.1).normalize(),n.add(i);const r=new dn(16777215);r.position.set(1,500,-20),r.castShadow=!0,r.shadow.camera.top=18,r.shadow.camera.bottom=-10,r.shadow.camera.left=-52,r.shadow.camera.right=12,n.add(r);const s=new Sf(16777215,4473924,.2);s.position.set(0,1,0),n.add(s)},q5={type:"change"},pn={type:"start"},Y5={type:"end"},N0=new h3,j5=new Wt,Lf=Math.cos(70*Do.DEG2RAD);class Df extends T2{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new N,this.cursor=new N,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:w2.ROTATE,MIDDLE:w2.DOLLY,RIGHT:w2.PAN},this.touches={ONE:R2.ROTATE,TWO:R2.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(P){P.addEventListener("keydown",k),this._domElementKeyEvents=P},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",k),this._domElementKeyEvents=null},this.saveState=function(){i.target0.copy(i.target),i.position0.copy(i.object.position),i.zoom0=i.object.zoom},this.reset=function(){i.target.copy(i.target0),i.object.position.copy(i.position0),i.object.zoom=i.zoom0,i.object.updateProjectionMatrix(),i.dispatchEvent(q5),i.update(),s=r.NONE},this.update=function(){const P=new N,l1=new M2().setFromUnitVectors(e.up,new N(0,1,0)),m1=l1.clone().invert(),d1=new N,E1=new M2,U1=new N,q1=2*Math.PI;return function(v1=null){const O=i.object.position;P.copy(O).sub(i.target),P.applyQuaternion(l1),a.setFromVector3(P),i.autoRotate&&s===r.NONE&&Y(T(v1)),i.enableDamping?(a.theta+=l.theta*i.dampingFactor,a.phi+=l.phi*i.dampingFactor):(a.theta+=l.theta,a.phi+=l.phi);let g1=i.minAzimuthAngle,_1=i.maxAzimuthAngle;isFinite(g1)&&isFinite(_1)&&(g1<-Math.PI?g1+=q1:g1>Math.PI&&(g1-=q1),_1<-Math.PI?_1+=q1:_1>Math.PI&&(_1-=q1),g1<=_1?a.theta=Math.max(g1,Math.min(_1,a.theta)):a.theta=a.theta>(g1+_1)/2?Math.max(g1,a.theta):Math.min(_1,a.theta)),a.phi=Math.max(i.minPolarAngle,Math.min(i.maxPolarAngle,a.phi)),a.makeSafe(),i.enableDamping===!0?i.target.addScaledVector(u,i.dampingFactor):i.target.add(u),i.target.sub(i.cursor),i.target.clampLength(i.minTargetRadius,i.maxTargetRadius),i.target.add(i.cursor),i.zoomToCursor&&R||i.object.isOrthographicCamera?a.radius=i1(a.radius):a.radius=i1(a.radius*c),P.setFromSpherical(a),P.applyQuaternion(m1),O.copy(i.target).add(P),i.object.lookAt(i.target),i.enableDamping===!0?(l.theta*=1-i.dampingFactor,l.phi*=1-i.dampingFactor,u.multiplyScalar(1-i.dampingFactor)):(l.set(0,0,0),u.set(0,0,0));let D1=!1;if(i.zoomToCursor&&R){let R1=null;if(i.object.isPerspectiveCamera){const $1=P.length();R1=i1($1*c);const J1=$1-R1;i.object.position.addScaledVector(b,J1),i.object.updateMatrixWorld()}else if(i.object.isOrthographicCamera){const $1=new N(B.x,B.y,0);$1.unproject(i.object),i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/c)),i.object.updateProjectionMatrix(),D1=!0;const J1=new N(B.x,B.y,0);J1.unproject(i.object),i.object.position.sub(J1).add($1),i.object.updateMatrixWorld(),R1=P.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),i.zoomToCursor=!1;R1!==null&&(this.screenSpacePanning?i.target.set(0,0,-1).transformDirection(i.object.matrix).multiplyScalar(R1).add(i.object.position):(N0.origin.copy(i.object.position),N0.direction.set(0,0,-1).transformDirection(i.object.matrix),Math.abs(i.object.up.dot(N0.direction))<Lf?e.lookAt(i.target):(j5.setFromNormalAndCoplanarPoint(i.object.up,i.target),N0.intersectPlane(j5,i.target))))}else i.object.isOrthographicCamera&&(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/c)),i.object.updateProjectionMatrix(),D1=!0);return c=1,R=!1,D1||d1.distanceToSquared(i.object.position)>o||8*(1-E1.dot(i.object.quaternion))>o||U1.distanceToSquared(i.target)>0?(i.dispatchEvent(q5),d1.copy(i.object.position),E1.copy(i.object.quaternion),U1.copy(i.target),!0):!1}}(),this.dispose=function(){i.domElement.removeEventListener("contextmenu",a1),i.domElement.removeEventListener("pointerdown",W),i.domElement.removeEventListener("pointercancel",_),i.domElement.removeEventListener("wheel",H),i.domElement.removeEventListener("pointermove",x),i.domElement.removeEventListener("pointerup",_),i._domElementKeyEvents!==null&&(i._domElementKeyEvents.removeEventListener("keydown",k),i._domElementKeyEvents=null)};const i=this,r={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let s=r.NONE;const o=1e-6,a=new kn,l=new kn;let c=1;const u=new N,h=new p1,f=new p1,m=new p1,g=new p1,v=new p1,p=new p1,d=new p1,w=new p1,y=new p1,b=new N,B=new p1;let R=!1;const L=[],t1={};function T(P){return P!==null?2*Math.PI/60*i.autoRotateSpeed*P:2*Math.PI/60/60*i.autoRotateSpeed}function A(P){const l1=Math.abs(P)/(100*(window.devicePixelRatio|0));return Math.pow(.95,i.zoomSpeed*l1)}function Y(P){l.theta-=P}function s1(P){l.phi-=P}const f1=function(){const P=new N;return function(m1,d1){P.setFromMatrixColumn(d1,0),P.multiplyScalar(-m1),u.add(P)}}(),z=function(){const P=new N;return function(m1,d1){i.screenSpacePanning===!0?P.setFromMatrixColumn(d1,1):(P.setFromMatrixColumn(d1,0),P.crossVectors(i.object.up,P)),P.multiplyScalar(m1),u.add(P)}}(),X=function(){const P=new N;return function(m1,d1){const E1=i.domElement;if(i.object.isPerspectiveCamera){const U1=i.object.position;P.copy(U1).sub(i.target);let q1=P.length();q1*=Math.tan(i.object.fov/2*Math.PI/180),f1(2*m1*q1/E1.clientHeight,i.object.matrix),z(2*d1*q1/E1.clientHeight,i.object.matrix)}else i.object.isOrthographicCamera?(f1(m1*(i.object.right-i.object.left)/i.object.zoom/E1.clientWidth,i.object.matrix),z(d1*(i.object.top-i.object.bottom)/i.object.zoom/E1.clientHeight,i.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),i.enablePan=!1)}}();function q(P){i.object.isPerspectiveCamera||i.object.isOrthographicCamera?c/=P:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function J(P){i.object.isPerspectiveCamera||i.object.isOrthographicCamera?c*=P:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function Z(P,l1){if(!i.zoomToCursor)return;R=!0;const m1=i.domElement.getBoundingClientRect(),d1=P-m1.left,E1=l1-m1.top,U1=m1.width,q1=m1.height;B.x=d1/U1*2-1,B.y=-(E1/q1)*2+1,b.set(B.x,B.y,1).unproject(i.object).sub(i.object.position).normalize()}function i1(P){return Math.max(i.minDistance,Math.min(i.maxDistance,P))}function o1(P){h.set(P.clientX,P.clientY)}function u1(P){Z(P.clientX,P.clientX),d.set(P.clientX,P.clientY)}function h1(P){g.set(P.clientX,P.clientY)}function Q(P){f.set(P.clientX,P.clientY),m.subVectors(f,h).multiplyScalar(i.rotateSpeed);const l1=i.domElement;Y(2*Math.PI*m.x/l1.clientHeight),s1(2*Math.PI*m.y/l1.clientHeight),h.copy(f),i.update()}function c1(P){w.set(P.clientX,P.clientY),y.subVectors(w,d),y.y>0?q(A(y.y)):y.y<0&&J(A(y.y)),d.copy(w),i.update()}function M1(P){v.set(P.clientX,P.clientY),p.subVectors(v,g).multiplyScalar(i.panSpeed),X(p.x,p.y),g.copy(v),i.update()}function b1(P){Z(P.clientX,P.clientY),P.deltaY<0?J(A(P.deltaY)):P.deltaY>0&&q(A(P.deltaY)),i.update()}function S1(P){let l1=!1;switch(P.code){case i.keys.UP:P.ctrlKey||P.metaKey||P.shiftKey?s1(2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):X(0,i.keyPanSpeed),l1=!0;break;case i.keys.BOTTOM:P.ctrlKey||P.metaKey||P.shiftKey?s1(-2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):X(0,-i.keyPanSpeed),l1=!0;break;case i.keys.LEFT:P.ctrlKey||P.metaKey||P.shiftKey?Y(2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):X(i.keyPanSpeed,0),l1=!0;break;case i.keys.RIGHT:P.ctrlKey||P.metaKey||P.shiftKey?Y(-2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):X(-i.keyPanSpeed,0),l1=!0;break}l1&&(P.preventDefault(),i.update())}function P1(P){if(L.length===1)h.set(P.pageX,P.pageY);else{const l1=L1(P),m1=.5*(P.pageX+l1.x),d1=.5*(P.pageY+l1.y);h.set(m1,d1)}}function N1(P){if(L.length===1)g.set(P.pageX,P.pageY);else{const l1=L1(P),m1=.5*(P.pageX+l1.x),d1=.5*(P.pageY+l1.y);g.set(m1,d1)}}function w1(P){const l1=L1(P),m1=P.pageX-l1.x,d1=P.pageY-l1.y,E1=Math.sqrt(m1*m1+d1*d1);d.set(0,E1)}function I1(P){i.enableZoom&&w1(P),i.enablePan&&N1(P)}function D(P){i.enableZoom&&w1(P),i.enableRotate&&P1(P)}function M(P){if(L.length==1)f.set(P.pageX,P.pageY);else{const m1=L1(P),d1=.5*(P.pageX+m1.x),E1=.5*(P.pageY+m1.y);f.set(d1,E1)}m.subVectors(f,h).multiplyScalar(i.rotateSpeed);const l1=i.domElement;Y(2*Math.PI*m.x/l1.clientHeight),s1(2*Math.PI*m.y/l1.clientHeight),h.copy(f)}function S(P){if(L.length===1)v.set(P.pageX,P.pageY);else{const l1=L1(P),m1=.5*(P.pageX+l1.x),d1=.5*(P.pageY+l1.y);v.set(m1,d1)}p.subVectors(v,g).multiplyScalar(i.panSpeed),X(p.x,p.y),g.copy(v)}function U(P){const l1=L1(P),m1=P.pageX-l1.x,d1=P.pageY-l1.y,E1=Math.sqrt(m1*m1+d1*d1);w.set(0,E1),y.set(0,Math.pow(w.y/d.y,i.zoomSpeed)),q(y.y),d.copy(w);const U1=(P.pageX+l1.x)*.5,q1=(P.pageY+l1.y)*.5;Z(U1,q1)}function I(P){i.enableZoom&&U(P),i.enablePan&&S(P)}function V(P){i.enableZoom&&U(P),i.enableRotate&&M(P)}function W(P){i.enabled!==!1&&(L.length===0&&(i.domElement.setPointerCapture(P.pointerId),i.domElement.addEventListener("pointermove",x),i.domElement.addEventListener("pointerup",_)),x1(P),P.pointerType==="touch"?r1(P):C(P))}function x(P){i.enabled!==!1&&(P.pointerType==="touch"?e1(P):F(P))}function _(P){T1(P),L.length===0&&(i.domElement.releasePointerCapture(P.pointerId),i.domElement.removeEventListener("pointermove",x),i.domElement.removeEventListener("pointerup",_)),i.dispatchEvent(Y5),s=r.NONE}function C(P){let l1;switch(P.button){case 0:l1=i.mouseButtons.LEFT;break;case 1:l1=i.mouseButtons.MIDDLE;break;case 2:l1=i.mouseButtons.RIGHT;break;default:l1=-1}switch(l1){case w2.DOLLY:if(i.enableZoom===!1)return;u1(P),s=r.DOLLY;break;case w2.ROTATE:if(P.ctrlKey||P.metaKey||P.shiftKey){if(i.enablePan===!1)return;h1(P),s=r.PAN}else{if(i.enableRotate===!1)return;o1(P),s=r.ROTATE}break;case w2.PAN:if(P.ctrlKey||P.metaKey||P.shiftKey){if(i.enableRotate===!1)return;o1(P),s=r.ROTATE}else{if(i.enablePan===!1)return;h1(P),s=r.PAN}break;default:s=r.NONE}s!==r.NONE&&i.dispatchEvent(pn)}function F(P){switch(s){case r.ROTATE:if(i.enableRotate===!1)return;Q(P);break;case r.DOLLY:if(i.enableZoom===!1)return;c1(P);break;case r.PAN:if(i.enablePan===!1)return;M1(P);break}}function H(P){i.enabled===!1||i.enableZoom===!1||s!==r.NONE||(P.preventDefault(),i.dispatchEvent(pn),b1(P),i.dispatchEvent(Y5))}function k(P){i.enabled===!1||i.enablePan===!1||S1(P)}function r1(P){switch(n1(P),L.length){case 1:switch(i.touches.ONE){case R2.ROTATE:if(i.enableRotate===!1)return;P1(P),s=r.TOUCH_ROTATE;break;case R2.PAN:if(i.enablePan===!1)return;N1(P),s=r.TOUCH_PAN;break;default:s=r.NONE}break;case 2:switch(i.touches.TWO){case R2.DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;I1(P),s=r.TOUCH_DOLLY_PAN;break;case R2.DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;D(P),s=r.TOUCH_DOLLY_ROTATE;break;default:s=r.NONE}break;default:s=r.NONE}s!==r.NONE&&i.dispatchEvent(pn)}function e1(P){switch(n1(P),s){case r.TOUCH_ROTATE:if(i.enableRotate===!1)return;M(P),i.update();break;case r.TOUCH_PAN:if(i.enablePan===!1)return;S(P),i.update();break;case r.TOUCH_DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;I(P),i.update();break;case r.TOUCH_DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;V(P),i.update();break;default:s=r.NONE}}function a1(P){i.enabled!==!1&&P.preventDefault()}function x1(P){L.push(P.pointerId)}function T1(P){delete t1[P.pointerId];for(let l1=0;l1<L.length;l1++)if(L[l1]==P.pointerId){L.splice(l1,1);return}}function n1(P){let l1=t1[P.pointerId];l1===void 0&&(l1=new p1,t1[P.pointerId]=l1),l1.set(P.pageX,P.pageY)}function L1(P){const l1=P.pointerId===L[0]?L[1]:L[0];return t1[l1]}i.domElement.addEventListener("contextmenu",a1),i.domElement.addEventListener("pointerdown",W),i.domElement.addEventListener("pointercancel",_),i.domElement.addEventListener("wheel",H,{passive:!1}),this.update()}}const If=(n,e)=>{const t=new Df(n,e.domElement);return t.enableDamping=!0,t.dampingFactor=.05,t.enableZoom=!0,t.autoRotate=!1,t.autoRotateSpeed=2,t.minDistance=800,t.maxDistance=3e3,t.enablePan=!0,t.enableRotate=!0,t.update(),t},Uf="/assets/gradient-FWWgcAdR.png",Nf=n=>{const e=new Dt().load(Uf),t=[],i=[],r=[],s=new Se;for(let l=0;l<1e4;l++){let c=new N;c.x=Math.random()*2-1,c.y=Math.random()*2-1,c.z=Math.random()*2-1,t.push(c.x,c.y,c.z);let u=new K1;u.setHSL(Math.random()*.2+.5,.55,Math.random()*.25+.55),i.push(u.r,u.g,u.b),r.push(Math.random()*10)}s.setAttribute("position",new fe(t,3)),s.setAttribute("color",new fe(i,3)),s.setAttribute("size",new fe(r,1).setUsage(_o));const o=new y7({map:e,size:10,transparent:!0,opacity:1,vertexColors:!0,blending:q0,sizeAttenuation:!0}),a=new M9(s,o);return a.name="star",a.scale.set(2400,2400,2400),n.add(a),a},Of="/assets/earth-etNYkgGq.jpg",Ff="/assets/earth_1-9FEuJuzn.jpg";class k1{}Q1(k1,"earthRadius",450),Q1(k1,"camaPositions",[{x:-810,y:2040,z:-2700},{x:-270,y:680,z:-900}]),Q1(k1,"chinaCamaPositions",[{x:-270,y:680,z:-900},{x:0,y:200,z:-10}]),Q1(k1,"default",{showStats:!1,showGui:!1,enterAnimation:!1,star:{autoRotate:!1,show:!1},earth:{autoRotate:!1,sprite:!1,outLine:!1},city:{stroke:!1,flyLine:!1,line:!1,point:!1,light:!1}});const Bf="/assets/earth_aperture-DUWE8qAK.jpg",zf=()=>{const n=new Dt().load(Bf),e=new v7({map:n,transparent:!0,opacity:.5,depthWrite:!1}),t=new Gh(e);return t.scale.set(k1.earthRadius*3,k1.earthRadius*3,1),t},Hf="FeatureCollection",Gf=[{type:"Feature",properties:{adcode:11e4,name:"北京市",center:[116.405285,39.904989],centroid:[116.41989,40.189913],childrenNum:16,level:"province",subFeatureIndex:0,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[117.210024,40.082262],[117.105315,40.074479],[117.105315,40.074479],[117.102851,40.073563],[117.102235,40.073105],[117.102235,40.073105],[117.102851,40.073563],[116.999989,40.030053],[116.927924,40.054788],[116.783794,40.035093],[116.757925,39.968176],[116.786874,39.886963],[116.926076,39.835524],[116.949482,39.778529],[116.902055,39.763813],[116.90575,39.687883],[116.812128,39.616018],[116.717273,39.603572],[116.717273,39.603572],[116.720969,39.599884],[116.720969,39.599884],[116.726512,39.595274],[116.726512,39.595274],[116.703106,39.588819],[116.703106,39.588819],[116.607636,39.619705],[116.524484,39.596657],[116.440716,39.527466],[116.433325,39.44296],[116.332927,39.457744],[116.245464,39.515466],[116.204196,39.588819],[116.10195,39.576368],[116.10195,39.576368],[115.957204,39.561147],[115.910393,39.600345],[115.910393,39.600345],[115.855574,39.554689],[115.855574,39.554689],[115.846951,39.550999],[115.846951,39.550999],[115.821081,39.517312],[115.821081,39.517312],[115.752712,39.512696],[115.752712,39.512696],[115.738545,39.539464],[115.738545,39.539925],[115.738545,39.539464],[115.738545,39.539925],[115.737314,39.544078],[115.737314,39.544078],[115.723763,39.544539],[115.723763,39.544539],[115.721299,39.543617],[115.721299,39.543617],[115.721299,39.55146],[115.721299,39.55146],[115.716988,39.560225],[115.716988,39.560225],[115.699125,39.577751],[115.698509,39.577751],[115.698509,39.577751],[115.699125,39.577751],[115.698509,39.577751],[115.69543,39.579135],[115.69543,39.579135],[115.586408,39.58928],[115.478619,39.650578],[115.478619,39.650578],[115.498945,39.69617],[115.498945,39.69617],[115.443511,39.785426],[115.443511,39.785426],[115.567314,39.816224],[115.514344,39.837821],[115.522967,39.898898],[115.426264,39.95029],[115.454597,40.029595],[115.599343,40.11979],[115.73485,40.129398],[115.773038,40.176044],[115.85311,40.148609],[115.89869,40.234536],[115.968907,40.264219],[115.9184,40.354103],[115.861733,40.364589],[115.861733,40.364589],[115.779197,40.442501],[115.755792,40.540333],[115.907929,40.617133],[116.005247,40.58397],[116.088399,40.62667],[116.22021,40.744181],[116.247311,40.791762],[116.464738,40.771827],[116.334159,40.90446],[116.473977,40.895867],[116.455499,40.98084],[116.519557,40.981292],[116.519557,40.981292],[116.599013,40.974516],[116.615643,41.053072],[116.688324,41.044499],[116.677853,40.970902],[116.730208,40.897676],[116.858323,40.833423],[116.964881,40.70972],[117.110858,40.70836],[117.286401,40.660719],[117.386799,40.684317],[117.49582,40.674334],[117.389879,40.5617],[117.344299,40.582152],[117.213104,40.512136],[117.225423,40.369148],[117.309191,40.279284],[117.309807,40.279284],[117.309191,40.279284],[117.309807,40.279284],[117.389879,40.228141],[117.367089,40.172387],[117.367089,40.172844],[117.367089,40.173301],[117.367089,40.173301],[117.367089,40.172844],[117.367089,40.172387],[117.344299,40.13443],[117.210024,40.082262]]]]}},{type:"Feature",properties:{adcode:12e4,name:"天津市",center:[117.190182,39.125596],centroid:[117.351154,39.28914],childrenNum:16,level:"province",subFeatureIndex:1,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[117.210024,40.082262],[117.344299,40.13443],[117.367089,40.172387],[117.367089,40.172844],[117.367089,40.173301],[117.367089,40.173301],[117.367089,40.172844],[117.367089,40.172387],[117.389879,40.228141],[117.450857,40.252347],[117.571581,40.21809],[117.652269,40.12345],[117.652269,40.12345],[117.651037,40.122535],[117.651037,40.122535],[117.71879,40.082262],[117.71879,40.082262],[117.75821,40.073563],[117.75821,40.073563],[117.782232,39.968634],[117.614697,39.972303],[117.589443,39.997059],[117.513067,39.910373],[117.513067,39.910373],[117.537704,39.835064],[117.537704,39.835064],[117.540784,39.822658],[117.540784,39.822658],[117.57774,39.727009],[117.644262,39.702155],[117.66274,39.636295],[117.619008,39.603111],[117.736037,39.560686],[117.736037,39.560686],[117.74774,39.58928],[117.866,39.596657],[117.933753,39.574062],[117.870311,39.454972],[117.846906,39.328274],[117.972557,39.312536],[117.972557,39.312536],[117.982412,39.298647],[117.982412,39.298647],[118.021833,39.287071],[118.021833,39.287071],[118.024296,39.289386],[118.024296,39.289386],[118.024912,39.292164],[118.024912,39.292164],[118.037231,39.220353],[117.871543,39.122479],[117.837667,39.056999],[117.855529,38.957502],[117.898029,38.948661],[117.847522,38.855535],[117.778536,38.869046],[117.64611,38.828972],[117.646725,38.788875],[117.740964,38.753888],[117.729261,38.680127],[117.639334,38.62686],[117.47919,38.617043],[117.39419,38.573553],[117.252524,38.556711],[117.213104,38.639947],[117.213104,38.639947],[117.176764,38.617978],[117.176764,38.617978],[117.097924,38.587118],[117.042489,38.706279],[116.95133,38.689468],[116.947634,38.689468],[116.947634,38.689468],[116.950714,38.689468],[116.95133,38.689468],[116.950714,38.689468],[116.877417,38.680594],[116.858939,38.741289],[116.766548,38.742222],[116.737599,38.784677],[116.708034,38.931907],[116.783179,39.050959],[116.783179,39.050959],[116.812744,39.050959],[116.812744,39.050959],[116.912526,39.110873],[116.91191,39.111338],[116.91191,39.111338],[116.912526,39.110873],[116.865714,39.155428],[116.865714,39.155428],[116.892816,39.224061],[116.870642,39.357426],[116.796113,39.446656],[116.812128,39.616018],[116.90575,39.687883],[116.916837,39.703996],[116.916837,39.703996],[116.983975,39.63906],[116.983975,39.63906],[117.126873,39.61694],[117.177996,39.64551],[117.165061,39.718725],[117.165061,39.718725],[117.205713,39.763813],[117.156438,39.817603],[117.229735,39.852981],[117.152126,39.878239],[117.150894,39.944785],[117.198322,39.992933],[117.210024,40.082262]]]]}},{type:"Feature",properties:{adcode:13e4,name:"河北省",center:[114.502461,38.045474],centroid:[114.502461,38.045474],childrenNum:11,level:"province",subFeatureIndex:2,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[117.389879,40.228141],[117.309807,40.279284],[117.309191,40.279284],[117.309807,40.279284],[117.309191,40.279284],[117.225423,40.369148],[117.213104,40.512136],[117.344299,40.582152],[117.389879,40.5617],[117.49582,40.674334],[117.386799,40.684317],[117.286401,40.660719],[117.110858,40.70836],[116.964881,40.70972],[116.858323,40.833423],[116.730208,40.897676],[116.677853,40.970902],[116.688324,41.044499],[116.615643,41.053072],[116.599013,40.974516],[116.519557,40.981292],[116.519557,40.981292],[116.455499,40.98084],[116.473977,40.895867],[116.334159,40.90446],[116.464738,40.771827],[116.247311,40.791762],[116.22021,40.744181],[116.088399,40.62667],[116.005247,40.58397],[115.907929,40.617133],[115.755792,40.540333],[115.779197,40.442501],[115.861733,40.364589],[115.861733,40.364589],[115.9184,40.354103],[115.968907,40.264219],[115.89869,40.234536],[115.85311,40.148609],[115.773038,40.176044],[115.73485,40.129398],[115.599343,40.11979],[115.454597,40.029595],[115.426264,39.95029],[115.522967,39.898898],[115.514344,39.837821],[115.567314,39.816224],[115.443511,39.785426],[115.443511,39.785426],[115.498945,39.69617],[115.498945,39.69617],[115.478619,39.650578],[115.478619,39.650578],[115.586408,39.58928],[115.69543,39.579135],[115.69543,39.579135],[115.698509,39.577751],[115.699125,39.577751],[115.698509,39.577751],[115.698509,39.577751],[115.699125,39.577751],[115.716988,39.560225],[115.716988,39.560225],[115.721299,39.55146],[115.721299,39.55146],[115.721299,39.543617],[115.721299,39.543617],[115.723763,39.544539],[115.723763,39.544539],[115.737314,39.544078],[115.737314,39.544078],[115.738545,39.539925],[115.738545,39.539464],[115.738545,39.539925],[115.738545,39.539464],[115.752712,39.512696],[115.752712,39.512696],[115.821081,39.517312],[115.821081,39.517312],[115.846951,39.550999],[115.846951,39.550999],[115.855574,39.554689],[115.855574,39.554689],[115.910393,39.600345],[115.910393,39.600345],[115.957204,39.561147],[116.10195,39.576368],[116.10195,39.576368],[116.204196,39.588819],[116.245464,39.515466],[116.332927,39.457744],[116.433325,39.44296],[116.440716,39.527466],[116.524484,39.596657],[116.607636,39.619705],[116.703106,39.588819],[116.703106,39.588819],[116.726512,39.595274],[116.726512,39.595274],[116.720969,39.599884],[116.720969,39.599884],[116.717273,39.603572],[116.717273,39.603572],[116.812128,39.616018],[116.796113,39.446656],[116.870642,39.357426],[116.892816,39.224061],[116.865714,39.155428],[116.865714,39.155428],[116.912526,39.110873],[116.91191,39.111338],[116.91191,39.111338],[116.912526,39.110873],[116.812744,39.050959],[116.812744,39.050959],[116.783179,39.050959],[116.783179,39.050959],[116.708034,38.931907],[116.737599,38.784677],[116.766548,38.742222],[116.858939,38.741289],[116.877417,38.680594],[116.950714,38.689468],[116.95133,38.689468],[116.950714,38.689468],[116.947634,38.689468],[116.947634,38.689468],[116.95133,38.689468],[117.042489,38.706279],[117.097924,38.587118],[117.176764,38.617978],[117.176764,38.617978],[117.213104,38.639947],[117.213104,38.639947],[117.252524,38.556711],[117.39419,38.573553],[117.47919,38.617043],[117.639334,38.62686],[117.638102,38.545013],[117.781,38.374004],[117.937449,38.387606],[117.895565,38.30173],[117.808718,38.228445],[117.771761,38.136734],[117.70216,38.075529],[117.5839,38.070819],[117.513067,37.94353],[117.438538,37.853823],[117.34122,37.863271],[117.267923,37.838704],[117.093612,37.849571],[117.023395,37.832561],[116.788106,37.843429],[116.724664,37.744139],[116.433941,37.47349],[116.38097,37.522858],[116.379738,37.521909],[116.38097,37.522858],[116.379738,37.521909],[116.337238,37.580255],[116.291659,37.557966],[116.27626,37.466841],[116.240536,37.489633],[116.240536,37.489633],[116.226369,37.428365],[116.2855,37.404604],[116.236224,37.361816],[116.169087,37.384164],[116.051443,37.367998],[115.984921,37.326616],[115.969523,37.239497],[115.909777,37.206622],[115.868509,37.076414],[115.776734,36.992829],[115.79706,36.968931],[115.71206,36.883313],[115.683727,36.808139],[115.479851,36.76022],[115.365902,36.622043],[115.283366,36.486505],[115.308004,36.461967],[115.308004,36.461967],[115.366518,36.308793],[115.466916,36.259115],[115.466916,36.259115],[115.483547,36.149036],[115.312931,36.088137],[115.201446,36.210371],[115.201446,36.210371],[115.064092,36.178985],[114.996955,36.06831],[114.914419,36.051865],[114.912571,36.140339],[114.591666,36.130192],[114.345291,36.255738],[114.169132,36.243675],[114.169132,36.243675],[114.060727,36.276482],[114.055799,36.330005],[113.982502,36.358921],[113.911054,36.314578],[113.881488,36.354102],[113.819894,36.330969],[113.731199,36.363257],[113.708409,36.423461],[113.554425,36.494682],[113.588301,36.562955],[113.476816,36.655171],[113.499606,36.740564],[113.680692,36.789933],[113.696707,36.882356],[113.773083,36.855072],[113.76138,36.956022],[113.791561,36.987572],[113.758301,37.075459],[113.773083,37.1518],[113.832213,37.167536],[113.90243,37.309962],[114.014531,37.424564],[114.036705,37.49438],[114.123553,37.60159],[114.12848,37.698231],[113.993589,37.706752],[114.044712,37.762116],[113.976959,37.816965],[113.951706,37.917573],[113.872249,37.990228],[113.876561,38.055273],[113.810039,38.112729],[113.825438,38.169199],[113.720728,38.174843],[113.711489,38.213873],[113.570439,38.237375],[113.525475,38.382916],[113.583374,38.459793],[113.561816,38.558115],[113.612939,38.646022],[113.70225,38.65163],[113.720728,38.713283],[113.839605,38.758554],[113.855619,38.828972],[113.776163,38.885814],[113.76754,38.959828],[113.898119,39.067684],[114.050872,39.135939],[114.10877,39.052352],[114.345907,39.075116],[114.388406,39.176767],[114.47587,39.216181],[114.416124,39.243063],[114.480797,39.350023],[114.470942,39.408759],[114.568877,39.574062],[114.408117,39.65196],[114.395182,39.867218],[114.225183,39.857114],[114.17406,39.897521],[114.047176,39.916339],[114.021307,39.992017],[113.910438,40.011725],[113.956017,40.031428],[113.989278,40.112469],[114.044712,40.05662],[114.101995,40.099655],[114.073046,40.168729],[114.073046,40.168729],[114.235654,40.198442],[114.255364,40.236363],[114.46971,40.267872],[114.530688,40.344983],[114.446305,40.372795],[114.31203,40.372795],[114.267066,40.474369],[114.283081,40.590785],[114.209168,40.629848],[114.134639,40.737381],[114.044712,40.83116],[114.073661,40.857412],[113.973263,40.983099],[113.819279,41.097726],[113.920293,41.172081],[113.996669,41.192345],[113.927068,41.326829],[113.94493,41.39105],[113.871017,41.41349],[113.930764,41.485693],[114.100147,41.537218],[114.230726,41.513477],[114.203009,41.793334],[114.34837,41.947049],[114.510978,41.973299],[114.466015,42.038656],[114.510978,42.111047],[114.765361,42.118593],[114.828803,42.147434],[114.9021,42.015544],[114.922426,41.824999],[114.866991,41.803147],[114.899636,41.756299],[114.895325,41.636567],[114.862064,41.603915],[115.0992,41.624045],[115.252569,41.579303],[115.376989,41.602126],[115.319091,41.691546],[115.654162,41.829011],[115.811226,41.912328],[115.916552,41.945269],[116.016334,41.777273],[116.09887,41.776381],[116.122892,41.861995],[116.194341,41.861995],[116.233145,41.941263],[116.310137,41.997316],[116.409303,41.994203],[116.386514,41.952389],[116.510933,41.974189],[116.560209,41.928356],[116.727744,41.951054],[116.879881,42.018211],[116.890352,42.092846],[116.789338,42.200202],[116.907598,42.191337],[116.886656,42.366641],[116.910062,42.394928],[116.910062,42.394928],[116.927308,42.40509],[116.927308,42.40509],[116.929156,42.407741],[116.929156,42.408182],[116.929156,42.407741],[116.929156,42.408182],[116.936547,42.410833],[116.936547,42.410833],[116.944555,42.415251],[116.944555,42.415251],[116.976583,42.427618],[116.976583,42.427618],[116.984591,42.427176],[116.984591,42.427176],[116.993214,42.425851],[116.993214,42.425851],[116.995678,42.426734],[116.995678,42.426734],[117.001837,42.432476],[117.001837,42.432476],[117.004301,42.432476],[117.004301,42.432476],[117.005533,42.4338],[117.005533,42.4338],[117.133648,42.470443],[117.133648,42.470443],[117.147815,42.470443],[117.147815,42.470443],[117.264227,42.476621],[117.264227,42.476621],[117.412669,42.472649],[117.387415,42.517648],[117.387415,42.517648],[117.43669,42.584205],[117.516146,42.599622],[117.516146,42.599622],[117.687377,42.582884],[117.779768,42.618558],[117.874007,42.510151],[118.019369,42.39537],[118.060021,42.298083],[117.977485,42.229892],[118.109296,42.165176],[118.097593,42.105277],[118.155491,42.081301],[118.119767,42.034656],[118.194296,42.031545],[118.212774,42.081301],[118.297157,42.048876],[118.237411,42.023101],[118.313788,41.987977],[118.268824,41.930136],[118.340273,41.872688],[118.29223,41.772811],[118.165962,41.813405],[118.130854,41.74246],[118.214006,41.641933],[118.230636,41.581989],[118.307012,41.569008],[118.271904,41.471349],[118.348896,41.428296],[118.35136,41.337163],[118.519511,41.353783],[118.677192,41.350639],[118.741866,41.324133],[118.843496,41.374439],[118.890923,41.300764],[118.96422,41.309303],[119.197661,41.282781],[119.239545,41.314696],[119.2494,41.279634],[119.126212,41.138744],[119.037516,41.067509],[118.96422,41.079236],[118.951901,41.01832],[119.013495,41.007485],[118.977154,40.959155],[118.977154,40.959155],[118.90201,40.960963],[118.849039,40.800821],[118.911249,40.776811],[119.054147,40.664804],[119.184726,40.680233],[119.162552,40.599872],[119.30237,40.530329],[119.571536,40.540333],[119.598637,40.465266],[119.586934,40.37553],[119.642369,40.291151],[119.625123,40.224029],[119.745847,40.208038],[119.736608,40.10469],[119.779723,40.049293],[119.779723,40.049293],[119.780339,40.047002],[119.780339,40.047002],[119.817296,40.049751],[119.817296,40.049751],[119.848093,40.020432],[119.848093,40.020432],[119.845629,40.000726],[119.845629,40.000726],[119.854252,39.988349],[119.791426,39.952124],[119.540739,39.88834],[119.536427,39.808871],[119.466826,39.810709],[119.357805,39.721946],[119.269726,39.498385],[119.314689,39.412457],[119.190885,39.368528],[119.096031,39.242136],[118.948821,39.138259],[118.955597,39.176303],[118.76096,39.133618],[118.637156,39.157284],[118.533062,39.090907],[118.604511,38.971458],[118.491178,38.909097],[118.377845,38.971923],[118.366143,39.016101],[118.225092,39.034694],[118.120999,39.186043],[118.037231,39.220353],[118.024912,39.292164],[118.024912,39.292164],[118.024296,39.289386],[118.024296,39.289386],[118.021833,39.287071],[118.021833,39.287071],[117.982412,39.298647],[117.982412,39.298647],[117.972557,39.312536],[117.972557,39.312536],[117.846906,39.328274],[117.870311,39.454972],[117.933753,39.574062],[117.866,39.596657],[117.74774,39.58928],[117.736037,39.560686],[117.736037,39.560686],[117.619008,39.603111],[117.66274,39.636295],[117.644262,39.702155],[117.57774,39.727009],[117.540784,39.822658],[117.540784,39.822658],[117.537704,39.835064],[117.537704,39.835064],[117.513067,39.910373],[117.513067,39.910373],[117.589443,39.997059],[117.614697,39.972303],[117.782232,39.968634],[117.75821,40.073563],[117.75821,40.073563],[117.71879,40.082262],[117.71879,40.082262],[117.651037,40.122535],[117.651037,40.122535],[117.652269,40.12345],[117.652269,40.12345],[117.571581,40.21809],[117.450857,40.252347],[117.389879,40.228141]]],[[[116.90575,39.687883],[116.902055,39.763813],[116.949482,39.778529],[116.926076,39.835524],[116.786874,39.886963],[116.757925,39.968176],[116.783794,40.035093],[116.927924,40.054788],[116.999989,40.030053],[117.102851,40.073563],[117.102235,40.073105],[117.102235,40.073105],[117.102851,40.073563],[117.105315,40.074479],[117.105315,40.074479],[117.210024,40.082262],[117.198322,39.992933],[117.150894,39.944785],[117.152126,39.878239],[117.229735,39.852981],[117.156438,39.817603],[117.205713,39.763813],[117.165061,39.718725],[117.165061,39.718725],[117.177996,39.64551],[117.126873,39.61694],[116.983975,39.63906],[116.983975,39.63906],[116.916837,39.703996],[116.916837,39.703996],[116.90575,39.687883]]]]}},{type:"Feature",properties:{adcode:14e4,name:"山西省",center:[112.549248,37.857014],centroid:[112.305144,37.619053],childrenNum:11,level:"province",subFeatureIndex:3,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[113.731199,36.363257],[113.716417,36.262492],[113.651743,36.172224],[113.694859,36.026707],[113.637576,35.98847],[113.656671,35.836792],[113.604316,35.797008],[113.578446,35.63378],[113.485439,35.520879],[113.31236,35.481424],[113.298194,35.427325],[113.189789,35.449261],[113.126347,35.332197],[112.997,35.362455],[112.992072,35.296068],[112.911384,35.24673],[112.818377,35.258457],[112.766022,35.203718],[112.628052,35.263342],[112.637291,35.225716],[112.513487,35.218384],[112.058924,35.279951],[112.078634,35.219362],[112.062004,35.055937],[111.900012,35.079933],[111.66965,34.988319],[111.570484,34.843094],[111.346282,34.831798],[111.232949,34.789551],[111.148566,34.80773],[111.118385,34.756622],[110.966248,34.70499],[110.929907,34.731548],[110.883712,34.642498],[110.749437,34.652342],[110.710017,34.605078],[110.533242,34.583406],[110.474728,34.617389],[110.379257,34.600646],[110.310272,34.608033],[110.241287,34.682361],[110.232664,34.803308],[110.257301,34.93487],[110.325671,35.014785],[110.39404,35.271647],[110.45009,35.327803],[110.477808,35.413672],[110.525851,35.44195],[110.609619,35.632321],[110.57759,35.701346],[110.549257,35.877527],[110.511684,35.879951],[110.447011,36.164495],[110.474112,36.248018],[110.45933,36.330969],[110.503677,36.487948],[110.496902,36.582175],[110.394656,36.676768],[110.447011,36.737687],[110.416214,36.790892],[110.425453,36.960325],[110.382953,37.021975],[110.444547,37.007164],[110.53509,37.137969],[110.690307,37.287115],[110.695234,37.34945],[110.630561,37.373228],[110.644111,37.435017],[110.745125,37.450693],[110.795017,37.566029],[110.796248,37.66319],[110.706321,37.705332],[110.758676,37.744139],[110.663821,37.803256],[110.59422,37.921821],[110.522771,37.954853],[110.501213,38.031713],[110.509221,38.192245],[110.565887,38.215283],[110.57759,38.297035],[110.661358,38.308773],[110.746973,38.366029],[110.77777,38.44105],[110.874473,38.453702],[110.920052,38.581973],[110.880016,38.618446],[111.009363,38.847614],[110.980414,38.970063],[111.138711,39.064897],[111.163348,39.152644],[111.247732,39.302351],[111.125776,39.366678],[111.171971,39.42355],[111.337043,39.420777],[111.418963,39.500232],[111.462079,39.626157],[111.502115,39.663015],[111.646245,39.644128],[111.783599,39.588819],[111.842729,39.620166],[111.93204,39.61233],[111.970229,39.79646],[112.28559,40.197985],[112.310227,40.256457],[112.456205,40.300278],[112.6299,40.235906],[112.72845,40.168272],[112.844863,40.203926],[112.892906,40.326284],[113.251382,40.413352],[113.316056,40.319898],[113.559968,40.348631],[113.794641,40.518049],[113.855619,40.457071],[113.948626,40.514865],[114.061959,40.528964],[114.041633,40.608503],[114.074277,40.723325],[114.134639,40.737381],[114.209168,40.629848],[114.283081,40.590785],[114.267066,40.474369],[114.31203,40.372795],[114.446305,40.372795],[114.530688,40.344983],[114.46971,40.267872],[114.255364,40.236363],[114.235654,40.198442],[114.073046,40.168729],[114.073046,40.168729],[114.101995,40.099655],[114.044712,40.05662],[113.989278,40.112469],[113.956017,40.031428],[113.910438,40.011725],[114.021307,39.992017],[114.047176,39.916339],[114.17406,39.897521],[114.225183,39.857114],[114.395182,39.867218],[114.408117,39.65196],[114.568877,39.574062],[114.470942,39.408759],[114.480797,39.350023],[114.416124,39.243063],[114.47587,39.216181],[114.388406,39.176767],[114.345907,39.075116],[114.10877,39.052352],[114.050872,39.135939],[113.898119,39.067684],[113.76754,38.959828],[113.776163,38.885814],[113.855619,38.828972],[113.839605,38.758554],[113.720728,38.713283],[113.70225,38.65163],[113.612939,38.646022],[113.561816,38.558115],[113.583374,38.459793],[113.525475,38.382916],[113.570439,38.237375],[113.711489,38.213873],[113.720728,38.174843],[113.825438,38.169199],[113.810039,38.112729],[113.876561,38.055273],[113.872249,37.990228],[113.951706,37.917573],[113.976959,37.816965],[114.044712,37.762116],[113.993589,37.706752],[114.12848,37.698231],[114.123553,37.60159],[114.036705,37.49438],[114.014531,37.424564],[113.90243,37.309962],[113.832213,37.167536],[113.773083,37.1518],[113.758301,37.075459],[113.791561,36.987572],[113.76138,36.956022],[113.773083,36.855072],[113.696707,36.882356],[113.680692,36.789933],[113.499606,36.740564],[113.476816,36.655171],[113.588301,36.562955],[113.554425,36.494682],[113.708409,36.423461],[113.731199,36.363257]]]]}},{type:"Feature",properties:{adcode:15e4,name:"内蒙古自治区",center:[111.670801,40.818311],centroid:[114.059024,44.315561],childrenNum:12,level:"province",subFeatureIndex:4,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[123.703873,43.370824],[123.664453,43.264606],[123.666916,43.179585],[123.572678,43.0035],[123.515395,43.027561],[123.515395,43.027561],[123.474743,43.04243],[123.259165,42.992997],[123.18402,42.926002],[123.169853,42.859811],[123.227752,42.831735],[123.058368,42.768957],[122.887137,42.770275],[122.831087,42.722381],[122.786123,42.756218],[122.786123,42.756218],[122.732536,42.786524],[122.624747,42.773349],[122.563769,42.826031],[122.436886,42.843142],[122.35127,42.830419],[122.374676,42.774667],[122.457212,42.774227],[122.395002,42.683687],[122.338951,42.670051],[122.203445,42.731171],[122.20406,42.683687],[122.071634,42.711391],[121.940438,42.688525],[121.904714,42.569666],[121.66573,42.437333],[121.604752,42.494271],[121.388557,42.475297],[121.304789,42.435567],[121.304789,42.435567],[121.285079,42.387857],[121.068884,42.252483],[120.933378,42.279493],[120.79048,42.218372],[120.745516,42.223689],[120.624792,42.154532],[120.58414,42.167394],[120.466496,42.105277],[120.456641,42.016433],[120.373489,41.994648],[120.188707,41.848179],[120.096316,41.696907],[120.035954,41.708075],[120.051968,41.775935],[119.989759,41.898969],[119.837622,42.135455],[119.846861,42.21527],[119.744615,42.211725],[119.541971,42.292329],[119.572152,42.359568],[119.502551,42.387857],[119.415703,42.309588],[119.284508,42.265325],[119.237697,42.201088],[119.315921,42.119037],[119.384906,42.089738],[119.324544,41.969296],[119.334399,41.869569],[119.294363,41.775935],[119.307914,41.657581],[119.415703,41.590044],[119.361501,41.56498],[119.405848,41.508548],[119.376283,41.422015],[119.30545,41.402271],[119.326392,41.329525],[119.239545,41.314696],[119.197661,41.282781],[118.96422,41.309303],[118.890923,41.300764],[118.843496,41.374439],[118.741866,41.324133],[118.677192,41.350639],[118.519511,41.353783],[118.35136,41.337163],[118.348896,41.428296],[118.271904,41.471349],[118.307012,41.569008],[118.230636,41.581989],[118.214006,41.641933],[118.130854,41.74246],[118.165962,41.813405],[118.29223,41.772811],[118.340273,41.872688],[118.268824,41.930136],[118.313788,41.987977],[118.237411,42.023101],[118.297157,42.048876],[118.212774,42.081301],[118.194296,42.031545],[118.119767,42.034656],[118.155491,42.081301],[118.097593,42.105277],[118.109296,42.165176],[117.977485,42.229892],[118.060021,42.298083],[118.019369,42.39537],[117.874007,42.510151],[117.779768,42.618558],[117.687377,42.582884],[117.516146,42.599622],[117.516146,42.599622],[117.43669,42.584205],[117.387415,42.517648],[117.387415,42.517648],[117.412669,42.472649],[117.264227,42.476621],[117.264227,42.476621],[117.147815,42.470443],[117.147815,42.470443],[117.133648,42.470443],[117.133648,42.470443],[117.005533,42.4338],[117.005533,42.4338],[117.004301,42.432476],[117.004301,42.432476],[117.001837,42.432476],[117.001837,42.432476],[116.995678,42.426734],[116.995678,42.426734],[116.993214,42.425851],[116.993214,42.425851],[116.984591,42.427176],[116.984591,42.427176],[116.976583,42.427618],[116.976583,42.427618],[116.944555,42.415251],[116.944555,42.415251],[116.936547,42.410833],[116.936547,42.410833],[116.929156,42.408182],[116.929156,42.407741],[116.929156,42.408182],[116.929156,42.407741],[116.927308,42.40509],[116.927308,42.40509],[116.910062,42.394928],[116.910062,42.394928],[116.886656,42.366641],[116.907598,42.191337],[116.789338,42.200202],[116.890352,42.092846],[116.879881,42.018211],[116.727744,41.951054],[116.560209,41.928356],[116.510933,41.974189],[116.386514,41.952389],[116.409303,41.994203],[116.310137,41.997316],[116.233145,41.941263],[116.194341,41.861995],[116.122892,41.861995],[116.09887,41.776381],[116.016334,41.777273],[115.916552,41.945269],[115.811226,41.912328],[115.654162,41.829011],[115.319091,41.691546],[115.376989,41.602126],[115.252569,41.579303],[115.0992,41.624045],[114.862064,41.603915],[114.895325,41.636567],[114.899636,41.756299],[114.866991,41.803147],[114.922426,41.824999],[114.9021,42.015544],[114.828803,42.147434],[114.765361,42.118593],[114.510978,42.111047],[114.466015,42.038656],[114.510978,41.973299],[114.34837,41.947049],[114.203009,41.793334],[114.230726,41.513477],[114.100147,41.537218],[113.930764,41.485693],[113.871017,41.41349],[113.94493,41.39105],[113.927068,41.326829],[113.996669,41.192345],[113.920293,41.172081],[113.819279,41.097726],[113.973263,40.983099],[114.073661,40.857412],[114.044712,40.83116],[114.134639,40.737381],[114.074277,40.723325],[114.041633,40.608503],[114.061959,40.528964],[113.948626,40.514865],[113.855619,40.457071],[113.794641,40.518049],[113.559968,40.348631],[113.316056,40.319898],[113.251382,40.413352],[112.892906,40.326284],[112.844863,40.203926],[112.72845,40.168272],[112.6299,40.235906],[112.456205,40.300278],[112.310227,40.256457],[112.28559,40.197985],[111.970229,39.79646],[111.93204,39.61233],[111.842729,39.620166],[111.783599,39.588819],[111.646245,39.644128],[111.502115,39.663015],[111.462079,39.626157],[111.418963,39.500232],[111.337043,39.420777],[111.171971,39.42355],[111.125776,39.366678],[111.064182,39.400899],[111.148566,39.531619],[111.134399,39.586513],[110.892335,39.509927],[110.740198,39.351874],[110.702626,39.27364],[110.604075,39.277345],[110.528315,39.380091],[110.434692,39.381016],[110.39096,39.31161],[110.243751,39.42355],[110.146432,39.455434],[110.217881,39.28105],[109.961035,39.191608],[109.665384,38.981691],[109.683862,38.935631],[109.624116,38.854603],[109.549587,38.805662],[109.511399,38.833633],[109.404226,38.720752],[109.338936,38.70161],[109.367269,38.627328],[109.276726,38.623121],[109.178792,38.520675],[109.051908,38.432146],[108.938575,38.207291],[108.963829,38.155085],[109.069155,38.091071],[109.017416,37.969949],[108.938575,37.920877],[108.871438,38.027471],[108.797525,38.047735],[108.82709,37.989285],[108.798141,37.93362],[108.799989,37.783871],[108.777815,37.683554],[108.611512,37.65419],[108.532671,37.690656],[108.440896,37.654663],[108.304158,37.638556],[108.219158,37.661295],[108.134159,37.621971],[108.025137,37.649926],[107.982022,37.787181],[107.65003,37.864688],[107.49235,37.944945],[107.419669,37.940699],[107.438147,37.992586],[107.329742,38.087774],[107.19054,38.154144],[107.014997,38.120261],[106.768621,38.174843],[106.546883,38.269794],[106.482825,38.319571],[106.601702,38.392295],[106.647897,38.470569],[106.66268,38.601614],[106.709491,38.718885],[106.954019,38.941215],[106.96757,39.054676],[106.859164,39.107623],[106.795723,39.214327],[106.806809,39.318554],[106.751375,39.381478],[106.683622,39.357426],[106.602318,39.375466],[106.506231,39.269934],[106.402753,39.291701],[106.284493,39.270397],[106.283877,39.14522],[106.145907,39.153108],[106.096631,39.08487],[106.060907,38.968667],[105.97098,38.909097],[106.003625,38.874636],[105.897683,38.788875],[105.90569,38.731488],[105.852719,38.641349],[105.874277,38.593197],[105.821307,38.366967],[105.86627,38.296565],[105.775111,38.186601],[105.780655,38.084949],[105.840401,38.003902],[105.799749,37.940227],[105.80406,37.861854],[105.760944,37.799947],[105.622974,37.778669],[105.598952,37.699178],[105.315004,37.702018],[105.111128,37.633818],[105.024281,37.579781],[104.866601,37.566503],[104.801311,37.538516],[104.419429,37.511943],[104.407726,37.464467],[104.287002,37.42789],[104.183524,37.406981],[103.948235,37.564606],[103.676606,37.783871],[103.401897,37.861854],[103.362477,38.037368],[103.369868,38.089658],[103.53494,38.156497],[103.507838,38.281068],[103.416063,38.404956],[103.85954,38.64462],[104.044322,38.895128],[104.168125,38.940285],[104.207546,39.083941],[104.177364,39.15218],[104.047401,39.297721],[104.091133,39.418466],[103.964865,39.455434],[103.839214,39.460516],[103.595302,39.386565],[103.344615,39.331514],[103.007696,39.09973],[102.601792,39.172129],[102.45335,39.25511],[102.280887,39.190217],[101.830636,39.093229],[101.926106,39.000758],[102.075164,38.891403],[101.941505,38.808926],[101.777049,38.660507],[101.679115,38.690869],[101.601506,38.6549],[101.562702,38.712816],[101.307087,38.802865],[101.334189,38.848545],[101.24303,38.86066],[101.198682,38.943077],[101.228863,39.02075],[101.117378,38.97518],[100.969553,38.9468],[100.961545,39.005873],[100.835278,39.025863],[100.864227,39.106695],[100.842669,39.199955],[100.842053,39.405523],[100.619699,39.38749],[100.498975,39.400437],[100.500823,39.4813],[100.326512,39.509003],[100.314193,39.606799],[100.250135,39.68512],[100.128179,39.702155],[100.040716,39.756913],[99.904593,39.785886],[99.822058,39.85987],[99.672384,39.887881],[99.488218,39.875943],[99.927383,40.063947],[100.002528,40.197528],[100.169447,40.277458],[100.169447,40.541242],[100.242744,40.618495],[100.237201,40.716977],[100.107853,40.875511],[100.057346,40.908077],[99.673,40.932943],[99.565827,40.846551],[99.174705,40.858317],[99.172858,40.747354],[99.102025,40.676603],[99.041662,40.693844],[98.984996,40.782701],[98.790975,40.705185],[98.801446,40.609411],[98.689345,40.691576],[98.668403,40.772734],[98.569853,40.746901],[98.627751,40.677965],[98.344419,40.568518],[98.333332,40.918929],[98.25018,40.939271],[97.971776,41.097726],[97.629314,41.440407],[97.613915,41.477176],[97.84674,41.656687],[97.307177,42.565259],[97.172903,42.795305],[98.195362,42.653331],[98.546447,42.638368],[99.503001,42.568344],[99.969267,42.648051],[100.272309,42.636167],[100.32528,42.689845],[100.826655,42.67533],[101.23995,42.59698],[101.581796,42.525145],[101.803534,42.503534],[102.070236,42.232107],[102.449039,42.143885],[102.540814,42.162072],[102.712045,42.152757],[103.021862,42.02799],[103.418527,41.882489],[103.868779,41.802701],[104.080046,41.804931],[104.530298,41.874916],[104.524138,41.662051],[104.68613,41.64551],[104.923267,41.654005],[105.009498,41.583331],[105.230621,41.750942],[105.291599,41.750049],[105.74185,41.949274],[106.01348,42.03199],[106.619564,42.243625],[106.785867,42.291444],[107.051337,42.319322],[107.269996,42.363547],[107.303872,42.4126],[107.46648,42.458967],[107.57427,42.413042],[107.939522,42.403764],[108.022058,42.433359],[108.238252,42.460291],[108.298614,42.438216],[108.532671,42.443073],[108.845569,42.395811],[109.026039,42.458525],[109.291509,42.435567],[109.544044,42.472208],[109.683862,42.559089],[109.906216,42.635727],[110.108244,42.642769],[110.139657,42.67489],[110.437156,42.781254],[110.469801,42.839194],[110.631177,42.936078],[110.736502,43.089639],[110.769763,43.099251],[111.02045,43.329926],[111.183674,43.396045],[111.354289,43.436029],[111.456535,43.49422],[111.564325,43.490314],[111.79407,43.67192],[111.951135,43.693122],[111.959758,43.8232],[111.870447,43.940071],[111.773128,44.010686],[111.662875,44.061012],[111.559397,44.171408],[111.507042,44.294019],[111.415883,44.357368],[111.478709,44.488982],[111.569868,44.576418],[111.560629,44.647124],[111.624687,44.778509],[111.764505,44.969314],[111.889541,45.045459],[112.002874,45.090675],[112.113743,45.072931],[112.438959,45.071663],[112.540589,45.001054],[112.599719,44.93078],[112.850406,44.840484],[112.937869,44.84006],[113.11526,44.799741],[113.503918,44.77766],[113.631417,44.745372],[113.907358,44.915105],[114.065038,44.931204],[114.19069,45.036581],[114.347139,45.119392],[114.519602,45.283812],[114.551014,45.387699],[114.745035,45.438521],[114.974165,45.377193],[115.153403,45.395682],[115.36467,45.392321],[115.699741,45.459509],[115.936878,45.632987],[116.035428,45.68526],[116.17463,45.688604],[116.286731,45.775056],[116.288579,45.838869],[116.243,45.875956],[116.271949,45.966692],[116.414231,46.13404],[116.439484,46.137771],[116.585462,46.292199],[116.745606,46.327743],[116.826294,46.380602],[117.097308,46.35707],[117.372017,46.360373],[117.392343,46.463093],[117.447777,46.528172],[117.42006,46.582071],[117.49582,46.600574],[117.622704,46.596052],[117.704008,46.516645],[117.870927,46.549985],[117.914659,46.607973],[118.04647,46.631398],[118.124078,46.678216],[118.192448,46.682731],[118.316252,46.739347],[118.446831,46.704482],[118.586033,46.692992],[118.639004,46.721302],[118.788061,46.687246],[118.845343,46.771731],[118.914329,46.775009],[118.912481,46.733196],[119.011647,46.745498],[119.123132,46.642901],[119.26295,46.649062],[119.374435,46.60304],[119.431718,46.638793],[119.656535,46.625645],[119.677477,46.584539],[119.783419,46.626056],[119.8136,46.668363],[119.911534,46.669595],[119.93494,46.712688],[119.928781,46.903933],[119.859795,46.917013],[119.795122,47.01297],[119.806825,47.054973],[119.716282,47.195829],[119.56784,47.24825],[119.559833,47.303053],[119.487152,47.329419],[119.353493,47.43192],[119.365812,47.477232],[119.152081,47.540685],[119.134219,47.664539],[118.773278,47.771213],[118.568171,47.992315],[118.424041,48.014734],[118.299621,48.005127],[118.231252,48.043943],[117.96147,48.011132],[117.813645,48.016335],[117.493357,47.758343],[117.384335,47.641162],[117.094844,47.823865],[116.879265,47.893718],[116.669846,47.890509],[116.453035,47.837522],[116.26579,47.876866],[116.111189,47.811812],[115.939342,47.683071],[115.580249,47.921793],[115.529126,48.155029],[115.822929,48.2595],[115.799523,48.514993],[115.83032,48.560156],[116.077928,48.822412],[116.048363,48.873598],[116.717889,49.847388],[116.736367,49.847388],[117.068974,49.695524],[117.278394,49.636272],[117.485349,49.633172],[117.809333,49.521049],[117.867848,49.592853],[117.980565,49.621158],[118.084658,49.618057],[118.122231,49.669586],[118.205998,49.684686],[118.225708,49.734211],[118.388316,49.786004],[118.395092,49.819601],[118.49549,49.843144],[118.485635,49.86706],[118.574946,49.931423],[118.741866,49.946441],[118.929111,49.989545],[119.092335,49.986082],[119.163168,50.027613],[119.190269,50.087538],[119.243856,50.078324],[119.360269,50.196441],[119.319001,50.220948],[119.358421,50.358949],[119.259871,50.345205],[119.125596,50.389095],[119.250631,50.448568],[119.28266,50.604899],[119.361501,50.632611],[119.383674,50.682301],[119.450196,50.695569],[119.506862,50.764118],[119.491464,50.879026],[119.633746,51.010218],[119.726137,51.050105],[119.788346,51.16656],[119.760629,51.21231],[119.944795,51.366848],[120.002693,51.459396],[119.985447,51.505227],[120.051968,51.553245],[120.035338,51.586343],[120.087077,51.678076],[120.172693,51.679931],[120.363634,51.789982],[120.398742,51.832153],[120.480046,51.855072],[120.481278,51.885735],[120.656821,51.92634],[120.719031,52.014438],[120.68577,52.036896],[120.747364,52.076996],[120.786784,52.157824],[120.7449,52.206984],[120.755371,52.258287],[120.627256,52.324161],[120.62356,52.361081],[120.688234,52.427531],[120.689466,52.516098],[120.727654,52.529568],[120.467728,52.644076],[120.40367,52.617929],[120.287873,52.623378],[120.196714,52.579043],[120.049505,52.598672],[120.035338,52.646255],[120.071063,52.706113],[120.038418,52.780006],[120.222584,52.842934],[120.350699,52.906131],[120.455409,53.011376],[120.549647,53.076125],[120.643886,53.106667],[120.736277,53.204615],[120.840371,53.24724],[120.882871,53.294472],[121.129246,53.277303],[121.285695,53.291253],[121.347289,53.327003],[121.499426,53.337008],[121.612143,53.260484],[121.679896,53.240437],[121.665114,53.170556],[121.754425,53.146519],[121.817867,53.061744],[121.785838,53.018575],[121.715621,52.998054],[121.66265,52.912626],[121.610295,52.892416],[121.591201,52.824499],[121.476636,52.772043],[121.373158,52.683268],[121.182217,52.599399],[121.325731,52.572498],[121.416274,52.499346],[121.519136,52.456709],[121.63986,52.444311],[121.714389,52.317944],[121.841272,52.282818],[121.94783,52.298555],[122.091344,52.427167],[122.168952,52.513549],[122.207756,52.469103],[122.310618,52.475299],[122.342031,52.41403],[122.484313,52.341711],[122.478153,52.29636],[122.585943,52.266344],[122.76087,52.26671],[122.769493,52.179843],[122.629059,52.136529],[122.683877,51.974649],[122.726377,51.978704],[122.706051,51.890166],[122.771957,51.779619],[122.749167,51.746661],[122.85634,51.606786],[122.854492,51.477659],[122.903768,51.415384],[122.965977,51.387015],[122.978296,51.331346],[123.058984,51.321999],[123.294273,51.25427],[123.465504,51.287212],[123.736517,50.974064],[123.825829,50.813669],[124.076516,50.564249],[123.983509,50.510249],[124.005067,50.434469],[123.920067,50.37307],[123.800575,50.455806],[123.777785,50.344441],[123.870792,50.270307],[123.878799,50.208696],[123.953944,50.186865],[124.007531,50.219417],[124.061733,50.199122],[124.103001,50.238555],[124.189233,50.216737],[124.278544,50.231284],[124.32474,50.178436],[124.368471,50.258068],[124.36416,50.360857],[124.43992,50.388713],[124.499666,50.397868],[124.504594,50.342532],[124.578507,50.294777],[124.619774,50.229753],[124.575427,50.179585],[124.508289,50.162723],[124.604992,50.070644],[124.680752,50.031841],[124.650571,49.99493],[124.66597,49.868217],[124.730644,49.817671],[124.74173,49.761274],[124.824266,49.849703],[124.972708,49.834654],[124.935135,49.866675],[124.977635,49.900601],[125.095896,49.795661],[125.177815,49.829637],[125.222779,49.799137],[125.219699,49.669199],[125.132236,49.671909],[125.234482,49.592077],[125.228323,49.486857],[125.264047,49.461585],[125.261583,49.318656],[125.219699,49.188999],[125.117453,49.126],[124.906802,49.183915],[124.807636,49.108769],[124.808252,49.020563],[124.709086,48.920406],[124.697383,48.841711],[124.653651,48.777089],[124.579122,48.596574],[124.520608,48.556196],[124.555717,48.467805],[124.507674,48.445584],[124.51876,48.378068],[124.579738,48.304095],[124.578507,48.251931],[124.463942,48.097518],[124.467637,48.178972],[124.418978,48.181765],[124.404812,48.264679],[124.317964,48.347856],[124.314269,48.503894],[124.25945,48.536391],[124.25945,48.536391],[124.07898,48.436058],[123.873256,48.281006],[123.746373,48.19772],[123.537569,48.021938],[123.300432,47.953861],[123.228983,47.840735],[123.166158,47.783677],[122.855108,47.677432],[122.763333,47.613338],[122.59395,47.547551],[122.543443,47.495427],[122.507103,47.401555],[122.418407,47.350503],[122.556378,47.17265],[122.679566,47.094092],[122.845869,47.046819],[122.778116,47.00277],[122.796594,46.938261],[122.895144,46.960317],[122.906847,46.807372],[123.026339,46.718841],[123.163694,46.740167],[123.221592,46.850355],[123.309056,46.86222],[123.374345,46.837668],[123.404526,46.935401],[123.52833,46.944797],[123.483366,46.845854],[123.562823,46.825797],[123.576989,46.891259],[123.625648,46.84749],[123.631808,46.728685],[123.603475,46.689299],[123.366338,46.677805],[123.276411,46.660972],[123.228368,46.58824],[123.18094,46.614138],[123.04605,46.617426],[123.002318,46.574257],[123.011557,46.43506],[123.178476,46.247944],[123.102716,46.172172],[123.112571,46.129894],[123.04605,46.10003],[122.792898,46.073056],[122.828623,45.912185],[122.752246,45.834701],[122.792283,45.766291],[122.741775,45.70532],[122.671558,45.700723],[122.640761,45.7713],[122.555146,45.821359],[122.504639,45.787157],[122.496016,45.858041],[122.446125,45.916764],[122.362357,45.917597],[122.372828,45.855957],[122.258879,45.794666],[122.200981,45.85679],[122.091344,45.881787],[122.040221,45.95879],[121.84312,46.02447],[121.762432,45.999538],[121.809243,45.96087],[121.817251,45.875539],[121.754425,45.795084],[121.644172,45.752516],[121.713773,45.701977],[121.811091,45.686932],[121.867142,45.719942],[121.949062,45.711169],[122.003264,45.623363],[121.966308,45.596157],[122.02359,45.490137],[122.163408,45.443979],[122.147394,45.295598],[122.239169,45.276234],[122.22993,45.20672],[122.143082,45.183108],[122.109822,45.142186],[122.119677,45.068705],[122.074713,45.006553],[122.079025,44.914258],[122.04946,44.912987],[122.114749,44.776386],[122.161561,44.728371],[122.103046,44.673935],[122.13138,44.577697],[122.196053,44.559794],[122.228082,44.480017],[122.28598,44.477883],[122.291524,44.310291],[122.271198,44.255463],[122.319241,44.232745],[122.483697,44.237032],[122.676486,44.28631],[122.76087,44.369772],[122.85634,44.398422],[123.025108,44.492823],[123.125506,44.509466],[123.128585,44.366778],[123.196955,44.34496],[123.323838,44.179991],[123.386664,44.161966],[123.32815,44.083795],[123.332461,44.028326],[123.400831,43.979264],[123.52525,43.695718],[123.5117,43.59267],[123.439019,43.577501],[123.439019,43.577501],[123.304744,43.551055],[123.315831,43.49205],[123.382968,43.46904],[123.419925,43.409955],[123.486446,43.445587],[123.608402,43.366474],[123.703873,43.370824]]],[[[124.076516,50.564249],[123.825829,50.813669],[123.736517,50.974064],[123.465504,51.287212],[123.661989,51.319008],[123.711264,51.398216],[123.842459,51.367595],[123.926227,51.300681],[124.071588,51.320878],[124.128255,51.347419],[124.239124,51.344429],[124.271769,51.308162],[124.406659,51.271867],[124.43684,51.353772],[124.490427,51.380294],[124.58713,51.363486],[124.62655,51.327608],[124.693687,51.332842],[124.783614,51.392243],[124.864302,51.379547],[124.942527,51.447465],[124.928976,51.498523],[125.047236,51.529801],[125.098975,51.658408],[125.130388,51.635389],[125.35151,51.623876],[125.567089,51.455668],[125.567089,51.455668],[125.595422,51.416877],[125.595422,51.416877],[125.597886,51.414638],[125.597886,51.414638],[125.600966,51.413518],[125.600966,51.413518],[125.623756,51.387762],[125.623756,51.387762],[125.63977,51.372451],[125.63977,51.372451],[125.668103,51.347419],[125.668103,51.347419],[125.670567,51.34555],[125.670567,51.34555],[125.743248,51.275984],[125.743248,51.275984],[125.756798,51.227675],[125.840566,51.220555],[125.878138,51.159431],[126.059225,51.043711],[126.033971,51.010971],[126.073391,50.963514],[125.890457,50.805729],[125.758646,50.746706],[125.825784,50.703906],[125.787595,50.677373],[125.829479,50.561589],[125.740784,50.523184],[125.632379,50.443996],[125.590495,50.452378],[125.519662,50.315795],[125.466075,50.297452],[125.448829,50.216354],[125.334264,50.165023],[125.258504,50.103659],[125.294228,50.029151],[125.231402,49.957606],[125.239409,49.844687],[125.177815,49.829637],[125.095896,49.795661],[124.977635,49.900601],[124.935135,49.866675],[124.972708,49.834654],[124.824266,49.849703],[124.74173,49.761274],[124.730644,49.817671],[124.66597,49.868217],[124.650571,49.99493],[124.680752,50.031841],[124.604992,50.070644],[124.508289,50.162723],[124.575427,50.179585],[124.619774,50.229753],[124.578507,50.294777],[124.504594,50.342532],[124.499666,50.397868],[124.43992,50.388713],[124.43992,50.539919],[124.322892,50.532693],[124.289015,50.553226],[124.076516,50.564249]]]]}},{type:"Feature",properties:{adcode:21e4,name:"辽宁省",center:[123.429096,41.796767],centroid:[122.606135,41.300702],childrenNum:14,level:"province",subFeatureIndex:5,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[119.239545,41.314696],[119.326392,41.329525],[119.30545,41.402271],[119.376283,41.422015],[119.405848,41.508548],[119.361501,41.56498],[119.415703,41.590044],[119.307914,41.657581],[119.294363,41.775935],[119.334399,41.869569],[119.324544,41.969296],[119.384906,42.089738],[119.315921,42.119037],[119.237697,42.201088],[119.284508,42.265325],[119.415703,42.309588],[119.502551,42.387857],[119.572152,42.359568],[119.541971,42.292329],[119.744615,42.211725],[119.846861,42.21527],[119.837622,42.135455],[119.989759,41.898969],[120.051968,41.775935],[120.035954,41.708075],[120.096316,41.696907],[120.188707,41.848179],[120.373489,41.994648],[120.456641,42.016433],[120.466496,42.105277],[120.58414,42.167394],[120.624792,42.154532],[120.745516,42.223689],[120.79048,42.218372],[120.933378,42.279493],[121.068884,42.252483],[121.285079,42.387857],[121.304789,42.435567],[121.304789,42.435567],[121.388557,42.475297],[121.604752,42.494271],[121.66573,42.437333],[121.904714,42.569666],[121.940438,42.688525],[122.071634,42.711391],[122.20406,42.683687],[122.203445,42.731171],[122.338951,42.670051],[122.395002,42.683687],[122.457212,42.774227],[122.374676,42.774667],[122.35127,42.830419],[122.436886,42.843142],[122.563769,42.826031],[122.624747,42.773349],[122.732536,42.786524],[122.786123,42.756218],[122.786123,42.756218],[122.831087,42.722381],[122.887137,42.770275],[123.058368,42.768957],[123.227752,42.831735],[123.169853,42.859811],[123.18402,42.926002],[123.259165,42.992997],[123.474743,43.04243],[123.515395,43.027561],[123.515395,43.027561],[123.572678,43.0035],[123.666916,43.179585],[123.664453,43.264606],[123.703873,43.370824],[123.710032,43.417344],[123.791952,43.491182],[123.87264,43.451234],[123.84985,43.415606],[123.896046,43.361689],[124.032784,43.280724],[124.098074,43.29292],[124.114704,43.247175],[124.226805,43.241945],[124.226805,43.241945],[124.282856,43.230176],[124.284088,43.166058],[124.425754,43.076092],[124.333363,42.997373],[124.422674,42.975927],[124.431913,42.930821],[124.369087,42.882613],[124.435609,42.88086],[124.454703,42.823836],[124.514449,42.873406],[124.514449,42.873406],[124.539086,42.867266],[124.659195,42.972862],[124.686912,43.051176],[124.785462,43.117161],[124.896331,43.129826],[124.840897,43.032372],[124.869846,42.988183],[124.859375,42.822959],[124.897563,42.787841],[124.975171,42.802768],[124.996113,42.745234],[124.996113,42.745234],[124.968396,42.72282],[125.038613,42.615476],[125.097127,42.62252],[125.068794,42.499564],[125.186439,42.428059],[125.175352,42.308261],[125.29854,42.290116],[125.305931,42.146103],[125.353358,42.178923],[125.490097,42.136343],[125.369989,42.003096],[125.291764,41.958618],[125.299156,41.872243],[125.299156,41.872243],[125.297308,41.861995],[125.297308,41.861995],[125.29238,41.83971],[125.29238,41.83971],[125.29238,41.83971],[125.319482,41.777273],[125.319482,41.777273],[125.323793,41.771026],[125.323793,41.771026],[125.325025,41.670097],[125.450677,41.674119],[125.450061,41.598099],[125.534444,41.478073],[125.547995,41.401373],[125.637306,41.34435],[125.646545,41.264344],[125.758646,41.232404],[125.737088,41.179737],[125.791291,41.167577],[125.712451,41.095471],[125.726617,41.055328],[125.674879,40.974516],[125.589263,40.931135],[125.707523,40.866915],[125.544915,40.72922],[125.49564,40.728767],[125.422343,40.635297],[125.279445,40.655273],[125.018287,40.53624],[124.985642,40.475279],[124.897563,40.47892],[124.851368,40.427017],[124.74481,40.375074],[124.718325,40.319441],[124.62039,40.290695],[124.388797,40.113384],[124.38079,40.108808],[124.336442,40.049751],[124.372167,40.021348],[124.239124,39.927352],[124.173218,39.841496],[124.144885,39.745413],[124.103001,39.823577],[124.002603,39.800137],[123.828908,39.831389],[123.697097,39.807032],[123.665684,39.831389],[123.612714,39.77485],[123.536337,39.788644],[123.392823,39.723787],[123.383584,39.766572],[123.274563,39.753693],[123.253005,39.689724],[123.010941,39.655184],[122.972753,39.594813],[122.85634,39.606799],[122.808913,39.559764],[122.581631,39.464211],[122.489856,39.403673],[122.412864,39.411995],[122.274893,39.322257],[122.242865,39.267618],[122.117213,39.213863],[122.167104,39.158676],[122.048228,39.101123],[121.963228,39.030046],[121.864062,39.037018],[121.920728,38.969598],[121.863446,38.942611],[121.790149,39.022609],[121.671273,39.010057],[121.655874,38.9468],[121.719316,38.92027],[121.708845,38.872772],[121.565331,38.875101],[121.509897,38.817784],[121.359608,38.822446],[121.259825,38.786543],[121.198848,38.721686],[121.13479,38.72402],[121.128014,38.958897],[121.204391,38.941215],[121.341129,38.980761],[121.370695,39.060251],[121.508049,39.034229],[121.68236,39.117837],[121.604136,39.166098],[121.598592,39.279198],[121.668193,39.276419],[121.723628,39.367603],[121.621382,39.32596],[121.474788,39.296332],[121.432904,39.357426],[121.246891,39.421702],[121.304173,39.481762],[121.224717,39.51962],[121.297398,39.605877],[121.450151,39.625235],[121.501274,39.706758],[121.45939,39.747713],[121.530223,39.851603],[121.626925,39.882831],[121.699606,39.937445],[121.76428,39.933316],[121.82341,40.036467],[121.884388,40.053415],[122.01004,40.149067],[121.940438,40.2423],[122.02667,40.245041],[122.040221,40.322178],[122.198517,40.382367],[122.245944,40.519868],[122.133843,40.614408],[122.148626,40.671612],[122.06609,40.648464],[121.951525,40.680687],[121.934279,40.798103],[121.852359,40.821199],[121.816019,40.894962],[121.682976,40.829802],[121.526527,40.851529],[121.499426,40.880035],[121.335586,40.900842],[121.23642,40.851077],[121.126167,40.869177],[121.086747,40.798103],[120.991276,40.744181],[121.033776,40.70972],[120.8299,40.671158],[120.822509,40.593966],[120.72827,40.539423],[120.674683,40.471183],[120.616169,40.457071],[120.599539,40.355471],[120.537329,40.325372],[120.523778,40.256914],[120.465264,40.178787],[120.371641,40.174673],[120.273091,40.127111],[119.955882,40.046544],[119.913998,39.988349],[119.854252,39.988349],[119.845629,40.000726],[119.845629,40.000726],[119.848093,40.020432],[119.848093,40.020432],[119.817296,40.049751],[119.817296,40.049751],[119.780339,40.047002],[119.780339,40.047002],[119.779723,40.049293],[119.779723,40.049293],[119.736608,40.10469],[119.745847,40.208038],[119.625123,40.224029],[119.642369,40.291151],[119.586934,40.37553],[119.598637,40.465266],[119.571536,40.540333],[119.30237,40.530329],[119.162552,40.599872],[119.184726,40.680233],[119.054147,40.664804],[118.911249,40.776811],[118.849039,40.800821],[118.90201,40.960963],[118.977154,40.959155],[118.977154,40.959155],[119.013495,41.007485],[118.951901,41.01832],[118.96422,41.079236],[119.037516,41.067509],[119.126212,41.138744],[119.2494,41.279634],[119.239545,41.314696]]],[[[122.969057,39.513158],[122.978912,39.561609],[123.036194,39.533004],[122.969057,39.513158]]]]}},{type:"Feature",properties:{adcode:22e4,name:"吉林省",center:[125.3245,43.886841],centroid:[126.171246,43.703944],childrenNum:9,level:"province",subFeatureIndex:6,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[125.707523,40.866915],[125.589263,40.931135],[125.674879,40.974516],[125.726617,41.055328],[125.712451,41.095471],[125.791291,41.167577],[125.737088,41.179737],[125.758646,41.232404],[125.646545,41.264344],[125.637306,41.34435],[125.547995,41.401373],[125.534444,41.478073],[125.450061,41.598099],[125.450677,41.674119],[125.325025,41.670097],[125.323793,41.771026],[125.323793,41.771026],[125.319482,41.777273],[125.319482,41.777273],[125.29238,41.83971],[125.29238,41.83971],[125.29238,41.83971],[125.297308,41.861995],[125.297308,41.861995],[125.299156,41.872243],[125.299156,41.872243],[125.291764,41.958618],[125.369989,42.003096],[125.490097,42.136343],[125.353358,42.178923],[125.305931,42.146103],[125.29854,42.290116],[125.175352,42.308261],[125.186439,42.428059],[125.068794,42.499564],[125.097127,42.62252],[125.038613,42.615476],[124.968396,42.72282],[124.996113,42.745234],[124.996113,42.745234],[124.975171,42.802768],[124.897563,42.787841],[124.859375,42.822959],[124.869846,42.988183],[124.840897,43.032372],[124.896331,43.129826],[124.785462,43.117161],[124.686912,43.051176],[124.659195,42.972862],[124.539086,42.867266],[124.514449,42.873406],[124.514449,42.873406],[124.454703,42.823836],[124.435609,42.88086],[124.369087,42.882613],[124.431913,42.930821],[124.422674,42.975927],[124.333363,42.997373],[124.425754,43.076092],[124.284088,43.166058],[124.282856,43.230176],[124.226805,43.241945],[124.226805,43.241945],[124.114704,43.247175],[124.098074,43.29292],[124.032784,43.280724],[123.896046,43.361689],[123.84985,43.415606],[123.87264,43.451234],[123.791952,43.491182],[123.710032,43.417344],[123.703873,43.370824],[123.608402,43.366474],[123.486446,43.445587],[123.419925,43.409955],[123.382968,43.46904],[123.315831,43.49205],[123.304744,43.551055],[123.439019,43.577501],[123.439019,43.577501],[123.5117,43.59267],[123.52525,43.695718],[123.400831,43.979264],[123.332461,44.028326],[123.32815,44.083795],[123.386664,44.161966],[123.323838,44.179991],[123.196955,44.34496],[123.128585,44.366778],[123.125506,44.509466],[123.025108,44.492823],[122.85634,44.398422],[122.76087,44.369772],[122.676486,44.28631],[122.483697,44.237032],[122.319241,44.232745],[122.271198,44.255463],[122.291524,44.310291],[122.28598,44.477883],[122.228082,44.480017],[122.196053,44.559794],[122.13138,44.577697],[122.103046,44.673935],[122.161561,44.728371],[122.114749,44.776386],[122.04946,44.912987],[122.079025,44.914258],[122.074713,45.006553],[122.119677,45.068705],[122.109822,45.142186],[122.143082,45.183108],[122.22993,45.20672],[122.239169,45.276234],[122.147394,45.295598],[122.163408,45.443979],[122.02359,45.490137],[121.966308,45.596157],[122.003264,45.623363],[121.949062,45.711169],[121.867142,45.719942],[121.811091,45.686932],[121.713773,45.701977],[121.644172,45.752516],[121.754425,45.795084],[121.817251,45.875539],[121.809243,45.96087],[121.762432,45.999538],[121.84312,46.02447],[122.040221,45.95879],[122.091344,45.881787],[122.200981,45.85679],[122.258879,45.794666],[122.372828,45.855957],[122.362357,45.917597],[122.446125,45.916764],[122.496016,45.858041],[122.504639,45.787157],[122.555146,45.821359],[122.640761,45.7713],[122.671558,45.700723],[122.741775,45.70532],[122.792283,45.766291],[122.752246,45.834701],[122.828623,45.912185],[122.792898,46.073056],[123.04605,46.10003],[123.112571,46.129894],[123.102716,46.172172],[123.178476,46.247944],[123.248078,46.273178],[123.319527,46.253736],[123.319527,46.253736],[123.373113,46.223112],[123.498765,46.259528],[123.565902,46.22601],[123.610866,46.252909],[123.779633,46.264078],[123.896046,46.303774],[123.982893,46.22601],[123.99398,46.101275],[124.040176,46.019484],[123.970574,45.971267],[123.996444,45.907189],[124.061118,45.886369],[124.064813,45.797586],[124.009379,45.78215],[124.13811,45.68735],[124.129487,45.637589],[124.273001,45.584014],[124.287783,45.539191],[124.354305,45.546734],[124.398652,45.44062],[124.480572,45.456151],[124.544014,45.412066],[124.625318,45.437262],[124.886476,45.442719],[124.923433,45.541286],[124.961005,45.49517],[125.025678,45.493492],[125.06941,45.384757],[125.248649,45.417526],[125.347815,45.395262],[125.398322,45.416686],[125.424807,45.485523],[125.497488,45.469161],[125.628067,45.522006],[125.687813,45.51404],[125.716146,45.421725],[125.697052,45.349447],[125.760494,45.291389],[125.915095,45.196602],[126.166398,45.133323],[126.321615,45.178891],[126.428172,45.2358],[126.567375,45.252651],[126.831613,45.146406],[126.96404,45.132056],[126.968351,45.074621],[127.085995,44.944757],[127.021938,44.899002],[126.984366,44.823936],[127.037336,44.72157],[127.049039,44.567041],[127.094003,44.615189],[127.182082,44.644144],[127.392733,44.632223],[127.557189,44.575566],[127.536247,44.522266],[127.463566,44.484713],[127.50853,44.437312],[127.483892,44.401842],[127.483892,44.401842],[127.623095,44.277743],[127.591066,44.227601],[127.681609,44.167116],[127.724109,44.196723],[127.729036,44.098836],[127.862079,44.063162],[128.059796,44.110007],[128.089977,44.132342],[128.101679,44.290593],[128.049941,44.349239],[128.190375,44.367206],[128.211317,44.431757],[128.373309,44.51416],[128.46262,44.433894],[128.481714,44.375332],[128.450301,44.203157],[128.574721,44.047682],[128.584576,43.990887],[128.644938,43.936193],[128.636315,43.891366],[128.723778,43.894816],[128.760734,43.857724],[128.719467,43.816724],[128.877763,43.540213],[128.949212,43.55409],[129.014501,43.523295],[129.230696,43.59527],[129.211602,43.784336],[129.406855,43.819314],[129.467833,43.874548],[129.742542,43.875841],[129.784426,43.964623],[129.869425,44.005521],[129.869425,44.005521],[129.880512,44.000357],[129.880512,44.000357],[129.98091,44.014128],[130.017251,43.962039],[130.027106,43.851684],[130.079461,43.835285],[130.079461,43.835285],[130.189098,43.940501],[130.260547,43.948256],[130.353554,44.050262],[130.338155,43.949979],[130.338155,43.949979],[130.383119,43.906025],[130.380039,43.783904],[130.423771,43.742853],[130.4133,43.652009],[130.488444,43.655905],[130.823515,43.502901],[130.841378,43.454274],[130.907283,43.434291],[131.026775,43.508542],[131.134565,43.428643],[131.134565,43.428643],[131.294093,43.469909],[131.304564,43.502033],[131.314419,43.392567],[131.275615,43.369084],[131.255289,43.265041],[131.206014,43.23715],[131.218332,43.146853],[131.171521,43.069536],[131.102536,43.021],[131.151195,42.968485],[131.114855,42.915048],[131.034167,42.929069],[131.045869,42.866828],[130.949167,42.876913],[130.890653,42.852793],[130.801957,42.879544],[130.784095,42.842265],[130.666451,42.847968],[130.40714,42.731611],[130.464423,42.688525],[130.586995,42.67621],[130.633806,42.603586],[130.570364,42.557327],[130.558661,42.496035],[130.482285,42.626483],[130.388046,42.603145],[130.242069,42.738643],[130.265474,42.904092],[130.10225,42.922935],[130.144134,42.976365],[129.994461,42.980304],[129.98707,42.977678],[129.939642,43.01225],[129.899606,43.002187],[129.85957,42.966295],[129.858338,42.964544],[129.839244,42.879983],[129.835549,42.866828],[129.821382,42.854109],[129.816454,42.851039],[129.7641,42.716227],[129.764716,42.713149],[129.776418,42.69908],[129.794281,42.684127],[129.741926,42.580681],[129.748701,42.470884],[129.704354,42.427176],[129.612579,42.436892],[129.601492,42.42276],[129.546057,42.361336],[129.452434,42.440866],[129.344029,42.451462],[129.239935,42.36841],[129.231928,42.36001],[129.260261,42.335689],[129.183269,42.262225],[129.215914,42.20818],[129.120443,42.142111],[128.954755,42.083966],[128.930734,42.014211],[128.737945,42.050209],[128.70222,42.020434],[128.60675,42.030212],[128.569177,41.996426],[128.466316,42.020878],[128.090593,42.022656],[128.033926,42.000428],[128.106607,41.950164],[128.112766,41.79378],[128.171897,41.713882],[128.278454,41.658922],[128.317258,41.593177],[128.242114,41.501827],[128.203309,41.411246],[128.113998,41.364561],[127.932296,41.446686],[127.850376,41.422912],[127.636645,41.41349],[127.547334,41.477176],[127.40998,41.463278],[127.294183,41.48659],[127.283096,41.513925],[127.115561,41.540353],[127.179618,41.599888],[127.039184,41.671884],[127.051503,41.744693],[126.943714,41.772365],[126.931395,41.812959],[126.808207,41.748264],[126.798968,41.697354],[126.726903,41.751389],[126.688099,41.674119],[126.608643,41.670543],[126.569838,41.621809],[126.497158,41.406758],[126.539041,41.366806],[126.435564,41.351088],[126.322847,41.231054],[126.293282,41.17073],[126.157775,41.091413],[126.031507,40.927067],[125.959442,40.881845],[125.875059,40.90853],[125.817161,40.866915],[125.785132,40.895867],[125.707523,40.866915]]]]}},{type:"Feature",properties:{adcode:23e4,name:"黑龙江省",center:[126.642464,45.756967],centroid:[127.693002,48.040469],childrenNum:13,level:"province",subFeatureIndex:7,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[123.319527,46.253736],[123.319527,46.253736],[123.248078,46.273178],[123.178476,46.247944],[123.011557,46.43506],[123.002318,46.574257],[123.04605,46.617426],[123.18094,46.614138],[123.228368,46.58824],[123.276411,46.660972],[123.366338,46.677805],[123.603475,46.689299],[123.631808,46.728685],[123.625648,46.84749],[123.576989,46.891259],[123.562823,46.825797],[123.483366,46.845854],[123.52833,46.944797],[123.404526,46.935401],[123.374345,46.837668],[123.309056,46.86222],[123.221592,46.850355],[123.163694,46.740167],[123.026339,46.718841],[122.906847,46.807372],[122.895144,46.960317],[122.796594,46.938261],[122.778116,47.00277],[122.845869,47.046819],[122.679566,47.094092],[122.556378,47.17265],[122.418407,47.350503],[122.507103,47.401555],[122.543443,47.495427],[122.59395,47.547551],[122.763333,47.613338],[122.855108,47.677432],[123.166158,47.783677],[123.228983,47.840735],[123.300432,47.953861],[123.537569,48.021938],[123.746373,48.19772],[123.873256,48.281006],[124.07898,48.436058],[124.25945,48.536391],[124.25945,48.536391],[124.314269,48.503894],[124.317964,48.347856],[124.404812,48.264679],[124.418978,48.181765],[124.467637,48.178972],[124.463942,48.097518],[124.578507,48.251931],[124.579738,48.304095],[124.51876,48.378068],[124.507674,48.445584],[124.555717,48.467805],[124.520608,48.556196],[124.579122,48.596574],[124.653651,48.777089],[124.697383,48.841711],[124.709086,48.920406],[124.808252,49.020563],[124.807636,49.108769],[124.906802,49.183915],[125.117453,49.126],[125.219699,49.188999],[125.261583,49.318656],[125.264047,49.461585],[125.228323,49.486857],[125.234482,49.592077],[125.132236,49.671909],[125.219699,49.669199],[125.222779,49.799137],[125.177815,49.829637],[125.239409,49.844687],[125.231402,49.957606],[125.294228,50.029151],[125.258504,50.103659],[125.334264,50.165023],[125.448829,50.216354],[125.466075,50.297452],[125.519662,50.315795],[125.590495,50.452378],[125.632379,50.443996],[125.740784,50.523184],[125.829479,50.561589],[125.787595,50.677373],[125.825784,50.703906],[125.758646,50.746706],[125.890457,50.805729],[126.073391,50.963514],[126.033971,51.010971],[126.059225,51.043711],[125.878138,51.159431],[125.840566,51.220555],[125.756798,51.227675],[125.743248,51.275984],[125.743248,51.275984],[125.670567,51.34555],[125.670567,51.34555],[125.668103,51.347419],[125.668103,51.347419],[125.63977,51.372451],[125.63977,51.372451],[125.623756,51.387762],[125.623756,51.387762],[125.600966,51.413518],[125.600966,51.413518],[125.597886,51.414638],[125.597886,51.414638],[125.595422,51.416877],[125.595422,51.416877],[125.567089,51.455668],[125.567089,51.455668],[125.35151,51.623876],[125.130388,51.635389],[125.098975,51.658408],[125.047236,51.529801],[124.928976,51.498523],[124.942527,51.447465],[124.864302,51.379547],[124.783614,51.392243],[124.693687,51.332842],[124.62655,51.327608],[124.58713,51.363486],[124.490427,51.380294],[124.43684,51.353772],[124.406659,51.271867],[124.271769,51.308162],[124.239124,51.344429],[124.128255,51.347419],[124.071588,51.320878],[123.926227,51.300681],[123.842459,51.367595],[123.711264,51.398216],[123.661989,51.319008],[123.465504,51.287212],[123.294273,51.25427],[123.058984,51.321999],[122.978296,51.331346],[122.965977,51.387015],[122.903768,51.415384],[122.854492,51.477659],[122.85634,51.606786],[122.749167,51.746661],[122.771957,51.779619],[122.706051,51.890166],[122.726377,51.978704],[122.683877,51.974649],[122.629059,52.136529],[122.769493,52.179843],[122.76087,52.26671],[122.585943,52.266344],[122.478153,52.29636],[122.484313,52.341711],[122.342031,52.41403],[122.310618,52.475299],[122.207756,52.469103],[122.168952,52.513549],[122.091344,52.427167],[121.94783,52.298555],[121.841272,52.282818],[121.714389,52.317944],[121.63986,52.444311],[121.519136,52.456709],[121.416274,52.499346],[121.325731,52.572498],[121.182217,52.599399],[121.373158,52.683268],[121.476636,52.772043],[121.591201,52.824499],[121.610295,52.892416],[121.66265,52.912626],[121.715621,52.998054],[121.785838,53.018575],[121.817867,53.061744],[121.754425,53.146519],[121.665114,53.170556],[121.679896,53.240437],[121.612143,53.260484],[121.499426,53.337008],[121.596128,53.352368],[121.697758,53.392705],[121.754425,53.389494],[121.875765,53.426587],[122.111054,53.426944],[122.161561,53.468635],[122.227466,53.461868],[122.350038,53.50566],[122.435038,53.444766],[122.608117,53.46543],[122.894528,53.462936],[123.052209,53.506727],[123.137209,53.498186],[123.274563,53.563269],[123.454417,53.536608],[123.510468,53.509218],[123.517243,53.558293],[123.569598,53.505304],[123.58746,53.546919],[123.668764,53.533763],[123.698329,53.498542],[123.865249,53.489644],[124.058038,53.404121],[124.125791,53.348082],[124.239124,53.379501],[124.327819,53.332006],[124.375863,53.259053],[124.435609,53.223962],[124.563108,53.201389],[124.683832,53.206406],[124.734339,53.146519],[124.832889,53.145083],[124.87231,53.099123],[124.887708,53.164458],[124.970244,53.194221],[125.195062,53.198522],[125.315786,53.145083],[125.503647,53.095171],[125.530749,53.050956],[125.613901,53.083313],[125.684118,53.008136],[125.742632,52.993733],[125.737704,52.945087],[125.665023,52.913348],[125.678574,52.860999],[125.772197,52.89783],[125.855349,52.866418],[125.985312,52.758648],[126.058609,52.798098],[126.115275,52.757924],[126.045058,52.738366],[126.061688,52.673473],[125.995783,52.675287],[125.968682,52.630279],[126.030891,52.576135],[126.066616,52.60376],[126.213209,52.5252],[126.205202,52.466187],[126.266796,52.475664],[126.353644,52.389207],[126.327774,52.310628],[126.4331,52.298555],[126.300673,52.220915],[126.34502,52.192315],[126.499005,52.160394],[126.563679,52.119266],[126.514404,52.037264],[126.450962,52.027693],[126.462665,51.948473],[126.510092,51.922281],[126.622809,51.777397],[126.734294,51.711454],[126.741069,51.642073],[126.69549,51.578536],[126.837156,51.536128],[126.784185,51.44821],[126.908605,51.407174],[126.930163,51.359376],[126.837156,51.345177],[126.841468,51.258763],[126.92154,51.259512],[126.887047,51.321999],[126.978822,51.329477],[126.976358,51.291702],[126.899982,51.200689],[126.922772,51.061764],[127.143894,50.91035],[127.236285,50.781524],[127.295415,50.755035],[127.294799,50.663721],[127.370559,50.581349],[127.293567,50.46571],[127.3644,50.43828],[127.332371,50.340623],[127.371791,50.296688],[127.603385,50.23932],[127.58737,50.137802],[127.501755,50.056817],[127.495595,49.994545],[127.543638,49.944131],[127.531936,49.825777],[127.563964,49.793343],[127.660051,49.77905],[127.677913,49.697846],[127.815268,49.594017],[127.897804,49.578889],[128.001281,49.592465],[128.070882,49.55677],[128.185447,49.539301],[128.287077,49.566473],[128.343128,49.545125],[128.389939,49.590138],[128.537764,49.604487],[128.715155,49.56492],[128.744104,49.594792],[128.813089,49.558323],[128.754575,49.506676],[128.792147,49.473251],[128.871604,49.492298],[129.013886,49.457307],[129.055769,49.382188],[129.143849,49.357253],[129.215298,49.398935],[129.320623,49.358422],[129.379138,49.366995],[129.390224,49.432799],[129.448739,49.441359],[129.546057,49.395041],[129.562687,49.299541],[129.604571,49.278858],[129.714209,49.296029],[129.761636,49.257384],[129.753629,49.208547],[129.847867,49.181177],[129.866962,49.114252],[129.913157,49.108377],[129.937179,49.04057],[130.020946,49.020955],[130.059135,48.978954],[130.211272,48.901137],[130.245148,48.866514],[130.471198,48.905464],[130.501995,48.86612],[130.680617,48.881074],[130.689856,48.849586],[130.622103,48.783792],[130.538335,48.612004],[130.605473,48.5942],[130.620871,48.495964],[130.767465,48.507858],[130.740363,48.425339],[130.845073,48.296533],[130.769313,48.23121],[130.765617,48.189344],[130.673842,48.128278],[130.699711,48.044344],[130.891269,47.927006],[130.961486,47.827882],[130.966413,47.732996],[131.029855,47.694752],[131.115471,47.689919],[131.273767,47.739032],[131.456085,47.747079],[131.543548,47.735813],[131.59036,47.660912],[131.695685,47.709248],[131.825649,47.677432],[131.970394,47.671388],[132.000575,47.712066],[132.086191,47.703208],[132.272205,47.718507],[132.371987,47.76518],[132.469305,47.726154],[132.570319,47.720922],[132.599268,47.792521],[132.687348,47.885293],[132.661478,47.944643],[132.723072,47.963076],[132.819159,47.937028],[132.883216,48.002325],[132.992238,48.035142],[133.041513,48.102313],[133.15423,48.137063],[133.302055,48.103112],[133.407997,48.124684],[133.536728,48.117494],[133.59709,48.194928],[133.693177,48.186951],[133.740604,48.25472],[134.0689,48.338311],[134.131109,48.335527],[134.20379,48.38244],[134.350384,48.378466],[134.501905,48.418986],[134.696542,48.407072],[134.820961,48.376081],[134.927519,48.451537],[135.09567,48.437646],[135.082736,48.396346],[134.864077,48.332345],[134.679295,48.256314],[134.67252,48.170593],[134.632484,48.099516],[134.551796,48.032742],[134.607846,47.909362],[134.660201,47.900538],[134.678679,47.819446],[134.772918,47.763572],[134.779694,47.716091],[134.684223,47.631889],[134.685455,47.603253],[134.576434,47.519273],[134.568426,47.478445],[134.493898,47.446894],[134.339297,47.43961],[134.177305,47.32658],[134.156979,47.248656],[134.230276,47.182411],[134.222268,47.105496],[134.142812,47.093277],[134.042414,46.886761],[134.011001,46.637971],[133.919842,46.596052],[133.852089,46.449903],[133.950023,46.394634],[133.876726,46.362438],[133.922922,46.330635],[133.904444,46.25084],[133.83977,46.202825],[133.706111,46.163056],[133.745531,46.075547],[133.676546,45.942982],[133.616184,45.943398],[133.576148,45.870957],[133.51209,45.886785],[133.470822,45.838035],[133.484373,45.738737],[133.445569,45.70532],[133.491764,45.672301],[133.371656,45.576895],[133.21028,45.516975],[133.141295,45.427605],[133.095715,45.246753],[133.138215,45.178469],[133.103107,45.107147],[132.945426,45.020512],[132.867202,45.061944],[132.394161,45.163706],[132.025829,45.250545],[131.93159,45.288442],[131.917423,45.339354],[131.82996,45.31159],[131.79362,45.211778],[131.721555,45.234536],[131.650722,45.159909],[131.695685,45.132056],[131.632244,45.074621],[131.484418,44.995553],[131.464708,44.963388],[131.355687,44.98963],[131.274999,44.919766],[131.16105,44.948145],[131.090217,44.924426],[131.07913,44.881623],[130.967029,44.854059],[131.016304,44.789551],[131.064348,44.787003],[131.111775,44.71009],[131.310723,44.046392],[131.263912,44.030047],[131.267608,43.938778],[131.211557,43.826221],[131.244818,43.604369],[131.20047,43.531971],[131.304564,43.502033],[131.294093,43.469909],[131.134565,43.428643],[131.134565,43.428643],[131.026775,43.508542],[130.907283,43.434291],[130.841378,43.454274],[130.823515,43.502901],[130.488444,43.655905],[130.4133,43.652009],[130.423771,43.742853],[130.380039,43.783904],[130.383119,43.906025],[130.338155,43.949979],[130.338155,43.949979],[130.353554,44.050262],[130.260547,43.948256],[130.189098,43.940501],[130.079461,43.835285],[130.079461,43.835285],[130.027106,43.851684],[130.017251,43.962039],[129.98091,44.014128],[129.880512,44.000357],[129.880512,44.000357],[129.869425,44.005521],[129.869425,44.005521],[129.784426,43.964623],[129.742542,43.875841],[129.467833,43.874548],[129.406855,43.819314],[129.211602,43.784336],[129.230696,43.59527],[129.014501,43.523295],[128.949212,43.55409],[128.877763,43.540213],[128.719467,43.816724],[128.760734,43.857724],[128.723778,43.894816],[128.636315,43.891366],[128.644938,43.936193],[128.584576,43.990887],[128.574721,44.047682],[128.450301,44.203157],[128.481714,44.375332],[128.46262,44.433894],[128.373309,44.51416],[128.211317,44.431757],[128.190375,44.367206],[128.049941,44.349239],[128.101679,44.290593],[128.089977,44.132342],[128.059796,44.110007],[127.862079,44.063162],[127.729036,44.098836],[127.724109,44.196723],[127.681609,44.167116],[127.591066,44.227601],[127.623095,44.277743],[127.483892,44.401842],[127.483892,44.401842],[127.50853,44.437312],[127.463566,44.484713],[127.536247,44.522266],[127.557189,44.575566],[127.392733,44.632223],[127.182082,44.644144],[127.094003,44.615189],[127.049039,44.567041],[127.037336,44.72157],[126.984366,44.823936],[127.021938,44.899002],[127.085995,44.944757],[126.968351,45.074621],[126.96404,45.132056],[126.831613,45.146406],[126.567375,45.252651],[126.428172,45.2358],[126.321615,45.178891],[126.166398,45.133323],[125.915095,45.196602],[125.760494,45.291389],[125.697052,45.349447],[125.716146,45.421725],[125.687813,45.51404],[125.628067,45.522006],[125.497488,45.469161],[125.424807,45.485523],[125.398322,45.416686],[125.347815,45.395262],[125.248649,45.417526],[125.06941,45.384757],[125.025678,45.493492],[124.961005,45.49517],[124.923433,45.541286],[124.886476,45.442719],[124.625318,45.437262],[124.544014,45.412066],[124.480572,45.456151],[124.398652,45.44062],[124.354305,45.546734],[124.287783,45.539191],[124.273001,45.584014],[124.129487,45.637589],[124.13811,45.68735],[124.009379,45.78215],[124.064813,45.797586],[124.061118,45.886369],[123.996444,45.907189],[123.970574,45.971267],[124.040176,46.019484],[123.99398,46.101275],[123.982893,46.22601],[123.896046,46.303774],[123.779633,46.264078],[123.610866,46.252909],[123.565902,46.22601],[123.498765,46.259528],[123.373113,46.223112],[123.319527,46.253736]]],[[[124.43992,50.388713],[124.36416,50.360857],[124.368471,50.258068],[124.32474,50.178436],[124.278544,50.231284],[124.189233,50.216737],[124.103001,50.238555],[124.061733,50.199122],[124.007531,50.219417],[123.953944,50.186865],[123.878799,50.208696],[123.870792,50.270307],[123.777785,50.344441],[123.800575,50.455806],[123.920067,50.37307],[124.005067,50.434469],[123.983509,50.510249],[124.076516,50.564249],[124.289015,50.553226],[124.322892,50.532693],[124.43992,50.539919],[124.43992,50.388713]]]]}},{type:"Feature",properties:{adcode:31e4,name:"上海市",center:[121.472644,31.231706],centroid:[121.438732,31.072508],childrenNum:16,level:"province",subFeatureIndex:8,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[121.970004,30.789217],[121.943518,30.77688],[121.904714,30.814399],[121.601056,30.805149],[121.426129,30.730089],[121.362071,30.679673],[121.274608,30.677615],[121.217942,30.785105],[121.123087,30.778936],[121.097218,30.85704],[120.989428,30.833924],[120.991892,31.00793],[120.901349,31.017673],[120.881023,31.134513],[121.076892,31.158581],[121.063341,31.268088],[121.150188,31.275247],[121.106457,31.364697],[121.173594,31.448956],[121.25613,31.478047],[121.25613,31.478047],[121.302325,31.498966],[121.302325,31.498966],[121.343593,31.512229],[121.520984,31.394835],[121.713773,31.308992],[121.946598,31.065861],[121.990945,30.968434],[121.970004,30.789217]]],[[[121.371926,31.553028],[121.145261,31.753699],[121.200079,31.835066],[121.323267,31.86861],[121.43352,31.768452],[121.715005,31.673788],[121.974931,31.617249],[121.995873,31.493354],[121.890547,31.428537],[121.819098,31.438237],[121.547469,31.531101],[121.434136,31.59024],[121.371926,31.553028]]],[[[121.74149,31.345792],[121.509897,31.482639],[121.742106,31.407091],[121.74149,31.345792]]],[[[121.844352,31.294678],[121.792613,31.377468],[121.914569,31.343236],[121.844352,31.294678]]],[[[121.943518,31.215397],[122.008808,31.221026],[121.995873,31.160629],[121.943518,31.215397]]]]}},{type:"Feature",properties:{adcode:32e4,name:"江苏省",center:[118.767413,32.041544],centroid:[119.48196,32.985864],childrenNum:13,level:"province",subFeatureIndex:9,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[121.974931,31.617249],[121.715005,31.673788],[121.43352,31.768452],[121.323267,31.86861],[121.200079,31.835066],[121.145261,31.753699],[121.371926,31.553028],[121.343593,31.512229],[121.302325,31.498966],[121.302325,31.498966],[121.25613,31.478047],[121.25613,31.478047],[121.173594,31.448956],[121.106457,31.364697],[121.150188,31.275247],[121.063341,31.268088],[121.076892,31.158581],[120.881023,31.134513],[120.901349,31.017673],[120.698089,30.970999],[120.713487,30.885286],[120.589068,30.854472],[120.504684,30.757858],[120.423996,30.900689],[120.35809,30.88734],[120.371025,30.948424],[120.226279,30.926356],[120.13512,30.941752],[120.001461,31.026902],[119.919542,31.170868],[119.678093,31.168308],[119.623891,31.130416],[119.460051,31.156533],[119.388602,31.194415],[119.388602,31.194415],[119.379979,31.269622],[119.267878,31.250698],[119.199508,31.293655],[119.075089,31.232282],[118.781286,31.239956],[118.728931,31.281384],[118.745561,31.37287],[118.853967,31.39841],[118.876756,31.532631],[118.873061,31.53569],[118.858278,31.624382],[118.804691,31.618268],[118.77451,31.682444],[118.736938,31.634061],[118.643931,31.65138],[118.697518,31.709935],[118.638388,31.759295],[118.552772,31.729275],[118.481939,31.778117],[118.504729,31.841674],[118.363679,31.930581],[118.400019,32.077724],[118.499801,32.1203],[118.522591,32.188178],[118.642083,32.208937],[118.69567,32.31721],[118.69259,32.463224],[118.592192,32.481396],[118.563859,32.56363],[118.719076,32.614042],[118.719076,32.614042],[118.92172,32.557074],[118.922336,32.557074],[118.92172,32.557074],[118.922336,32.557074],[118.978386,32.504106],[119.041212,32.515207],[119.084944,32.452622],[119.22045,32.57674],[119.184726,32.825465],[119.104038,32.82647],[118.995017,32.958604],[118.849039,32.956596],[118.811467,32.854622],[118.74125,32.850601],[118.756648,32.737433],[118.707373,32.720319],[118.375382,32.718809],[118.250346,32.84859],[118.2331,32.914414],[118.293462,32.947056],[118.244803,32.998256],[118.221397,33.182228],[118.038463,33.134642],[117.939297,33.262813],[117.971941,33.277821],[118.050782,33.492148],[118.108064,33.475181],[118.112376,33.617302],[118.16781,33.66313],[118.116071,33.767645],[117.901724,33.719883],[117.805638,33.736304],[117.752667,33.711422],[117.758826,33.885445],[117.715095,33.879485],[117.629479,34.028872],[117.575892,33.982744],[117.514914,34.061097],[117.410205,34.026888],[117.352922,34.089842],[117.192778,34.068532],[117.025243,34.167106],[117.04988,34.242321],[116.971656,34.279409],[116.969192,34.387613],[116.828142,34.389094],[116.774555,34.452764],[116.574991,34.488773],[116.595933,34.510469],[116.491839,34.57109],[116.429629,34.652834],[116.374195,34.640036],[116.408071,34.85095],[116.445028,34.89562],[116.677853,34.939285],[116.821983,34.929475],[116.966728,34.875497],[117.000605,34.793482],[117.088069,34.702039],[117.07575,34.637575],[117.137344,34.633144],[117.175532,34.47003],[117.242669,34.445856],[117.301184,34.557294],[117.301184,34.557294],[117.322125,34.566656],[117.322125,34.566656],[117.32151,34.566656],[117.32151,34.566656],[117.322125,34.574046],[117.322125,34.574046],[117.402813,34.569612],[117.465023,34.484827],[117.592523,34.462631],[117.684298,34.547439],[117.801942,34.51885],[117.793935,34.65185],[117.902956,34.644467],[117.951615,34.678424],[118.084042,34.655788],[118.079115,34.569612],[118.185056,34.543989],[118.132702,34.483348],[118.177665,34.453257],[118.179513,34.379218],[118.290382,34.424637],[118.404947,34.427598],[118.440671,34.527724],[118.424657,34.595228],[118.460997,34.65628],[118.601431,34.714336],[118.690127,34.678424],[118.783749,34.723188],[118.719076,34.745315],[118.772047,34.794464],[118.860742,34.94419],[118.865053,35.029974],[118.928495,35.051039],[119.114509,35.054958],[119.137915,35.09609],[119.286972,35.11518],[119.306066,35.076506],[119.238929,35.04908],[119.202588,34.890222],[119.238313,34.799378],[119.378747,34.764487],[119.459435,34.770876],[119.50871,34.729089],[119.465594,34.673012],[119.582623,34.598676],[119.781571,34.515892],[119.811752,34.48532],[119.962657,34.458684],[120.311895,34.307091],[120.367329,34.091328],[120.583524,33.668608],[120.651277,33.575937],[120.741205,33.337826],[120.821893,33.298327],[120.90566,33.030366],[120.929682,32.876232],[120.974646,32.874724],[120.966638,32.770141],[120.900733,32.72334],[120.916131,32.642261],[121.153268,32.529333],[121.352216,32.47433],[121.425513,32.430909],[121.472941,32.138034],[121.524063,32.137528],[121.759352,32.059471],[121.856055,31.95546],[121.970004,31.719096],[121.974931,31.617249]]]]}},{type:"Feature",properties:{adcode:33e4,name:"浙江省",center:[120.153576,30.287459],centroid:[120.109522,29.181876],childrenNum:11,level:"province",subFeatureIndex:10,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[120.461568,27.14259],[120.401206,27.211253],[120.430155,27.258601],[120.34146,27.39946],[120.26262,27.432921],[120.13512,27.420175],[120.052584,27.338886],[120.007005,27.376084],[119.843165,27.300611],[119.770484,27.305928],[119.685485,27.438762],[119.70889,27.514141],[119.630666,27.582574],[119.644217,27.663684],[119.501319,27.649905],[119.474833,27.539079],[119.376899,27.534835],[119.267878,27.421237],[119.194581,27.418582],[118.983314,27.498751],[118.903858,27.462125],[118.869365,27.54014],[118.913713,27.61651],[118.818242,27.916697],[118.730163,27.970611],[118.719076,28.063576],[118.802228,28.117416],[118.771431,28.188634],[118.802228,28.240303],[118.700598,28.310912],[118.674728,28.271398],[118.587881,28.28299],[118.444367,28.25348],[118.433896,28.288786],[118.486867,28.328821],[118.432048,28.402003],[118.472084,28.482497],[118.426505,28.532447],[118.425273,28.537177],[118.426505,28.532447],[118.425273,28.537177],[118.421577,28.540331],[118.421577,28.541908],[118.423425,28.587626],[118.423425,28.587626],[118.431432,28.679528],[118.379077,28.785509],[118.379077,28.785509],[118.306396,28.823782],[118.270056,28.918619],[118.111144,28.997671],[118.111144,28.997671],[118.037847,29.097054],[118.027992,29.168132],[118.077883,29.290836],[118.136397,29.284052],[118.20723,29.346135],[118.193064,29.395149],[118.316252,29.422774],[118.310708,29.49623],[118.496106,29.519662],[118.500417,29.575877],[118.573714,29.638302],[118.644547,29.641942],[118.744945,29.738621],[118.755416,29.845586],[118.894619,29.93792],[118.902626,30.029133],[118.847807,30.163208],[118.929727,30.202515],[118.880452,30.31518],[118.954365,30.360106],[119.06277,30.304849],[119.201356,30.290901],[119.246936,30.341002],[119.36766,30.384885],[119.326392,30.532906],[119.237081,30.54682],[119.238929,30.60915],[119.312225,30.620993],[119.386754,30.685333],[119.416935,30.642101],[119.482841,30.70437],[119.479761,30.772253],[119.575847,30.829814],[119.585702,30.976642],[119.633746,31.019724],[119.623891,31.130416],[119.678093,31.168308],[119.919542,31.170868],[120.001461,31.026902],[120.13512,30.941752],[120.226279,30.926356],[120.371025,30.948424],[120.35809,30.88734],[120.423996,30.900689],[120.504684,30.757858],[120.589068,30.854472],[120.713487,30.885286],[120.698089,30.970999],[120.901349,31.017673],[120.991892,31.00793],[120.989428,30.833924],[121.097218,30.85704],[121.123087,30.778936],[121.217942,30.785105],[121.274608,30.677615],[121.058413,30.563823],[121.225333,30.404496],[121.328195,30.397271],[121.497578,30.258864],[121.632469,30.072119],[121.721164,29.992865],[121.78399,29.993383],[121.919497,29.920808],[121.968156,29.956584],[122.00696,29.891764],[122.140003,29.901619],[122.10243,29.859597],[121.997721,29.759919],[121.937359,29.748491],[121.833265,29.653382],[121.966308,29.635702],[122.000185,29.582642],[121.968772,29.515497],[121.993409,29.451954],[121.937975,29.384201],[121.986634,29.15507],[121.966308,29.053128],[121.884388,29.105419],[121.780294,29.109601],[121.767975,29.166565],[121.660186,29.118487],[121.774751,28.864138],[121.668193,28.873046],[121.704534,28.816443],[121.689135,28.719415],[121.540694,28.655379],[121.634317,28.56293],[121.687287,28.40095],[121.627541,28.251899],[121.499426,28.306171],[121.373774,28.133246],[121.288159,28.144854],[121.261057,28.034533],[121.140949,28.031364],[121.108304,28.13905],[121.059029,28.096305],[120.991892,27.95],[121.05595,27.900306],[121.162507,27.90718],[121.152652,27.810376],[121.153268,27.809847],[121.149572,27.801908],[121.149572,27.801379],[121.149572,27.80085],[121.13479,27.787088],[121.134174,27.787088],[121.152036,27.815139],[121.027616,27.832601],[120.942001,27.896605],[120.797871,27.779677],[120.634647,27.577271],[120.703016,27.478581],[120.673451,27.369708],[120.572437,27.313903],[120.544104,27.154303],[120.461568,27.14259]]],[[[122.301379,29.942068],[122.163408,29.988201],[122.038989,29.989756],[121.991561,30.075743],[121.990945,30.076261],[121.952757,30.183898],[122.152938,30.113015],[122.293988,30.100075],[122.347574,30.014109],[122.301379,29.942068]]],[[[122.100583,30.304333],[122.228082,30.329641],[122.22993,30.232503],[122.058083,30.291934],[122.100583,30.304333]]],[[[122.317393,30.249561],[122.40732,30.272817],[122.397465,30.225266],[122.317393,30.249561]]],[[[122.435038,29.906287],[122.391922,29.831573],[122.327248,29.922883],[122.411632,29.951918],[122.435038,29.906287]]],[[[122.353734,30.464339],[122.423335,30.408624],[122.281669,30.418944],[122.277973,30.471558],[122.353734,30.464339]]],[[[122.303843,29.832611],[122.310002,29.766671],[122.221307,29.832611],[122.303843,29.832611]]],[[[122.13138,29.673659],[122.047612,29.719396],[122.130148,29.79056],[122.200981,29.711082],[122.192358,29.655462],[122.13138,29.673659]]],[[[121.943518,30.77688],[121.970004,30.789217],[122.011271,30.669381],[121.968156,30.68842],[121.943518,30.77688]]],[[[121.874533,29.964878],[121.835113,29.992865],[121.855439,30.085062],[121.924424,30.052441],[121.933047,29.994938],[121.874533,29.964878]]],[[[122.155401,29.97058],[122.154169,29.971098],[122.152322,29.971098],[122.163408,29.988201],[122.155401,29.97058]]],[[[121.136638,27.948414],[121.041783,27.943657],[121.0695,27.984349],[121.136638,27.948414]]],[[[121.134174,27.786029],[121.134174,27.787088],[121.13479,27.787088],[121.134174,27.786029]]],[[[122.152322,29.971098],[122.154169,29.971098],[122.155401,29.97058],[122.152322,29.971098]]]]}},{type:"Feature",properties:{adcode:34e4,name:"安徽省",center:[117.283042,31.86119],centroid:[117.226894,31.849585],childrenNum:16,level:"province",subFeatureIndex:11,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[115.5088,32.468777],[115.409018,32.549005],[115.304924,32.553039],[115.20083,32.591864],[115.183584,32.665937],[115.197135,32.85613],[115.139237,32.897837],[114.943368,32.935005],[114.883006,32.990227],[114.925506,33.016821],[114.902716,33.129632],[114.966158,33.147167],[115.042534,33.08653],[115.168186,33.088535],[115.301229,33.141657],[115.365286,33.335826],[115.312931,33.376307],[115.345576,33.503125],[115.421953,33.556992],[115.639995,33.584909],[115.563003,33.771624],[115.614126,33.775603],[115.629524,33.871536],[115.546988,33.875014],[115.60735,34.030359],[115.736082,34.076957],[115.877132,34.003083],[115.95782,34.007547],[116.00032,33.964881],[115.987385,33.900842],[116.05945,33.861103],[116.074232,33.781571],[116.155536,33.709929],[116.263326,33.729835],[116.316297,33.771127],[116.437021,33.801461],[116.437637,33.846694],[116.64336,33.896869],[116.648288,33.973317],[116.575607,34.069028],[116.575607,34.069028],[116.530643,34.107183],[116.565752,34.173541],[116.516477,34.296217],[116.409303,34.273971],[116.409303,34.273971],[116.26271,34.375762],[116.213435,34.382181],[116.162312,34.459178],[116.204196,34.508497],[116.196804,34.576017],[116.240536,34.552367],[116.281188,34.60754],[116.374195,34.640036],[116.429629,34.652834],[116.491839,34.57109],[116.595933,34.510469],[116.574991,34.488773],[116.774555,34.452764],[116.828142,34.389094],[116.969192,34.387613],[116.971656,34.279409],[117.04988,34.242321],[117.025243,34.167106],[117.192778,34.068532],[117.352922,34.089842],[117.410205,34.026888],[117.514914,34.061097],[117.575892,33.982744],[117.629479,34.028872],[117.715095,33.879485],[117.758826,33.885445],[117.752667,33.711422],[117.805638,33.736304],[117.901724,33.719883],[118.116071,33.767645],[118.16781,33.66313],[118.112376,33.617302],[118.108064,33.475181],[118.050782,33.492148],[117.971941,33.277821],[117.939297,33.262813],[118.038463,33.134642],[118.221397,33.182228],[118.244803,32.998256],[118.293462,32.947056],[118.2331,32.914414],[118.250346,32.84859],[118.375382,32.718809],[118.707373,32.720319],[118.756648,32.737433],[118.74125,32.850601],[118.811467,32.854622],[118.849039,32.956596],[118.995017,32.958604],[119.104038,32.82647],[119.184726,32.825465],[119.22045,32.57674],[119.084944,32.452622],[119.041212,32.515207],[118.978386,32.504106],[118.922336,32.557074],[118.92172,32.557074],[118.922336,32.557074],[118.92172,32.557074],[118.719076,32.614042],[118.719076,32.614042],[118.563859,32.56363],[118.592192,32.481396],[118.69259,32.463224],[118.69567,32.31721],[118.642083,32.208937],[118.522591,32.188178],[118.499801,32.1203],[118.400019,32.077724],[118.363679,31.930581],[118.504729,31.841674],[118.481939,31.778117],[118.552772,31.729275],[118.638388,31.759295],[118.697518,31.709935],[118.643931,31.65138],[118.736938,31.634061],[118.77451,31.682444],[118.804691,31.618268],[118.858278,31.624382],[118.873061,31.53569],[118.866285,31.527021],[118.870597,31.526001],[118.876756,31.532631],[118.853967,31.39841],[118.745561,31.37287],[118.728931,31.281384],[118.781286,31.239956],[119.075089,31.232282],[119.199508,31.293655],[119.267878,31.250698],[119.379979,31.269622],[119.388602,31.194415],[119.388602,31.194415],[119.460051,31.156533],[119.623891,31.130416],[119.633746,31.019724],[119.585702,30.976642],[119.575847,30.829814],[119.479761,30.772253],[119.482841,30.70437],[119.416935,30.642101],[119.386754,30.685333],[119.312225,30.620993],[119.238929,30.60915],[119.237081,30.54682],[119.326392,30.532906],[119.36766,30.384885],[119.246936,30.341002],[119.201356,30.290901],[119.06277,30.304849],[118.954365,30.360106],[118.880452,30.31518],[118.929727,30.202515],[118.847807,30.163208],[118.902626,30.029133],[118.894619,29.93792],[118.755416,29.845586],[118.744945,29.738621],[118.644547,29.641942],[118.573714,29.638302],[118.500417,29.575877],[118.496106,29.519662],[118.310708,29.49623],[118.316252,29.422774],[118.193064,29.395149],[118.136397,29.419125],[118.134549,29.508728],[118.008282,29.578479],[117.872775,29.547774],[117.807486,29.573796],[117.707703,29.548815],[117.647957,29.614897],[117.545711,29.594089],[117.532161,29.651822],[117.453936,29.688214],[117.455168,29.749011],[117.384335,29.84351],[117.29256,29.822749],[117.246365,29.915104],[117.17738,29.921846],[117.073286,29.832092],[117.136728,29.7755],[117.112706,29.712121],[116.780715,29.570153],[116.651983,29.637262],[116.677237,29.66898],[116.694483,29.672099],[116.694483,29.672099],[116.717273,29.690813],[116.710498,29.69705],[116.709882,29.69757],[116.706186,29.69809],[116.698795,29.707964],[116.684012,29.72823],[116.789954,29.795233],[116.882961,29.89332],[116.900207,29.949326],[116.83307,29.957621],[116.747454,30.057101],[116.666766,30.076779],[116.586078,30.046226],[116.552201,29.909918],[116.473361,29.89747],[116.26271,29.782251],[116.207891,29.82742],[116.13521,29.819634],[116.127203,29.899544],[116.073616,29.970061],[116.091479,30.036385],[116.065609,30.204584],[115.985537,30.290901],[115.903001,30.313631],[115.921479,30.416364],[115.876516,30.582368],[115.819234,30.59782],[115.762567,30.685848],[115.782893,30.751687],[115.851262,30.756829],[115.865429,30.864231],[115.976298,30.931488],[116.071769,30.956633],[116.058834,31.012545],[115.938726,31.047409],[115.869125,31.147828],[115.763799,31.118123],[115.700973,31.201068],[115.646155,31.209768],[115.559307,31.160117],[115.516191,31.263485],[115.457677,31.281384],[115.442279,31.346303],[115.372062,31.349368],[115.373909,31.405559],[115.371446,31.495905],[115.496481,31.674297],[115.660937,31.760822],[115.767495,31.787272],[115.816154,31.762348],[115.909777,31.791849],[115.893146,31.833033],[115.931334,31.994541],[115.941805,32.166402],[115.912856,32.227666],[115.899306,32.391005],[115.845719,32.501583],[115.789052,32.468777],[115.706517,32.494014],[115.667712,32.409696],[115.567314,32.421819],[115.509416,32.466758],[115.510648,32.467768],[115.510648,32.468272],[115.510648,32.468777],[115.5088,32.468777]]],[[[116.717273,29.690813],[116.694483,29.672099],[116.694483,29.672099],[116.677237,29.66898],[116.684012,29.72823],[116.698795,29.707964],[116.706186,29.69809],[116.709882,29.69757],[116.710498,29.69705],[116.709882,29.69757],[116.717273,29.690813]]],[[[118.873061,31.53569],[118.876756,31.532631],[118.870597,31.526001],[118.866285,31.527021],[118.873061,31.53569]]],[[[115.510648,32.468777],[115.510648,32.468272],[115.510648,32.467768],[115.509416,32.466758],[115.5088,32.468777],[115.510648,32.468777]]]]}},{type:"Feature",properties:{adcode:35e4,name:"福建省",center:[119.306239,26.075302],centroid:[118.005928,26.070282],childrenNum:9,level:"province",subFeatureIndex:12,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[120.461568,27.14259],[120.393199,27.081343],[120.287257,27.094128],[120.29588,27.035519],[120.231823,26.907006],[120.117258,26.916609],[120.047041,26.824809],[120.1382,26.79704],[120.165917,26.73133],[120.110483,26.692848],[120.1382,26.637775],[119.967585,26.597657],[119.896136,26.516306],[119.827767,26.524872],[119.851788,26.595516],[119.949107,26.624404],[120.052584,26.786892],[119.942947,26.784756],[119.86965,26.642588],[119.83023,26.69071],[119.711354,26.686433],[119.665159,26.725986],[119.577695,26.622264],[119.788346,26.58321],[119.876426,26.359867],[119.962657,26.373269],[119.8986,26.308388],[119.841317,26.322333],[119.668854,26.256887],[119.604181,26.168853],[119.668854,26.025924],[119.723673,26.011406],[119.688564,25.897892],[119.632514,25.884436],[119.635594,25.746011],[119.601101,25.683479],[119.472986,25.662448],[119.586934,25.592317],[119.634362,25.475161],[119.716898,25.550758],[119.716898,25.551838],[119.683637,25.592856],[119.785883,25.667841],[119.790194,25.614439],[119.883817,25.54644],[119.812368,25.523225],[119.864107,25.479482],[119.764325,25.433562],[119.773564,25.395732],[119.646064,25.460576],[119.649144,25.34275],[119.549362,25.367082],[119.48592,25.364919],[119.490232,25.447069],[119.438493,25.412487],[119.452044,25.490824],[119.36458,25.521065],[119.354725,25.427077],[119.288204,25.410865],[119.256175,25.488664],[119.14469,25.388165],[119.299291,25.32869],[119.380595,25.250247],[119.293131,25.23347],[119.26911,25.15984],[119.131755,25.223187],[119.165632,25.145217],[119.119436,25.012447],[119.107118,25.075327],[119.035669,25.125717],[119.081248,25.218856],[118.989473,25.202075],[118.996864,25.266481],[118.911249,25.241589],[118.981466,25.19612],[118.975923,25.118133],[118.868133,25.082372],[118.928495,25.025459],[119.02335,25.04877],[118.989473,24.973944],[119.032589,24.962011],[119.032589,24.961468],[118.918024,24.924034],[118.96114,24.871933],[118.86259,24.886589],[118.650707,24.808949],[118.786213,24.776358],[118.703677,24.665485],[118.675344,24.57628],[118.558316,24.512602],[118.557084,24.573016],[118.444367,24.614907],[118.355056,24.534376],[118.242955,24.512602],[118.134549,24.575736],[118.12531,24.571927],[118.048934,24.418385],[118.088354,24.409123],[118.158571,24.270111],[118.001507,24.176805],[117.762522,23.88718],[117.671979,23.877879],[117.612849,23.71364],[117.500132,23.703232],[117.463791,23.58539],[117.387415,23.555228],[117.192778,23.561809],[117.192778,23.629799],[117.053576,23.696657],[117.012308,23.855446],[116.980279,23.881709],[116.981511,23.999282],[116.939627,24.033713],[116.9347,24.127123],[116.998757,24.178988],[116.933468,24.21992],[116.903903,24.369888],[116.860787,24.462507],[116.789338,24.50988],[116.761005,24.58281],[116.815207,24.655154],[116.778867,24.680165],[116.597165,24.65461],[116.525716,24.604572],[116.486912,24.71876],[116.44626,24.714412],[116.376659,24.820353],[116.245464,24.793197],[116.18079,24.87519],[116.068073,24.849675],[116.014486,24.905584],[115.89253,24.937056],[115.873436,25.020038],[115.928255,25.050396],[115.880212,25.092126],[115.855574,25.209654],[115.929487,25.234553],[116.008327,25.319496],[116.005247,25.490284],[116.063145,25.563173],[116.067457,25.703967],[116.18079,25.774571],[116.131515,25.82413],[116.176478,25.893048],[116.258398,25.902736],[116.36434,25.960312],[116.383434,26.029687],[116.489375,26.113529],[116.471513,26.175296],[116.396985,26.166168],[116.412999,26.298197],[116.519557,26.410251],[116.601476,26.372733],[116.610716,26.477216],[116.539267,26.559129],[116.566368,26.650075],[116.516477,26.69071],[116.557745,26.774073],[116.548506,26.839758],[116.679085,26.978479],[116.910062,27.034453],[117.05296,27.100519],[117.043721,27.139928],[117.171836,27.290509],[117.100387,27.338886],[117.133032,27.4223],[117.084989,27.564011],[117.01662,27.563481],[117.040641,27.670043],[117.096692,27.626582],[117.118865,27.694416],[117.204481,27.683819],[117.296872,27.764854],[117.27901,27.870161],[117.341836,27.855879],[117.52169,27.982236],[117.608537,27.863814],[117.740348,27.800321],[117.78716,27.896076],[117.856145,27.945772],[117.999043,27.991218],[118.096977,27.96744],[118.155491,28.061992],[118.356288,28.091555],[118.37415,28.188106],[118.314404,28.22238],[118.433896,28.288786],[118.444367,28.25348],[118.587881,28.28299],[118.674728,28.271398],[118.700598,28.310912],[118.802228,28.240303],[118.771431,28.188634],[118.802228,28.117416],[118.719076,28.063576],[118.730163,27.970611],[118.818242,27.916697],[118.913713,27.61651],[118.869365,27.54014],[118.903858,27.462125],[118.983314,27.498751],[119.194581,27.418582],[119.267878,27.421237],[119.376899,27.534835],[119.474833,27.539079],[119.501319,27.649905],[119.644217,27.663684],[119.630666,27.582574],[119.70889,27.514141],[119.685485,27.438762],[119.770484,27.305928],[119.843165,27.300611],[120.007005,27.376084],[120.052584,27.338886],[120.13512,27.420175],[120.26262,27.432921],[120.34146,27.39946],[120.430155,27.258601],[120.401206,27.211253],[120.461568,27.14259]]],[[[118.412338,24.514235],[118.477012,24.437452],[118.335962,24.385148],[118.316252,24.487557],[118.374766,24.458695],[118.412338,24.514235]]],[[[119.532116,25.203158],[119.549362,25.162007],[119.444036,25.202075],[119.473601,25.259988],[119.532116,25.203158]]],[[[118.079115,24.444533],[118.093281,24.540907],[118.142557,24.561588],[118.20723,24.487012],[118.143173,24.421109],[118.079115,24.444533]]],[[[119.737224,26.646332],[119.668238,26.628683],[119.673782,26.681087],[119.737224,26.646332]]]]}},{type:"Feature",properties:{adcode:36e4,name:"江西省",center:[115.892151,28.676493],centroid:[115.732937,27.636129],childrenNum:11,level:"province",subFeatureIndex:13,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[113.94185,29.047374],[113.952321,29.092871],[114.061959,29.204176],[114.252284,29.234985],[114.259059,29.344049],[114.519602,29.325271],[114.660652,29.393585],[114.759818,29.363345],[114.931049,29.422252],[114.860216,29.475917],[114.940904,29.494147],[115.00065,29.572235],[115.154019,29.51029],[115.142316,29.651822],[115.359127,29.646623],[115.471844,29.742777],[115.511264,29.839877],[115.667712,29.850257],[115.837096,29.748491],[115.965827,29.724593],[116.13521,29.819634],[116.207891,29.82742],[116.26271,29.782251],[116.473361,29.89747],[116.552201,29.909918],[116.586078,30.046226],[116.666766,30.076779],[116.747454,30.057101],[116.83307,29.957621],[116.900207,29.949326],[116.882961,29.89332],[116.789954,29.795233],[116.684012,29.72823],[116.677237,29.66898],[116.651983,29.637262],[116.780715,29.570153],[117.112706,29.712121],[117.136728,29.7755],[117.073286,29.832092],[117.17738,29.921846],[117.246365,29.915104],[117.29256,29.822749],[117.384335,29.84351],[117.455168,29.749011],[117.453936,29.688214],[117.532161,29.651822],[117.545711,29.594089],[117.647957,29.614897],[117.707703,29.548815],[117.807486,29.573796],[117.872775,29.547774],[118.008282,29.578479],[118.134549,29.508728],[118.136397,29.419125],[118.193064,29.395149],[118.20723,29.346135],[118.136397,29.284052],[118.077883,29.290836],[118.027992,29.168132],[118.037847,29.097054],[118.111144,28.997671],[118.111144,28.997671],[118.270056,28.918619],[118.306396,28.823782],[118.379077,28.785509],[118.379077,28.785509],[118.431432,28.679528],[118.423425,28.587626],[118.423425,28.587626],[118.421577,28.541908],[118.421577,28.540331],[118.425273,28.537177],[118.426505,28.532447],[118.425273,28.537177],[118.426505,28.532447],[118.472084,28.482497],[118.432048,28.402003],[118.486867,28.328821],[118.433896,28.288786],[118.314404,28.22238],[118.37415,28.188106],[118.356288,28.091555],[118.155491,28.061992],[118.096977,27.96744],[117.999043,27.991218],[117.856145,27.945772],[117.78716,27.896076],[117.740348,27.800321],[117.608537,27.863814],[117.52169,27.982236],[117.341836,27.855879],[117.27901,27.870161],[117.296872,27.764854],[117.204481,27.683819],[117.118865,27.694416],[117.096692,27.626582],[117.040641,27.670043],[117.01662,27.563481],[117.084989,27.564011],[117.133032,27.4223],[117.100387,27.338886],[117.171836,27.290509],[117.043721,27.139928],[117.05296,27.100519],[116.910062,27.034453],[116.679085,26.978479],[116.548506,26.839758],[116.557745,26.774073],[116.516477,26.69071],[116.566368,26.650075],[116.539267,26.559129],[116.610716,26.477216],[116.601476,26.372733],[116.519557,26.410251],[116.412999,26.298197],[116.396985,26.166168],[116.471513,26.175296],[116.489375,26.113529],[116.383434,26.029687],[116.36434,25.960312],[116.258398,25.902736],[116.176478,25.893048],[116.131515,25.82413],[116.18079,25.774571],[116.067457,25.703967],[116.063145,25.563173],[116.005247,25.490284],[116.008327,25.319496],[115.929487,25.234553],[115.855574,25.209654],[115.880212,25.092126],[115.928255,25.050396],[115.873436,25.020038],[115.89253,24.937056],[115.907313,24.880075],[115.822313,24.90884],[115.756408,24.749192],[115.845103,24.563221],[115.688038,24.545261],[115.67264,24.604028],[115.573474,24.617083],[115.556227,24.682883],[115.412714,24.792654],[115.358511,24.735064],[115.308004,24.758429],[115.095505,24.674184],[115.056701,24.703541],[114.909491,24.661679],[114.868839,24.562132],[114.729637,24.608924],[114.704999,24.526211],[114.664963,24.583898],[114.589819,24.537642],[114.534384,24.558867],[114.428443,24.486468],[114.391486,24.562677],[114.308334,24.574104],[114.258443,24.641558],[114.169132,24.689407],[114.27261,24.700279],[114.33482,24.747562],[114.403189,24.877361],[114.395798,24.951161],[114.506051,24.999975],[114.561485,25.077495],[114.640326,25.073702],[114.735796,25.121925],[114.679746,25.194495],[114.743188,25.274597],[114.63663,25.324364],[114.535616,25.41681],[114.381015,25.31571],[114.31511,25.338424],[114.262755,25.29191],[114.13156,25.30922],[114.039785,25.250789],[114.051488,25.348699],[113.94493,25.441667],[113.983118,25.599332],[113.913517,25.701272],[113.971416,25.835979],[114.028082,25.893586],[114.007756,26.007104],[114.044096,26.076452],[114.237501,26.152204],[114.181451,26.214489],[114.088444,26.168316],[113.944314,26.16402],[114.029314,26.266545],[114.030546,26.376485],[114.085364,26.4065],[114.073046,26.480965],[114.106306,26.576254],[113.915365,26.613706],[113.860546,26.663978],[113.834677,26.803983],[113.927068,26.949149],[113.821126,27.037651],[113.779242,27.137265],[113.848844,27.225087],[113.872865,27.385116],[113.616635,27.345264],[113.632033,27.405303],[113.583374,27.524754],[113.607395,27.625522],[113.763228,27.799262],[113.729967,27.887086],[113.752141,27.933614],[113.864242,28.004954],[113.914133,27.991218],[114.047176,28.05724],[113.992357,28.161207],[114.107538,28.182833],[114.25598,28.323554],[114.252284,28.395687],[114.172212,28.432524],[114.218407,28.484601],[114.08598,28.558201],[114.157429,28.761384],[114.152502,28.83479],[114.076741,28.834266],[114.008988,28.955273],[113.966488,28.945326],[113.94185,29.047374]]]]}},{type:"Feature",properties:{adcode:37e4,name:"山东省",center:[117.000923,36.675807],centroid:[118.186283,36.374485],childrenNum:17,level:"province",subFeatureIndex:14,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[121.362071,37.634292],[121.4791,37.474914],[121.565331,37.440242],[121.635548,37.49438],[121.66573,37.47349],[121.923808,37.473015],[122.08888,37.554171],[122.166488,37.439292],[122.234857,37.469216],[122.284133,37.426464],[122.41656,37.414585],[122.487393,37.434541],[122.553914,37.406981],[122.670942,37.429315],[122.573624,37.296159],[122.629059,37.194708],[122.581015,37.147508],[122.505871,37.149892],[122.467067,37.03726],[122.575472,37.054452],[122.532356,36.901497],[122.344495,36.828257],[122.174495,36.842623],[122.141235,36.93833],[122.051923,36.904846],[122.008808,36.962238],[121.767975,36.874698],[121.762432,36.846454],[121.627541,36.795683],[121.647867,36.723301],[121.492035,36.789933],[121.454462,36.75255],[121.209318,36.671489],[121.028848,36.573046],[120.847146,36.618682],[120.983269,36.546133],[120.890878,36.373375],[120.828668,36.466779],[120.759683,36.462448],[120.694393,36.390234],[120.7449,36.330969],[120.66298,36.331933],[120.712255,36.126809],[120.478199,36.091522],[120.343308,36.04219],[120.290337,36.061539],[120.362402,36.19637],[120.181316,36.204095],[120.108635,36.127292],[120.241062,36.047995],[120.213345,35.998152],[120.292801,36.017512],[120.262004,35.965712],[120.062439,35.870739],[120.011317,35.713006],[119.926317,35.759631],[119.923237,35.635238],[119.718129,35.615785],[119.665775,35.57005],[119.543819,35.347815],[119.411392,35.231581],[119.373819,35.078464],[119.306066,35.076506],[119.286972,35.11518],[119.137915,35.09609],[119.114509,35.054958],[118.928495,35.051039],[118.865053,35.029974],[118.860742,34.94419],[118.772047,34.794464],[118.719076,34.745315],[118.783749,34.723188],[118.690127,34.678424],[118.601431,34.714336],[118.460997,34.65628],[118.424657,34.595228],[118.440671,34.527724],[118.404947,34.427598],[118.290382,34.424637],[118.179513,34.379218],[118.177665,34.453257],[118.132702,34.483348],[118.185056,34.543989],[118.079115,34.569612],[118.084042,34.655788],[117.951615,34.678424],[117.902956,34.644467],[117.793935,34.65185],[117.801942,34.51885],[117.684298,34.547439],[117.592523,34.462631],[117.465023,34.484827],[117.402813,34.569612],[117.322125,34.574046],[117.322125,34.574046],[117.32151,34.566656],[117.32151,34.566656],[117.322125,34.566656],[117.322125,34.566656],[117.301184,34.557294],[117.301184,34.557294],[117.242669,34.445856],[117.175532,34.47003],[117.137344,34.633144],[117.07575,34.637575],[117.088069,34.702039],[117.000605,34.793482],[116.966728,34.875497],[116.821983,34.929475],[116.677853,34.939285],[116.445028,34.89562],[116.408071,34.85095],[116.374195,34.640036],[116.281188,34.60754],[116.240536,34.552367],[116.196804,34.576017],[116.134594,34.559758],[116.101334,34.605571],[115.83032,34.562714],[115.697278,34.594243],[115.667096,34.557294],[115.515575,34.582421],[115.461373,34.637083],[115.42688,34.805273],[115.317243,34.859297],[115.256265,34.845549],[115.251953,34.906416],[115.189128,34.914757],[115.12815,35.004493],[115.028983,34.97165],[114.923658,34.968709],[114.824492,35.012335],[114.883006,35.098537],[114.841738,35.151389],[114.932281,35.197362],[114.929817,35.248196],[115.02036,35.364406],[115.093657,35.41611],[115.237171,35.422937],[115.357895,35.498475],[115.383148,35.569076],[115.48601,35.710091],[115.693582,35.75429],[115.773654,35.854252],[115.875284,35.859102],[115.911624,35.960385],[116.048979,35.970071],[116.099486,36.111826],[115.989849,36.045576],[115.646155,35.920663],[115.496481,35.885283],[115.498329,35.897401],[115.503257,35.91194],[115.503257,35.91194],[115.487242,35.903702],[115.473692,35.896917],[115.473692,35.896917],[115.467532,35.889646],[115.467532,35.889646],[115.464452,35.882859],[115.464452,35.88092],[115.464452,35.882859],[115.463837,35.882859],[115.464452,35.88092],[115.463837,35.88092],[115.463837,35.882859],[115.463837,35.88092],[115.460141,35.86783],[115.363438,35.78002],[115.335105,35.796522],[115.362822,35.972008],[115.447822,36.012672],[115.483547,36.149036],[115.466916,36.259115],[115.466916,36.259115],[115.366518,36.308793],[115.308004,36.461967],[115.308004,36.461967],[115.283366,36.486505],[115.365902,36.622043],[115.479851,36.76022],[115.683727,36.808139],[115.71206,36.883313],[115.79706,36.968931],[115.776734,36.992829],[115.868509,37.076414],[115.909777,37.206622],[115.969523,37.239497],[115.984921,37.326616],[116.051443,37.367998],[116.169087,37.384164],[116.236224,37.361816],[116.2855,37.404604],[116.226369,37.428365],[116.240536,37.489633],[116.240536,37.489633],[116.27626,37.466841],[116.291659,37.557966],[116.337238,37.580255],[116.379738,37.521909],[116.38097,37.522858],[116.379738,37.521909],[116.38097,37.522858],[116.433941,37.47349],[116.724664,37.744139],[116.788106,37.843429],[117.023395,37.832561],[117.093612,37.849571],[117.267923,37.838704],[117.34122,37.863271],[117.438538,37.853823],[117.513067,37.94353],[117.5839,38.070819],[117.70216,38.075529],[117.771761,38.136734],[117.808718,38.228445],[117.895565,38.30173],[117.997811,38.211992],[118.045238,38.207761],[118.143788,38.297035],[118.07234,38.170139],[118.331034,38.124968],[118.504729,38.114141],[118.552156,38.055744],[118.607591,38.129204],[118.726467,38.154144],[118.853967,38.155085],[118.974075,38.094367],[119.004872,37.992114],[119.110813,37.921349],[119.12806,37.814601],[119.217371,37.810347],[119.259871,37.702492],[119.080016,37.696337],[118.99748,37.632396],[118.939582,37.527129],[118.983314,37.349926],[119.054147,37.254738],[119.12806,37.254738],[119.298675,37.197567],[119.329472,37.115548],[119.489616,37.13463],[119.566608,37.100755],[119.744615,37.135107],[119.89244,37.263786],[119.843781,37.376557],[120.144359,37.482036],[120.246605,37.556543],[120.215192,37.621023],[120.272475,37.636661],[120.227511,37.693497],[120.367945,37.697758],[120.466496,37.757858],[120.595227,37.767318],[120.733197,37.833506],[120.938305,37.821219],[121.037471,37.718585],[121.136022,37.723318],[121.153884,37.613914],[121.217326,37.582626],[121.354064,37.595901],[121.362071,37.634292]]],[[[115.498329,35.897401],[115.496481,35.885283],[115.460141,35.86783],[115.463837,35.88092],[115.463837,35.882859],[115.463837,35.88092],[115.464452,35.88092],[115.463837,35.882859],[115.464452,35.882859],[115.464452,35.88092],[115.464452,35.882859],[115.467532,35.889646],[115.467532,35.889646],[115.473692,35.896917],[115.473692,35.896917],[115.487242,35.903702],[115.498329,35.897401]]],[[[121.487723,37.578833],[121.487723,37.577884],[121.487107,37.577884],[121.485875,37.578359],[121.485875,37.578833],[121.487723,37.578833]]],[[[121.487723,37.578833],[121.488339,37.578833],[121.488339,37.578833],[121.487723,37.57741],[121.487723,37.577884],[121.487723,37.578833]]]]}},{type:"Feature",properties:{adcode:41e4,name:"河南省",center:[113.665412,34.757975],centroid:[113.619918,33.902738],childrenNum:18,level:"province",subFeatureIndex:15,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[116.196804,34.576017],[116.204196,34.508497],[116.162312,34.459178],[116.213435,34.382181],[116.26271,34.375762],[116.409303,34.273971],[116.409303,34.273971],[116.516477,34.296217],[116.565752,34.173541],[116.530643,34.107183],[116.575607,34.069028],[116.575607,34.069028],[116.648288,33.973317],[116.64336,33.896869],[116.437637,33.846694],[116.437021,33.801461],[116.316297,33.771127],[116.263326,33.729835],[116.155536,33.709929],[116.074232,33.781571],[116.05945,33.861103],[115.987385,33.900842],[116.00032,33.964881],[115.95782,34.007547],[115.877132,34.003083],[115.736082,34.076957],[115.60735,34.030359],[115.546988,33.875014],[115.629524,33.871536],[115.614126,33.775603],[115.563003,33.771624],[115.639995,33.584909],[115.421953,33.556992],[115.345576,33.503125],[115.312931,33.376307],[115.365286,33.335826],[115.301229,33.141657],[115.168186,33.088535],[115.042534,33.08653],[114.966158,33.147167],[114.902716,33.129632],[114.925506,33.016821],[114.883006,32.990227],[114.943368,32.935005],[115.139237,32.897837],[115.197135,32.85613],[115.183584,32.665937],[115.20083,32.591864],[115.304924,32.553039],[115.409018,32.549005],[115.5088,32.468777],[115.509416,32.466758],[115.567314,32.421819],[115.667712,32.409696],[115.706517,32.494014],[115.789052,32.468777],[115.845719,32.501583],[115.899306,32.391005],[115.912856,32.227666],[115.941805,32.166402],[115.931334,31.994541],[115.893146,31.833033],[115.909777,31.791849],[115.816154,31.762348],[115.767495,31.787272],[115.660937,31.760822],[115.496481,31.674297],[115.371446,31.495905],[115.373909,31.405559],[115.301229,31.384109],[115.22054,31.426494],[115.235323,31.556597],[115.12507,31.598904],[115.088729,31.507638],[115.024056,31.528551],[114.830035,31.458654],[114.778912,31.5209],[114.696376,31.526001],[114.641558,31.582085],[114.560869,31.561185],[114.549783,31.642721],[114.586123,31.762348],[114.448769,31.728257],[114.292936,31.752173],[114.195002,31.850315],[114.135871,31.843707],[114.088444,31.781677],[113.988662,31.750138],[113.954785,31.856413],[113.838373,31.854889],[113.791561,32.036142],[113.728735,32.0833],[113.783554,32.186153],[113.749677,32.272196],[113.761996,32.268149],[113.757069,32.29243],[113.758301,32.296476],[113.752757,32.388478],[113.664062,32.422324],[113.624642,32.361191],[113.425693,32.269161],[113.211962,32.431919],[113.118956,32.375846],[113.025949,32.425354],[112.992072,32.378373],[112.860877,32.395552],[112.733993,32.363718],[112.729066,32.366245],[112.544284,32.403635],[112.451893,32.344511],[112.390915,32.371298],[112.328089,32.321761],[112.228923,32.385447],[112.014576,32.450098],[111.948671,32.517225],[111.890157,32.503097],[111.640701,32.634703],[111.577875,32.593376],[111.380159,32.828984],[111.293311,32.859145],[111.242804,32.930486],[111.273601,32.971656],[111.238493,33.040899],[111.151029,33.053438],[111.179363,33.115601],[111.056791,33.192743],[111.032769,33.209265],[110.984726,33.255308],[111.025994,33.330327],[110.996429,33.435745],[111.02661,33.474183],[111.02661,33.478675],[111.00382,33.578429],[110.877552,33.635238],[110.782698,33.795494],[110.587445,33.887929],[110.669365,33.939072],[110.590525,34.096778],[110.642264,34.16067],[110.43962,34.24331],[110.426685,34.275454],[110.503677,34.337234],[110.403279,34.43352],[110.403279,34.43352],[110.360779,34.516878],[110.379257,34.600646],[110.474728,34.617389],[110.533242,34.583406],[110.710017,34.605078],[110.749437,34.652342],[110.883712,34.642498],[110.929907,34.731548],[110.966248,34.70499],[111.118385,34.756622],[111.148566,34.80773],[111.232949,34.789551],[111.346282,34.831798],[111.570484,34.843094],[111.66965,34.988319],[111.900012,35.079933],[112.062004,35.055937],[112.078634,35.219362],[112.058924,35.279951],[112.513487,35.218384],[112.637291,35.225716],[112.628052,35.263342],[112.766022,35.203718],[112.818377,35.258457],[112.911384,35.24673],[112.992072,35.296068],[112.997,35.362455],[113.126347,35.332197],[113.189789,35.449261],[113.298194,35.427325],[113.31236,35.481424],[113.485439,35.520879],[113.578446,35.63378],[113.604316,35.797008],[113.656671,35.836792],[113.637576,35.98847],[113.694859,36.026707],[113.651743,36.172224],[113.716417,36.262492],[113.731199,36.363257],[113.819894,36.330969],[113.881488,36.354102],[113.911054,36.314578],[113.982502,36.358921],[114.055799,36.330005],[114.060727,36.276482],[114.169132,36.243675],[114.169132,36.243675],[114.345291,36.255738],[114.591666,36.130192],[114.912571,36.140339],[114.914419,36.051865],[114.996955,36.06831],[115.064092,36.178985],[115.201446,36.210371],[115.201446,36.210371],[115.312931,36.088137],[115.483547,36.149036],[115.447822,36.012672],[115.362822,35.972008],[115.335105,35.796522],[115.363438,35.78002],[115.460141,35.86783],[115.496481,35.885283],[115.646155,35.920663],[115.989849,36.045576],[116.099486,36.111826],[116.048979,35.970071],[115.911624,35.960385],[115.875284,35.859102],[115.773654,35.854252],[115.693582,35.75429],[115.48601,35.710091],[115.383148,35.569076],[115.357895,35.498475],[115.237171,35.422937],[115.093657,35.41611],[115.02036,35.364406],[114.929817,35.248196],[114.932281,35.197362],[114.841738,35.151389],[114.883006,35.098537],[114.824492,35.012335],[114.923658,34.968709],[115.028983,34.97165],[115.12815,35.004493],[115.189128,34.914757],[115.251953,34.906416],[115.256265,34.845549],[115.317243,34.859297],[115.42688,34.805273],[115.461373,34.637083],[115.515575,34.582421],[115.667096,34.557294],[115.697278,34.594243],[115.83032,34.562714],[116.101334,34.605571],[116.134594,34.559758],[116.196804,34.576017]]],[[[115.498329,35.897401],[115.487242,35.903702],[115.503257,35.91194],[115.503257,35.91194],[115.498329,35.897401]]],[[[113.749677,32.272196],[113.758301,32.296476],[113.757069,32.29243],[113.761996,32.268149],[113.749677,32.272196]]]]}},{type:"Feature",properties:{adcode:42e4,name:"湖北省",center:[114.298572,30.584355],centroid:[112.271042,30.98802],childrenNum:17,level:"province",subFeatureIndex:16,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[109.232378,29.119533],[109.110422,29.215143],[109.11227,29.360737],[108.919481,29.326314],[108.927488,29.435281],[108.880677,29.442576],[108.91209,29.571714],[108.844337,29.658582],[108.785822,29.633622],[108.690968,29.689773],[108.666946,29.842472],[108.602273,29.865824],[108.504338,29.707964],[108.437201,29.741218],[108.424266,29.816],[108.371295,29.841434],[108.516041,29.885539],[108.542526,29.998047],[108.513577,30.057619],[108.56778,30.157517],[108.581947,30.255763],[108.460606,30.35959],[108.402092,30.376626],[108.42673,30.492184],[108.56778,30.468464],[108.688504,30.587519],[108.743939,30.494762],[108.808612,30.491153],[108.971836,30.627686],[109.114734,30.64416],[109.09256,30.578762],[109.103647,30.565883],[109.143683,30.521052],[109.299516,30.630775],[109.36111,30.550942],[109.35495,30.487028],[109.435638,30.59576],[109.590855,30.693566],[109.780564,30.848822],[109.893897,30.899662],[110.008462,30.883746],[110.082375,30.799496],[110.172918,30.978694],[110.135961,30.986902],[110.119947,31.088409],[110.189548,31.129391],[110.140273,31.390238],[110.054042,31.410666],[109.946252,31.506108],[109.848934,31.552008],[109.719586,31.555067],[109.76455,31.602981],[109.731289,31.700263],[109.585928,31.726731],[109.638282,31.811172],[109.584696,31.900617],[109.631507,31.962059],[109.590855,32.012807],[109.621652,32.106617],[109.592703,32.219568],[109.495385,32.300522],[109.502776,32.389489],[109.575457,32.506629],[109.637051,32.540935],[109.631507,32.599929],[109.726978,32.608498],[109.816905,32.577244],[109.910528,32.592872],[110.017701,32.546987],[110.085454,32.613034],[110.153824,32.593376],[110.206179,32.633191],[110.156903,32.683061],[110.159367,32.767122],[110.10886,32.82999],[109.988752,32.886281],[109.76455,32.909391],[109.794731,33.066977],[109.688174,33.116603],[109.576073,33.110088],[109.438718,33.152177],[109.537268,33.2438],[109.619804,33.27532],[109.732521,33.231288],[109.852013,33.247803],[110.031252,33.191742],[110.164911,33.209265],[110.218497,33.163197],[110.468569,33.181226],[110.54125,33.255809],[110.59422,33.168706],[110.702626,33.097057],[110.745741,33.147167],[110.824582,33.158188],[110.984726,33.255308],[111.032769,33.209265],[111.037081,33.187235],[111.031537,33.17722],[111.056791,33.192743],[111.179363,33.115601],[111.151029,33.053438],[111.238493,33.040899],[111.273601,32.971656],[111.242804,32.930486],[111.293311,32.859145],[111.380159,32.828984],[111.577875,32.593376],[111.640701,32.634703],[111.890157,32.503097],[111.948671,32.517225],[112.014576,32.450098],[112.228923,32.385447],[112.328089,32.321761],[112.390915,32.371298],[112.451893,32.344511],[112.544284,32.403635],[112.729066,32.366245],[112.730914,32.363212],[112.732146,32.362707],[112.733993,32.363718],[112.860877,32.395552],[112.992072,32.378373],[113.025949,32.425354],[113.118956,32.375846],[113.211962,32.431919],[113.425693,32.269161],[113.624642,32.361191],[113.664062,32.422324],[113.752757,32.388478],[113.758301,32.296476],[113.749677,32.272196],[113.783554,32.186153],[113.728735,32.0833],[113.791561,32.036142],[113.838373,31.854889],[113.954785,31.856413],[113.988662,31.750138],[114.088444,31.781677],[114.135871,31.843707],[114.195002,31.850315],[114.292936,31.752173],[114.448769,31.728257],[114.586123,31.762348],[114.549783,31.642721],[114.560869,31.561185],[114.641558,31.582085],[114.696376,31.526001],[114.778912,31.5209],[114.830035,31.458654],[115.024056,31.528551],[115.088729,31.507638],[115.12507,31.598904],[115.235323,31.556597],[115.22054,31.426494],[115.301229,31.384109],[115.373909,31.405559],[115.372062,31.349368],[115.442279,31.346303],[115.457677,31.281384],[115.516191,31.263485],[115.559307,31.160117],[115.646155,31.209768],[115.700973,31.201068],[115.763799,31.118123],[115.869125,31.147828],[115.938726,31.047409],[116.058834,31.012545],[116.071769,30.956633],[115.976298,30.931488],[115.865429,30.864231],[115.851262,30.756829],[115.782893,30.751687],[115.762567,30.685848],[115.819234,30.59782],[115.876516,30.582368],[115.921479,30.416364],[115.903001,30.313631],[115.985537,30.290901],[116.065609,30.204584],[116.091479,30.036385],[116.073616,29.970061],[116.127203,29.899544],[116.13521,29.819634],[115.965827,29.724593],[115.837096,29.748491],[115.667712,29.850257],[115.511264,29.839877],[115.471844,29.742777],[115.359127,29.646623],[115.142316,29.651822],[115.154019,29.51029],[115.00065,29.572235],[114.940904,29.494147],[114.860216,29.475917],[114.931049,29.422252],[114.759818,29.363345],[114.660652,29.393585],[114.519602,29.325271],[114.259059,29.344049],[114.252284,29.234985],[114.061959,29.204176],[113.952321,29.092871],[113.94185,29.047374],[113.877793,29.035343],[113.816199,29.105419],[113.749677,29.060973],[113.66283,29.1697],[113.689931,29.230808],[113.606779,29.253779],[113.686236,29.392021],[113.753373,29.43997],[113.630801,29.523307],[113.736743,29.576918],[113.664678,29.683536],[113.547033,29.675219],[113.566127,29.846105],[113.37765,29.703287],[113.145441,29.449349],[113.078304,29.438407],[113.057362,29.522265],[112.950188,29.472792],[112.912,29.607095],[113.004391,29.692892],[113.020405,29.772384],[112.937869,29.783809],[112.939101,29.768229],[112.926782,29.763036],[112.861493,29.78329],[112.79374,29.736023],[112.788812,29.681457],[112.687182,29.592528],[112.439574,29.633622],[112.369973,29.542048],[112.281278,29.536842],[112.303452,29.585244],[112.111279,29.659622],[112.07617,29.740179],[111.95483,29.796791],[111.962222,29.837282],[111.862439,29.856484],[111.807005,29.904213],[111.723853,29.909399],[111.723853,29.909399],[111.709686,29.897988],[111.709686,29.897988],[111.39063,29.914585],[111.244036,30.039492],[110.929907,30.063316],[110.924364,30.111463],[110.746973,30.113015],[110.712481,30.033277],[110.650887,30.077814],[110.497518,30.05503],[110.557264,29.988201],[110.498134,29.910955],[110.60038,29.839877],[110.642264,29.777578],[110.507373,29.691853],[110.360779,29.635702],[110.219729,29.746413],[110.113788,29.789521],[110.02386,29.769788],[109.869876,29.774462],[109.775637,29.755244],[109.714043,29.673139],[109.717739,29.614897],[109.516326,29.62582],[109.458428,29.513414],[109.343863,29.369602],[109.352487,29.284574],[109.258248,29.21932],[109.274262,29.122146],[109.232378,29.119533]]],[[[113.020405,29.772384],[112.926782,29.692372],[112.926782,29.763036],[112.939101,29.768229],[112.937869,29.783809],[113.020405,29.772384]]],[[[111.032769,33.209265],[111.056791,33.192743],[111.031537,33.17722],[111.037081,33.187235],[111.032769,33.209265]]],[[[109.106111,30.57052],[109.09872,30.579277],[109.100567,30.580823],[109.106727,30.572066],[109.106111,30.57052]]],[[[112.732146,32.362707],[112.730914,32.363212],[112.729066,32.366245],[112.733993,32.363718],[112.732146,32.362707]]]]}},{type:"Feature",properties:{adcode:43e4,name:"湖南省",center:[112.982279,28.19409],centroid:[111.754313,27.655081],childrenNum:14,level:"province",subFeatureIndex:17,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[109.965962,26.195699],[110.017701,26.343246],[109.932701,26.476145],[109.856325,26.465433],[109.892665,26.525408],[109.82676,26.605681],[109.946252,26.685899],[109.838463,26.72759],[109.821216,26.781017],[109.652449,26.76232],[109.660456,26.709419],[109.590855,26.686433],[109.529261,26.740414],[109.548971,26.737208],[109.548971,26.737208],[109.528029,26.744689],[109.52187,26.748964],[109.504624,26.805051],[109.500928,26.828546],[109.486761,26.895267],[109.555131,26.947015],[109.520022,27.058433],[109.454733,27.069622],[109.472595,27.135136],[109.415928,27.15377],[109.267487,27.128746],[109.164625,27.065893],[109.07901,27.115965],[108.87575,26.999273],[108.791366,27.084539],[108.878829,27.106378],[108.907162,27.2054],[109.040821,27.276151],[109.142451,27.418051],[109.202197,27.449913],[109.300132,27.423893],[109.303211,27.475396],[109.461508,27.567724],[109.470747,27.68011],[109.332777,27.782853],[109.345711,27.840537],[109.30198,27.956342],[109.378972,28.032948],[109.298284,28.036117],[109.340168,28.190216],[109.388211,28.268236],[109.27303,28.310386],[109.274262,28.494592],[109.321074,28.581322],[109.304443,28.623871],[109.201581,28.598133],[109.2989,28.747221],[109.241002,28.776594],[109.235458,28.882476],[109.319842,29.042667],[109.232378,29.119533],[109.274262,29.122146],[109.258248,29.21932],[109.352487,29.284574],[109.343863,29.369602],[109.458428,29.513414],[109.516326,29.62582],[109.717739,29.614897],[109.714043,29.673139],[109.775637,29.755244],[109.869876,29.774462],[110.02386,29.769788],[110.113788,29.789521],[110.219729,29.746413],[110.360779,29.635702],[110.507373,29.691853],[110.642264,29.777578],[110.60038,29.839877],[110.498134,29.910955],[110.557264,29.988201],[110.497518,30.05503],[110.650887,30.077814],[110.712481,30.033277],[110.746973,30.113015],[110.924364,30.111463],[110.929907,30.063316],[111.244036,30.039492],[111.39063,29.914585],[111.709686,29.897988],[111.709686,29.897988],[111.723853,29.909399],[111.723853,29.909399],[111.807005,29.904213],[111.862439,29.856484],[111.962222,29.837282],[111.95483,29.796791],[112.07617,29.740179],[112.111279,29.659622],[112.303452,29.585244],[112.281278,29.536842],[112.369973,29.542048],[112.439574,29.633622],[112.687182,29.592528],[112.788812,29.681457],[112.79374,29.736023],[112.861493,29.78329],[112.926782,29.763036],[112.926782,29.692372],[113.020405,29.772384],[113.004391,29.692892],[112.912,29.607095],[112.950188,29.472792],[113.057362,29.522265],[113.078304,29.438407],[113.145441,29.449349],[113.37765,29.703287],[113.566127,29.846105],[113.547033,29.675219],[113.664678,29.683536],[113.736743,29.576918],[113.630801,29.523307],[113.753373,29.43997],[113.686236,29.392021],[113.606779,29.253779],[113.689931,29.230808],[113.66283,29.1697],[113.749677,29.060973],[113.816199,29.105419],[113.877793,29.035343],[113.94185,29.047374],[113.966488,28.945326],[114.008988,28.955273],[114.076741,28.834266],[114.152502,28.83479],[114.157429,28.761384],[114.08598,28.558201],[114.218407,28.484601],[114.172212,28.432524],[114.252284,28.395687],[114.25598,28.323554],[114.107538,28.182833],[113.992357,28.161207],[114.047176,28.05724],[113.914133,27.991218],[113.864242,28.004954],[113.752141,27.933614],[113.729967,27.887086],[113.763228,27.799262],[113.607395,27.625522],[113.583374,27.524754],[113.632033,27.405303],[113.616635,27.345264],[113.872865,27.385116],[113.848844,27.225087],[113.779242,27.137265],[113.821126,27.037651],[113.927068,26.949149],[113.834677,26.803983],[113.860546,26.663978],[113.915365,26.613706],[114.106306,26.576254],[114.073046,26.480965],[114.085364,26.4065],[114.030546,26.376485],[114.029314,26.266545],[113.944314,26.16402],[114.088444,26.168316],[114.181451,26.214489],[114.237501,26.152204],[114.044096,26.076452],[114.007756,26.007104],[114.028082,25.893586],[113.971416,25.835979],[113.913517,25.701272],[113.983118,25.599332],[113.94493,25.441667],[113.887032,25.436804],[113.822974,25.331935],[113.753373,25.362756],[113.611707,25.326527],[113.611707,25.326527],[113.535946,25.368704],[113.449715,25.359512],[113.373338,25.402758],[113.311129,25.490284],[113.248919,25.514045],[113.11834,25.445449],[113.080151,25.3833],[112.900297,25.311383],[112.867036,25.249706],[112.992688,25.247],[113.034572,25.198285],[112.96805,25.141426],[113.018557,25.082914],[112.979137,25.034133],[113.011782,24.946279],[112.871348,24.895816],[112.780805,24.896901],[112.712436,25.083456],[112.660081,25.132759],[112.414937,25.142509],[112.369357,25.189081],[112.3053,25.157132],[112.187039,25.182584],[112.155626,25.026544],[112.119902,24.963638],[112.175337,24.92729],[112.171025,24.86379],[112.097112,24.826327],[112.024431,24.739955],[111.951135,24.769839],[111.68936,24.778531],[111.570484,24.644821],[111.431282,24.687776],[111.479325,24.797543],[111.470086,24.928917],[111.43313,24.97991],[111.435593,25.09321],[111.321645,25.10513],[111.274833,25.151175],[111.200921,25.074786],[111.101754,25.035218],[111.100522,24.945736],[110.991501,24.924034],[110.951465,25.043891],[110.998892,25.161465],[111.112841,25.217232],[111.103602,25.284877],[111.301319,25.450851],[111.343202,25.602569],[111.30871,25.72014],[111.442369,25.771877],[111.43313,25.84621],[111.49226,25.868824],[111.346282,25.906504],[111.252043,25.864517],[111.189834,25.953318],[111.267442,26.058716],[111.279761,26.271911],[111.204616,26.307852],[111.092515,26.306779],[110.94469,26.373805],[110.939146,26.28425],[110.76114,26.248838],[110.612083,26.333594],[110.555416,26.286396],[110.516612,26.186035],[110.373098,26.08935],[110.325671,25.975373],[110.257301,25.961388],[110.201251,26.066241],[110.165527,26.023773],[110.065128,26.051191],[110.099005,26.16939],[109.965962,26.195699]]],[[[109.48245,26.029687],[109.449805,26.101709],[109.486761,26.148445],[109.486761,26.148445],[109.439334,26.238641],[109.466435,26.314288],[109.340784,26.264399],[109.285965,26.296052],[109.326001,26.427398],[109.407305,26.532902],[109.35495,26.693383],[109.454117,26.761252],[109.52187,26.748964],[109.528029,26.744689],[109.529261,26.740414],[109.590855,26.686433],[109.660456,26.709419],[109.652449,26.76232],[109.821216,26.781017],[109.838463,26.72759],[109.946252,26.685899],[109.82676,26.605681],[109.892665,26.525408],[109.856325,26.465433],[109.932701,26.476145],[110.017701,26.343246],[109.965962,26.195699],[109.906832,26.143611],[109.864332,26.027537],[109.783028,25.988282],[109.806434,25.874746],[109.685094,25.880129],[109.730057,25.989895],[109.635203,26.047428],[109.513247,25.997962],[109.48245,26.029687]]]]}},{type:"Feature",properties:{adcode:44e4,name:"广东省",center:[113.280637,23.125178],centroid:[113.429877,23.334664],childrenNum:22,level:"province",subFeatureIndex:18,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[109.785492,21.457116],[109.742992,21.61629],[109.898209,21.649661],[109.940709,21.734723],[109.94502,21.844172],[110.051578,21.856945],[110.119947,21.901918],[110.200019,21.898587],[110.200019,21.898587],[110.388497,21.89026],[110.355236,22.061709],[110.355236,22.061709],[110.350924,22.072799],[110.350924,22.072799],[110.414366,22.20858],[110.488895,22.144863],[110.560344,22.196393],[110.629329,22.149296],[110.646575,22.222982],[110.725415,22.295522],[110.785777,22.294415],[110.711249,22.369684],[110.778386,22.585304],[111.055559,22.648268],[111.056791,22.72776],[111.202152,22.740452],[111.358601,22.889362],[111.363528,22.968713],[111.433746,23.036456],[111.377695,23.082149],[111.388782,23.210337],[111.353673,23.28895],[111.399869,23.469638],[111.479941,23.532738],[111.487332,23.62651],[111.615448,23.639117],[111.667187,23.718023],[111.621607,23.725692],[111.664723,23.83465],[111.8107,23.806735],[111.812548,23.887727],[111.940664,23.987803],[111.878454,24.110195],[111.877838,24.229196],[111.939432,24.230287],[112.029975,24.297925],[112.057692,24.387327],[111.985011,24.467953],[112.007185,24.534376],[111.937584,24.595323],[111.961606,24.720934],[112.024431,24.739955],[112.097112,24.826327],[112.171025,24.86379],[112.175337,24.92729],[112.119902,24.963638],[112.155626,25.026544],[112.187039,25.182584],[112.3053,25.157132],[112.369357,25.189081],[112.414937,25.142509],[112.660081,25.132759],[112.712436,25.083456],[112.780805,24.896901],[112.871348,24.895816],[113.011782,24.946279],[112.979137,25.034133],[113.018557,25.082914],[112.96805,25.141426],[113.034572,25.198285],[112.992688,25.247],[112.867036,25.249706],[112.900297,25.311383],[113.080151,25.3833],[113.11834,25.445449],[113.248919,25.514045],[113.311129,25.490284],[113.373338,25.402758],[113.449715,25.359512],[113.535946,25.368704],[113.611707,25.326527],[113.611707,25.326527],[113.753373,25.362756],[113.822974,25.331935],[113.887032,25.436804],[113.94493,25.441667],[114.051488,25.348699],[114.039785,25.250789],[114.13156,25.30922],[114.262755,25.29191],[114.31511,25.338424],[114.381015,25.31571],[114.535616,25.41681],[114.63663,25.324364],[114.743188,25.274597],[114.679746,25.194495],[114.735796,25.121925],[114.640326,25.073702],[114.561485,25.077495],[114.506051,24.999975],[114.395798,24.951161],[114.403189,24.877361],[114.33482,24.747562],[114.27261,24.700279],[114.169132,24.689407],[114.258443,24.641558],[114.308334,24.574104],[114.391486,24.562677],[114.428443,24.486468],[114.534384,24.558867],[114.589819,24.537642],[114.664963,24.583898],[114.704999,24.526211],[114.729637,24.608924],[114.868839,24.562132],[114.909491,24.661679],[115.056701,24.703541],[115.095505,24.674184],[115.308004,24.758429],[115.358511,24.735064],[115.412714,24.792654],[115.556227,24.682883],[115.573474,24.617083],[115.67264,24.604028],[115.688038,24.545261],[115.845103,24.563221],[115.756408,24.749192],[115.822313,24.90884],[115.907313,24.880075],[115.89253,24.937056],[116.014486,24.905584],[116.068073,24.849675],[116.18079,24.87519],[116.245464,24.793197],[116.376659,24.820353],[116.44626,24.714412],[116.486912,24.71876],[116.525716,24.604572],[116.597165,24.65461],[116.778867,24.680165],[116.815207,24.655154],[116.761005,24.58281],[116.789338,24.50988],[116.860787,24.462507],[116.903903,24.369888],[116.933468,24.21992],[116.998757,24.178988],[116.9347,24.127123],[116.939627,24.033713],[116.981511,23.999282],[116.980279,23.881709],[117.012308,23.855446],[117.053576,23.696657],[117.192778,23.629799],[117.192778,23.561809],[117.054192,23.542064],[117.01046,23.502564],[116.921765,23.53219],[116.874953,23.447683],[116.874338,23.447683],[116.871258,23.416391],[116.871874,23.415842],[116.782563,23.313679],[116.806584,23.200989],[116.74499,23.215286],[116.550969,23.109668],[116.576839,23.014429],[116.50539,22.930696],[116.382818,22.919124],[116.317528,22.952736],[116.226985,22.914715],[116.106877,22.817685],[116.073616,22.8425],[115.883291,22.785142],[115.796444,22.739349],[115.788437,22.809964],[115.654162,22.865657],[115.542677,22.76142],[115.606119,22.754799],[115.57409,22.650477],[115.471844,22.697956],[115.381301,22.684156],[115.338185,22.776867],[115.230396,22.776867],[115.236555,22.825406],[115.054853,22.777419],[115.04007,22.712307],[114.87623,22.589724],[114.747499,22.581437],[114.728405,22.651029],[114.749963,22.764179],[114.709927,22.7879],[114.512826,22.655446],[114.603369,22.63888],[114.559022,22.583094],[114.616304,22.54276],[114.611377,22.481959],[114.485109,22.446572],[114.467863,22.533365],[114.41058,22.599667],[114.232574,22.539997],[114.185762,22.551601],[114.185762,22.551601],[114.045944,22.502413],[114.044096,22.502413],[114.031778,22.504071],[113.959097,22.505177],[113.891959,22.442701],[113.733663,22.73659],[113.678228,22.726104],[113.740438,22.53447],[113.631417,22.475877],[113.669605,22.416154],[113.558736,22.213012],[113.553809,22.107727],[113.442324,22.009575],[113.330223,21.961861],[113.246455,21.880266],[113.091854,22.065591],[113.032724,22.072799],[113.037652,21.935223],[112.944645,21.84195],[112.795587,21.923567],[112.651458,21.761954],[112.523342,21.760842],[112.439574,21.803624],[112.415553,21.734723],[112.24001,21.701371],[112.192583,21.78918],[112.036134,21.761398],[111.951135,21.671904],[112.026895,21.633533],[111.811316,21.558985],[111.810084,21.604609],[111.693672,21.590144],[111.677658,21.52949],[111.382623,21.495534],[111.257587,21.413675],[111.28284,21.485513],[111.061102,21.44932],[110.929291,21.375792],[110.799328,21.374678],[110.626249,21.215797],[110.422373,21.190695],[110.388497,21.125968],[110.296722,21.093594],[110.180925,20.981905],[110.201251,20.867337],[110.390344,20.820367],[110.392192,20.682727],[110.466105,20.680488],[110.548025,20.477715],[110.545561,20.42726],[110.452554,20.311151],[110.349076,20.258958],[110.118099,20.219661],[110.082375,20.258958],[109.910528,20.224152],[109.916071,20.316762],[109.861252,20.376789],[109.888354,20.475473],[109.839695,20.489485],[109.793499,20.61554],[109.74484,20.62114],[109.730057,20.719667],[109.654913,20.903673],[109.674623,21.136572],[109.763934,21.226395],[109.757775,21.346816],[109.868644,21.365763],[109.894513,21.44208],[109.785492,21.457116]]],[[[117.100387,23.401566],[116.946402,23.421881],[117.129336,23.483358],[117.100387,23.401566]]],[[[112.853486,21.74028],[112.804826,21.686361],[112.817145,21.590144],[112.730914,21.613509],[112.782037,21.665788],[112.70566,21.679133],[112.831312,21.77529],[112.853486,21.74028]]],[[[112.625588,21.616847],[112.535045,21.628527],[112.663776,21.714157],[112.625588,21.616847]]],[[[110.495054,21.075171],[110.560344,21.061213],[110.535706,20.923235],[110.47288,20.983022],[110.347845,20.984698],[110.201251,20.938324],[110.211106,20.986933],[110.305961,21.088012],[110.495054,21.075171]]],[[[110.501829,21.142711],[110.431612,21.181211],[110.634256,21.21022],[110.582517,21.094711],[110.501829,21.142711]]],[[[116.769628,20.771704],[116.88604,20.77562],[116.934084,20.67657],[116.862635,20.588657],[116.749302,20.600979],[116.849084,20.62842],[116.87249,20.738134],[116.769628,20.771704]]],[[[110.598532,20.857273],[110.548641,20.908703],[110.584365,20.948941],[110.646575,20.917087],[110.598532,20.857273]]],[[[115.943037,21.097502],[116.044051,21.11034],[116.067457,21.040552],[115.989233,21.035526],[115.943037,21.097502]]]]}},{type:"Feature",properties:{adcode:45e4,name:"广西壮族自治区",center:[108.320004,22.82402],centroid:[108.794237,23.833575],childrenNum:14,level:"province",subFeatureIndex:19,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[112.024431,24.739955],[111.961606,24.720934],[111.937584,24.595323],[112.007185,24.534376],[111.985011,24.467953],[112.057692,24.387327],[112.029975,24.297925],[111.939432,24.230287],[111.877838,24.229196],[111.878454,24.110195],[111.940664,23.987803],[111.812548,23.887727],[111.8107,23.806735],[111.664723,23.83465],[111.621607,23.725692],[111.667187,23.718023],[111.615448,23.639117],[111.487332,23.62651],[111.479941,23.532738],[111.399869,23.469638],[111.353673,23.28895],[111.388782,23.210337],[111.377695,23.082149],[111.433746,23.036456],[111.363528,22.968713],[111.358601,22.889362],[111.202152,22.740452],[111.056791,22.72776],[111.055559,22.648268],[110.778386,22.585304],[110.711249,22.369684],[110.785777,22.294415],[110.725415,22.295522],[110.646575,22.222982],[110.629329,22.149296],[110.560344,22.196393],[110.488895,22.144863],[110.414366,22.20858],[110.350924,22.072799],[110.350924,22.072799],[110.355236,22.061709],[110.355236,22.061709],[110.388497,21.89026],[110.200019,21.898587],[110.200019,21.898587],[110.119947,21.901918],[110.051578,21.856945],[109.94502,21.844172],[109.940709,21.734723],[109.898209,21.649661],[109.742992,21.61629],[109.785492,21.457116],[109.704188,21.462684],[109.612413,21.55676],[109.540964,21.466025],[109.245929,21.425929],[109.138756,21.389163],[109.042669,21.464355],[109.150459,21.523924],[109.142451,21.56455],[108.937959,21.589588],[108.881293,21.627415],[108.74517,21.599046],[108.710062,21.646881],[108.591802,21.677465],[108.479085,21.546743],[108.338651,21.541177],[108.230245,21.49108],[108.235173,21.60294],[108.106441,21.508895],[108.030681,21.546186],[107.956768,21.535055],[107.860066,21.651886],[107.546553,21.58625],[107.46956,21.659671],[107.388256,21.594039],[107.310648,21.733611],[107.247206,21.703039],[107.088294,21.805291],[107.011917,21.826399],[107.05996,21.915241],[106.999598,21.947433],[106.73844,22.007911],[106.681158,21.995152],[106.717498,22.074463],[106.673151,22.182543],[106.7021,22.206918],[106.663296,22.330948],[106.562282,22.34589],[106.562282,22.462608],[106.61402,22.601876],[106.710723,22.57536],[106.768621,22.739349],[106.841302,22.799484],[106.606013,22.925737],[106.366413,22.857939],[106.286957,22.86676],[106.206885,22.978629],[106.019639,22.990747],[105.994385,22.93786],[105.893987,22.936758],[105.724604,23.062332],[105.574931,23.066186],[105.542902,23.18449],[105.531815,23.248275],[105.694423,23.363122],[105.699966,23.401566],[105.815763,23.506953],[105.89214,23.525058],[105.999929,23.447683],[106.141595,23.569487],[106.120653,23.605129],[106.157609,23.724048],[106.136667,23.795238],[106.192102,23.824798],[106.04982,24.089986],[105.933407,24.123847],[105.89214,24.040271],[105.704278,24.066497],[105.649459,24.033167],[105.628518,24.126577],[105.529967,24.129308],[105.481924,24.018958],[105.320548,24.116202],[105.260186,24.061033],[105.20044,24.105279],[105.229389,24.165888],[105.164715,24.288109],[105.188121,24.346995],[105.063085,24.429281],[105.063085,24.429281],[104.979933,24.412937],[104.83642,24.446712],[104.72863,24.446167],[104.70892,24.321372],[104.610986,24.376973],[104.492109,24.656241],[104.529682,24.73126],[104.63316,24.65896],[104.743413,24.621978],[104.841963,24.676359],[104.899245,24.752996],[105.03352,24.787765],[105.077868,24.918065],[105.082179,24.915895],[105.096346,24.928375],[105.09573,24.928375],[105.198592,24.995095],[105.265729,24.930003],[105.365511,24.943566],[105.445584,24.918608],[105.500402,24.807862],[105.70551,24.768752],[105.827466,24.702997],[105.942031,24.724738],[106.023335,24.632313],[106.045508,24.681796],[106.173008,24.760059],[106.206269,24.851304],[106.146522,24.948449],[106.215508,24.982079],[106.304819,24.973944],[106.590615,25.087791],[106.684238,25.178252],[106.732281,25.162548],[106.900432,25.194495],[106.912751,25.243212],[107.013765,25.275138],[107.012533,25.353024],[106.963874,25.437884],[107.066736,25.509186],[107.064272,25.559395],[107.228728,25.604728],[107.336517,25.461116],[107.318039,25.401677],[107.420901,25.393029],[107.432604,25.289205],[107.481263,25.300024],[107.472024,25.213984],[107.599523,25.250789],[107.659885,25.316251],[107.700537,25.193954],[107.741805,25.239965],[107.841587,25.115966],[108.001732,25.196661],[108.115065,25.210195],[108.152021,25.324364],[108.142782,25.390867],[108.348506,25.536183],[108.418723,25.443287],[108.471693,25.458955],[108.625062,25.308138],[108.6072,25.491904],[108.68912,25.623072],[108.763649,25.637097],[108.781511,25.554537],[108.949046,25.557236],[109.025423,25.512426],[109.088249,25.550758],[109.030966,25.629545],[109.07901,25.720679],[109.000785,25.73631],[108.953974,25.686714],[108.953974,25.686714],[108.896076,25.71421],[108.989698,25.778881],[109.143683,25.795044],[109.147995,25.7417],[109.3414,25.732537],[109.339552,25.834363],[109.435022,25.933411],[109.408537,25.967305],[109.48245,26.029687],[109.513247,25.997962],[109.635203,26.047428],[109.730057,25.989895],[109.685094,25.880129],[109.806434,25.874746],[109.783028,25.988282],[109.864332,26.027537],[109.906832,26.143611],[109.965962,26.195699],[110.099005,26.16939],[110.065128,26.051191],[110.165527,26.023773],[110.201251,26.066241],[110.257301,25.961388],[110.325671,25.975373],[110.373098,26.08935],[110.516612,26.186035],[110.555416,26.286396],[110.612083,26.333594],[110.76114,26.248838],[110.939146,26.28425],[110.94469,26.373805],[111.092515,26.306779],[111.204616,26.307852],[111.279761,26.271911],[111.267442,26.058716],[111.189834,25.953318],[111.252043,25.864517],[111.346282,25.906504],[111.49226,25.868824],[111.43313,25.84621],[111.442369,25.771877],[111.30871,25.72014],[111.343202,25.602569],[111.301319,25.450851],[111.103602,25.284877],[111.112841,25.217232],[110.998892,25.161465],[110.951465,25.043891],[110.991501,24.924034],[111.100522,24.945736],[111.101754,25.035218],[111.200921,25.074786],[111.274833,25.151175],[111.321645,25.10513],[111.435593,25.09321],[111.43313,24.97991],[111.470086,24.928917],[111.479325,24.797543],[111.431282,24.687776],[111.570484,24.644821],[111.68936,24.778531],[111.951135,24.769839],[112.024431,24.739955]]],[[[105.082179,24.915895],[105.077868,24.918065],[105.09573,24.928375],[105.096346,24.928375],[105.082179,24.915895]]]]}},{type:"Feature",properties:{adcode:46e4,name:"海南省",center:[110.33119,20.031971],centroid:[109.754777,19.189617],childrenNum:19,level:"province",subFeatureIndex:20,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[109.231147,19.863293],[109.300748,19.917868],[109.498464,19.873422],[109.585312,19.98817],[109.712195,20.017406],[109.76147,19.981422],[109.965346,19.993792],[110.106396,20.026963],[110.144585,20.074176],[110.291178,20.056754],[110.318279,20.109015],[110.526467,20.0753],[110.562191,20.109577],[110.717408,20.148901],[110.744509,20.074176],[110.871393,20.011784],[110.969327,20.010097],[111.071573,19.629025],[110.920668,19.552926],[110.844292,19.450278],[110.729727,19.378611],[110.619474,19.152118],[110.578206,18.78489],[110.499366,18.751466],[110.495054,18.65002],[110.329366,18.64265],[110.246215,18.609764],[110.117483,18.507666],[110.090382,18.399262],[110.022629,18.360083],[109.919767,18.375415],[109.785492,18.339639],[109.749767,18.193617],[109.584696,18.143589],[109.355566,18.215216],[109.287813,18.264655],[109.138756,18.268064],[109.117814,18.322032],[108.944735,18.31408],[108.888068,18.412319],[108.68912,18.447513],[108.644772,18.486672],[108.663866,18.673261],[108.593033,18.809246],[108.637997,18.920785],[108.591186,19.14477],[108.609048,19.276417],[108.663866,19.374095],[108.765496,19.401187],[109.048829,19.620007],[109.169553,19.736628],[109.159082,19.790684],[109.231147,19.863293]]],[[[113.896887,7.607259],[114.029314,7.670119],[114.211632,7.786918],[114.268298,7.870496],[114.414892,7.952872],[114.540543,7.945761],[114.540543,7.862199],[114.419819,7.765577],[114.368696,7.63869],[114.157429,7.56159],[113.98743,7.536085],[113.896887,7.607259]]],[[[111.660411,16.258092],[111.606825,16.17766],[111.569252,16.195472],[111.660411,16.258092]]],[[[113.976959,8.872658],[114.060111,8.816493],[114.037321,8.781016],[113.976959,8.872658]]],[[[112.067547,16.319543],[111.97454,16.323563],[112.047221,16.360309],[112.067547,16.319543]]],[[[115.837712,9.709358],[115.925791,9.7813],[115.901153,9.671021],[115.837712,9.709358]]],[[[109.463972,7.344453],[109.536037,7.448882],[109.653065,7.559218],[109.72205,7.575825],[109.904984,7.551507],[109.938861,7.504647],[109.791651,7.524815],[109.654297,7.479138],[109.513247,7.320122],[109.463972,7.344453]]],[[[112.527654,16.058099],[112.607726,16.066724],[112.570154,16.010945],[112.448814,16.005194],[112.527654,16.058099]]],[[[114.469095,10.83618],[114.587355,10.90904],[114.565181,10.836767],[114.469095,10.83618]]],[[[112.383524,16.266134],[112.528886,16.318395],[112.538741,16.289107],[112.383524,16.266134]]],[[[116.48876,10.395704],[116.514629,10.349208],[116.637817,10.3651],[116.566368,10.304472],[116.467202,10.309182],[116.48876,10.395704]]],[[[115.16757,8.386402],[115.315395,8.356213],[115.285214,8.314772],[115.18112,8.345557],[115.16757,8.386402]]],[[[109.936397,7.848566],[109.953027,7.888869],[110.078063,7.949317],[110.050346,7.846195],[109.988136,7.812408],[109.936397,7.848566]]],[[[114.696992,11.004203],[114.766593,11.110489],[114.793079,11.076435],[114.696992,11.004203]]],[[[110.459946,8.116389],[110.568351,8.172657],[110.554184,8.09388],[110.471032,8.071962],[110.459946,8.116389]]],[[[117.266691,10.691581],[117.369553,10.742727],[117.404661,10.671002],[117.266691,10.691581]]],[[[113.80696,19.223319],[113.920293,19.223319],[113.874097,19.151553],[113.80696,19.223319]]]]}},{type:"Feature",properties:{adcode:5e5,name:"重庆市",center:[106.504962,29.533155],centroid:[107.88398,30.067321],childrenNum:38,level:"province",subFeatureIndex:21,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[109.09256,30.578762],[109.114734,30.64416],[108.971836,30.627686],[108.808612,30.491153],[108.743939,30.494762],[108.688504,30.587519],[108.56778,30.468464],[108.42673,30.492184],[108.402092,30.376626],[108.460606,30.35959],[108.581947,30.255763],[108.56778,30.157517],[108.513577,30.057619],[108.542526,29.998047],[108.516041,29.885539],[108.371295,29.841434],[108.424266,29.816],[108.437201,29.741218],[108.504338,29.707964],[108.602273,29.865824],[108.666946,29.842472],[108.690968,29.689773],[108.785822,29.633622],[108.844337,29.658582],[108.91209,29.571714],[108.880677,29.442576],[108.927488,29.435281],[108.919481,29.326314],[109.11227,29.360737],[109.110422,29.215143],[109.232378,29.119533],[109.319842,29.042667],[109.235458,28.882476],[109.241002,28.776594],[109.2989,28.747221],[109.201581,28.598133],[109.304443,28.623871],[109.321074,28.581322],[109.274262,28.494592],[109.191726,28.470927],[109.152306,28.349885],[109.081473,28.249264],[109.086401,28.184942],[109.026655,28.220271],[109.006329,28.163317],[108.922561,28.217635],[108.772888,28.21289],[108.726692,28.282463],[108.764881,28.306698],[108.779663,28.425158],[108.710678,28.500902],[108.640461,28.457251],[108.688504,28.422527],[108.668178,28.334614],[108.611512,28.324607],[108.577019,28.534024],[108.636149,28.621245],[108.565316,28.662204],[108.471077,28.627548],[108.332491,28.679528],[108.385462,28.772398],[108.352817,28.815395],[108.350353,28.933282],[108.268433,29.089734],[108.256115,29.040574],[108.068253,29.086597],[108.024521,29.038482],[107.930899,29.035343],[107.867457,28.960508],[107.784921,29.04842],[107.810791,29.138348],[107.751044,29.199997],[107.701769,29.142006],[107.589052,29.149845],[107.570574,29.218276],[107.486806,29.174402],[107.404271,29.187984],[107.412894,29.095485],[107.36485,29.010753],[107.441227,28.943755],[107.383945,28.848417],[107.219489,28.772923],[107.191156,28.888763],[107.057497,28.895049],[106.983584,28.851561],[106.986664,28.793899],[106.986664,28.793899],[106.926302,28.809104],[106.824056,28.756139],[106.883186,28.69265],[106.866556,28.624397],[106.73844,28.554522],[106.7446,28.465667],[106.632499,28.503531],[106.564745,28.485127],[106.63681,28.623346],[106.562897,28.753516],[106.45326,28.816968],[106.504999,28.662204],[106.484057,28.530344],[106.395978,28.570287],[106.37442,28.525613],[106.304203,28.650653],[106.248152,28.829024],[106.173008,28.92019],[106.048588,28.906573],[106.043661,28.954226],[105.970364,28.966267],[105.88906,28.909716],[105.762176,28.991391],[105.693807,29.267351],[105.518264,29.264219],[105.427721,29.316924],[105.428337,29.417562],[105.380294,29.456643],[105.380294,29.456643],[105.324859,29.448828],[105.289751,29.552979],[105.38399,29.67002],[105.476996,29.674699],[105.575547,29.745374],[105.619894,29.846624],[105.709206,29.840396],[105.70243,29.924957],[105.753553,30.018254],[105.687648,30.038974],[105.582938,30.123884],[105.582938,30.127507],[105.580474,30.129577],[105.574315,30.130611],[105.56138,30.183898],[105.571235,30.17976],[105.642684,30.186484],[105.624822,30.275917],[105.720292,30.252662],[105.720292,30.252662],[105.714749,30.322927],[105.792357,30.427199],[105.881053,30.387465],[106.031958,30.373529],[106.10587,30.310531],[106.17116,30.306399],[106.180399,30.23302],[106.256776,30.19631],[106.262935,30.211306],[106.428623,30.254729],[106.451412,30.307949],[106.451412,30.307949],[106.610941,30.292451],[106.610941,30.292451],[106.612789,30.235605],[106.612789,30.235605],[106.612173,30.235605],[106.612173,30.235605],[106.611557,30.235605],[106.612173,30.235605],[106.611557,30.235605],[106.677462,30.157],[106.726121,30.033277],[106.825904,30.031205],[106.825904,30.031205],[106.913367,30.025506],[106.974345,30.082992],[106.976193,30.083509],[106.980504,30.085062],[106.981736,30.085062],[107.053801,30.043636],[107.054417,30.041046],[107.055649,30.040528],[107.058113,30.043118],[107.221337,30.213891],[107.359923,30.456087],[107.516987,30.644675],[107.424597,30.740889],[107.514524,30.854986],[107.645103,30.821079],[107.739957,30.884259],[107.763979,30.816968],[107.85329,30.793842],[107.994956,30.90839],[107.943833,30.989466],[108.053471,31.040745],[108.009123,31.10839],[108.083652,31.185713],[108.095354,31.268088],[108.185898,31.337104],[108.153869,31.371338],[108.216079,31.410666],[108.191441,31.492333],[108.34173,31.509679],[108.391621,31.593298],[108.517889,31.665131],[108.535135,31.757769],[108.343578,31.860987],[108.259194,31.966628],[108.373759,32.077217],[108.447672,32.07164],[108.369447,32.173493],[108.509882,32.201343],[108.67249,32.104083],[108.734084,32.106617],[108.902235,31.984899],[108.988466,31.979317],[109.164009,31.877247],[109.195422,31.817782],[109.273646,31.801003],[109.281654,31.717061],[109.585928,31.726731],[109.731289,31.700263],[109.76455,31.602981],[109.719586,31.555067],[109.848934,31.552008],[109.946252,31.506108],[110.054042,31.410666],[110.140273,31.390238],[110.189548,31.129391],[110.119947,31.088409],[110.135961,30.986902],[110.172918,30.978694],[110.082375,30.799496],[110.008462,30.883746],[109.893897,30.899662],[109.780564,30.848822],[109.590855,30.693566],[109.435638,30.59576],[109.35495,30.487028],[109.36111,30.550942],[109.299516,30.630775],[109.143683,30.521052],[109.103647,30.565883],[109.106111,30.57052],[109.106727,30.572066],[109.108575,30.576702],[109.102415,30.580308],[109.100567,30.580823],[109.09872,30.579277],[109.09256,30.578762]]],[[[105.574315,30.130611],[105.580474,30.129577],[105.582938,30.127507],[105.582938,30.123884],[105.574315,30.130611]]],[[[109.09256,30.578762],[109.09872,30.579277],[109.106111,30.57052],[109.103647,30.565883],[109.09256,30.578762]]],[[[109.102415,30.580308],[109.108575,30.576702],[109.106727,30.572066],[109.100567,30.580823],[109.102415,30.580308]]],[[[107.053801,30.043636],[107.058113,30.043118],[107.055649,30.040528],[107.054417,30.041046],[107.053801,30.043636]]]]}},{type:"Feature",properties:{adcode:51e4,name:"四川省",center:[104.065735,30.659462],centroid:[102.693438,30.674548],childrenNum:21,level:"province",subFeatureIndex:22,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[105.720292,30.252662],[105.720292,30.252662],[105.624822,30.275917],[105.642684,30.186484],[105.571235,30.17976],[105.56138,30.188035],[105.558916,30.18545],[105.56138,30.183898],[105.574315,30.130611],[105.582938,30.123884],[105.687648,30.038974],[105.753553,30.018254],[105.70243,29.924957],[105.709206,29.840396],[105.619894,29.846624],[105.575547,29.745374],[105.476996,29.674699],[105.38399,29.67002],[105.289751,29.552979],[105.324859,29.448828],[105.380294,29.456643],[105.380294,29.456643],[105.428337,29.417562],[105.427721,29.316924],[105.518264,29.264219],[105.693807,29.267351],[105.762176,28.991391],[105.88906,28.909716],[105.970364,28.966267],[106.043661,28.954226],[106.048588,28.906573],[106.173008,28.92019],[106.248152,28.829024],[106.304203,28.650653],[106.37442,28.525613],[106.330688,28.481971],[106.2925,28.537177],[106.103407,28.636476],[105.966668,28.76086],[105.891524,28.672179],[105.884748,28.594981],[105.749242,28.614943],[105.683952,28.535601],[105.62359,28.518253],[105.639604,28.32408],[105.730147,28.271925],[105.826234,28.304064],[105.88906,28.238722],[105.860111,28.165955],[105.975907,28.107917],[106.126812,28.16701],[106.206885,28.134302],[106.328225,27.952643],[106.304819,27.899249],[106.343007,27.821489],[106.193334,27.754265],[106.120653,27.779677],[106.023335,27.746851],[105.78435,27.719312],[105.62359,27.666333],[105.605112,27.715605],[105.508409,27.769089],[105.353809,27.74897],[105.308229,27.705011],[105.273736,27.795028],[105.308229,27.810376],[105.308229,27.810376],[105.244171,27.823077],[105.233084,27.895547],[105.284823,27.935729],[105.270657,27.99703],[105.186273,27.995445],[105.186889,28.0546],[105.05939,28.097889],[104.872144,27.905594],[104.743413,27.901892],[104.573413,27.840537],[104.40095,27.952114],[104.354139,28.019744],[104.44653,28.112666],[104.44961,28.269817],[104.384936,28.329874],[104.314103,28.306698],[104.254357,28.408844],[104.261748,28.537177],[104.318415,28.538229],[104.425588,28.626497],[104.314719,28.615468],[104.12501,28.637526],[103.940844,28.606013],[103.844757,28.660104],[103.838598,28.587101],[103.781931,28.525613],[103.877402,28.311966],[103.721569,28.201817],[103.639649,28.261912],[103.573128,28.230815],[103.471498,28.123221],[103.430846,28.044039],[103.488128,28.03242],[103.515846,27.965326],[103.487512,27.795028],[103.29226,27.632943],[103.295955,27.568785],[103.222043,27.566133],[103.111789,27.401054],[102.989833,27.368114],[102.941174,27.405303],[102.882044,27.293168],[102.913457,27.133538],[102.870957,27.026992],[102.898674,26.908073],[102.991681,26.775675],[103.018783,26.593911],[103.056971,26.525943],[102.989833,26.483108],[102.998457,26.371661],[102.739762,26.268691],[102.674473,26.205363],[102.60056,26.250448],[102.638748,26.307852],[102.567915,26.36362],[102.392372,26.296588],[102.349257,26.244545],[102.245163,26.212341],[102.107808,26.068391],[102.005562,26.091499],[102.005562,26.091499],[101.917483,26.108156],[101.86328,26.052266],[101.799223,26.109231],[101.807846,26.156501],[101.690202,26.241861],[101.630455,26.224687],[101.586724,26.279422],[101.660636,26.346999],[101.636615,26.395245],[101.506652,26.499708],[101.458608,26.495424],[101.400094,26.605146],[101.451833,26.600867],[101.453065,26.692848],[101.512195,26.756443],[101.389623,26.723314],[101.357594,26.770868],[101.399478,26.841893],[101.267667,26.902737],[101.264587,26.955549],[101.136472,27.023794],[101.170349,27.195821],[101.057016,27.20061],[101.021907,27.332508],[100.936908,27.469026],[100.848212,27.670573],[100.782307,27.691767],[100.707162,27.80085],[100.681293,27.923041],[100.633866,27.915111],[100.54517,27.809318],[100.442924,27.866459],[100.327744,27.720372],[100.295099,27.869633],[100.210715,27.877037],[100.196549,27.936257],[100.086296,28.030836],[100.033941,28.184942],[100.157129,28.210254],[100.176223,28.324607],[100.054267,28.376737],[100.073977,28.42621],[99.990209,28.476712],[99.987129,28.524561],[99.793724,28.699473],[99.733362,28.719415],[99.717964,28.846321],[99.625573,28.814871],[99.615718,28.741975],[99.532566,28.681628],[99.463581,28.549266],[99.403219,28.546638],[99.437095,28.398318],[99.374886,28.181778],[99.306516,28.227652],[99.280647,28.298269],[99.174705,28.402003],[99.183944,28.588677],[99.126662,28.699473],[99.103872,28.842128],[99.132206,28.948467],[99.113727,29.221409],[99.075539,29.314316],[99.052133,29.563908],[98.993003,29.656502],[99.0238,29.846105],[99.068148,29.93118],[99.044742,30.079885],[98.989308,30.151826],[98.907388,30.698196],[98.957895,30.765056],[98.901844,30.785105],[98.774345,30.907877],[98.806374,30.995621],[98.736772,31.049459],[98.709671,31.118635],[98.602498,31.192367],[98.64007,31.337615],[98.691809,31.333016],[98.773113,31.249163],[98.88583,31.376446],[98.837787,31.436705],[98.713367,31.510189],[98.553839,31.656473],[98.543983,31.718588],[98.414636,31.832525],[98.434962,32.007734],[98.301919,32.12334],[98.218768,32.234752],[98.218768,32.342489],[97.937283,32.484425],[97.730944,32.527315],[97.543698,32.621602],[97.42359,32.704713],[97.386018,32.779196],[97.373699,32.956094],[97.523988,32.988721],[97.542466,33.036385],[97.487648,33.10658],[97.487648,33.168205],[97.576343,33.221779],[97.621306,33.334327],[97.676125,33.340825],[97.753733,33.410277],[97.625618,33.461705],[97.552321,33.465698],[97.52522,33.575937],[97.415583,33.605343],[97.435293,33.680558],[97.388481,33.884452],[97.458698,33.886935],[97.660111,33.956444],[97.70261,34.036805],[97.665654,34.126997],[97.834421,34.208186],[97.937283,34.196804],[97.937283,34.196804],[98.051848,34.115604],[98.21076,34.078444],[98.401702,34.08786],[98.440506,33.981255],[98.406629,33.867065],[98.462064,33.849178],[98.539056,33.746752],[98.6567,33.647193],[98.61728,33.63723],[98.648077,33.549014],[98.742316,33.477677],[98.734309,33.409278],[98.779272,33.37181],[98.759562,33.277321],[98.858728,33.150674],[99.002242,33.08252],[99.179633,33.044912],[99.235067,32.982197],[99.268328,32.878744],[99.385973,32.900349],[99.558436,32.839039],[99.607711,32.780705],[99.763543,32.778693],[99.788181,32.956596],[99.854086,32.945048],[99.877492,33.045915],[99.956332,32.948061],[100.038252,32.928979],[100.123252,32.837028],[100.139266,32.724346],[100.088143,32.668959],[100.208252,32.606482],[100.258759,32.742466],[100.339447,32.719313],[100.399809,32.756556],[100.516837,32.630168],[100.54517,32.569681],[100.645568,32.526306],[100.690532,32.678025],[100.93198,32.600433],[101.075494,32.683061],[101.157414,32.661404],[101.22332,32.725856],[101.237486,32.824962],[101.124153,32.909893],[101.129081,32.989725],[101.183899,32.984204],[101.169733,33.100566],[101.11553,33.194746],[101.183283,33.270317],[101.297232,33.262313],[101.393935,33.157687],[101.405022,33.225783],[101.486326,33.227285],[101.625528,33.100566],[101.739477,33.265815],[101.64955,33.323328],[101.695745,33.433748],[101.769658,33.447728],[101.769042,33.538541],[101.844186,33.602353],[101.907012,33.542032],[101.9452,33.437742],[101.885454,33.380804],[101.878063,33.315829],[101.769658,33.268816],[101.841723,33.184731],[101.865744,33.103072],[101.935345,33.186734],[102.08933,33.204759],[102.112736,33.287324],[102.217446,33.248303],[102.186649,33.332327],[102.264873,33.417269],[102.396684,33.40678],[102.462589,33.449724],[102.440416,33.57494],[102.33817,33.614313],[102.342481,33.725357],[102.299981,33.782566],[102.239619,33.788036],[102.234076,33.870046],[102.136142,33.965377],[102.237772,33.963392],[102.315996,33.994154],[102.391756,33.970836],[102.437336,34.087364],[102.471213,34.072993],[102.655994,34.113623],[102.599328,34.145321],[102.798276,34.272982],[102.911609,34.313022],[102.978747,34.249246],[102.973203,34.205217],[103.124108,34.16166],[103.178927,34.079931],[103.119797,34.034822],[103.124108,33.968354],[103.181391,33.900842],[103.153057,33.814884],[103.279325,33.806433],[103.349542,33.74327],[103.525085,33.798975],[103.520157,33.678566],[103.626099,33.727347],[103.778236,33.658648],[103.871243,33.68255],[104.046169,33.686533],[104.168741,33.611821],[104.155191,33.542531],[104.22048,33.404782],[104.292545,33.336326],[104.432979,33.325828],[104.303632,33.304328],[104.378161,33.109086],[104.337509,33.038392],[104.426204,33.0108],[104.378161,32.953081],[104.288234,32.94304],[104.294393,32.83552],[104.363994,32.822448],[104.458849,32.748504],[104.582653,32.722333],[104.643015,32.661908],[104.739717,32.635711],[104.845659,32.653848],[104.881999,32.600938],[105.026745,32.650322],[105.111128,32.59388],[105.347033,32.682558],[105.455439,32.737433],[105.391381,32.835017],[105.414171,32.921948],[105.49917,32.911902],[105.563844,32.72485],[105.596489,32.699175],[105.719061,32.759575],[105.822538,32.770141],[105.825002,32.824962],[106.025798,32.85814],[106.093552,32.823956],[106.07261,32.764103],[106.076305,32.753537],[106.17424,32.697664],[106.347935,32.670974],[106.421231,32.616562],[106.585687,32.688097],[106.663296,32.690615],[106.733513,32.739446],[106.82344,32.705217],[107.066736,32.708741],[107.108004,32.600938],[107.080286,32.542448],[107.127098,32.482406],[107.263836,32.403129],[107.313727,32.489976],[107.382097,32.54043],[107.436299,32.529837],[107.456625,32.417778],[107.533002,32.383426],[107.680211,32.398078],[107.707929,32.331873],[107.75474,32.338445],[107.812022,32.24791],[107.979558,32.14614],[108.070717,32.233234],[108.179122,32.222099],[108.251187,32.273208],[108.312781,32.232222],[108.46923,32.270173],[108.509882,32.201343],[108.369447,32.173493],[108.447672,32.07164],[108.373759,32.077217],[108.259194,31.966628],[108.343578,31.860987],[108.535135,31.757769],[108.517889,31.665131],[108.391621,31.593298],[108.34173,31.509679],[108.191441,31.492333],[108.216079,31.410666],[108.153869,31.371338],[108.185898,31.337104],[108.095354,31.268088],[108.083652,31.185713],[108.009123,31.10839],[108.053471,31.040745],[107.943833,30.989466],[107.994956,30.90839],[107.85329,30.793842],[107.763979,30.816968],[107.739957,30.884259],[107.645103,30.821079],[107.514524,30.854986],[107.424597,30.740889],[107.516987,30.644675],[107.359923,30.456087],[107.221337,30.213891],[107.058113,30.043118],[107.053801,30.043636],[106.981736,30.085062],[106.980504,30.087651],[106.980504,30.087651],[106.980504,30.085062],[106.978041,30.087133],[106.978041,30.087651],[106.978041,30.087133],[106.978041,30.087651],[106.978041,30.087133],[106.976193,30.083509],[106.976193,30.087651],[106.976193,30.087651],[106.974345,30.082992],[106.913367,30.025506],[106.825904,30.031205],[106.825904,30.031205],[106.726121,30.033277],[106.677462,30.157],[106.611557,30.235605],[106.612173,30.235605],[106.611557,30.235605],[106.612173,30.235605],[106.612173,30.235605],[106.612789,30.235605],[106.612789,30.235605],[106.610941,30.292451],[106.610941,30.292451],[106.451412,30.307949],[106.451412,30.307949],[106.428623,30.254729],[106.262935,30.211306],[106.261703,30.205101],[106.260471,30.204067],[106.256776,30.19631],[106.180399,30.23302],[106.17116,30.306399],[106.10587,30.310531],[106.031958,30.373529],[105.881053,30.387465],[105.792357,30.427199],[105.714749,30.322927],[105.720292,30.252662]]],[[[106.262935,30.211306],[106.256776,30.19631],[106.260471,30.204067],[106.261703,30.205101],[106.262935,30.211306]]],[[[105.571235,30.17976],[105.56138,30.183898],[105.558916,30.18545],[105.56138,30.188035],[105.571235,30.17976]]],[[[106.981736,30.085062],[106.980504,30.085062],[106.980504,30.087651],[106.981736,30.085062]]],[[[106.980504,30.085062],[106.976193,30.083509],[106.978041,30.087133],[106.980504,30.085062]]],[[[106.976193,30.083509],[106.974345,30.082992],[106.976193,30.087651],[106.976193,30.083509]]]]}},{type:"Feature",properties:{adcode:52e4,name:"贵州省",center:[106.713478,26.578343],centroid:[106.88108,26.826362],childrenNum:9,level:"province",subFeatureIndex:23,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[109.52187,26.748964],[109.454117,26.761252],[109.35495,26.693383],[109.407305,26.532902],[109.326001,26.427398],[109.285965,26.296052],[109.340784,26.264399],[109.466435,26.314288],[109.439334,26.238641],[109.486761,26.148445],[109.486761,26.148445],[109.449805,26.101709],[109.48245,26.029687],[109.408537,25.967305],[109.435022,25.933411],[109.339552,25.834363],[109.3414,25.732537],[109.147995,25.7417],[109.143683,25.795044],[108.989698,25.778881],[108.896076,25.71421],[108.953974,25.686714],[108.953974,25.686714],[109.000785,25.73631],[109.07901,25.720679],[109.030966,25.629545],[109.088249,25.550758],[109.025423,25.512426],[108.949046,25.557236],[108.781511,25.554537],[108.763649,25.637097],[108.68912,25.623072],[108.6072,25.491904],[108.625062,25.308138],[108.471693,25.458955],[108.418723,25.443287],[108.348506,25.536183],[108.142782,25.390867],[108.152021,25.324364],[108.115065,25.210195],[108.001732,25.196661],[107.841587,25.115966],[107.741805,25.239965],[107.700537,25.193954],[107.659885,25.316251],[107.599523,25.250789],[107.472024,25.213984],[107.481263,25.300024],[107.432604,25.289205],[107.420901,25.393029],[107.318039,25.401677],[107.336517,25.461116],[107.228728,25.604728],[107.064272,25.559395],[107.066736,25.509186],[106.963874,25.437884],[107.012533,25.353024],[107.013765,25.275138],[106.912751,25.243212],[106.900432,25.194495],[106.732281,25.162548],[106.684238,25.178252],[106.590615,25.087791],[106.304819,24.973944],[106.215508,24.982079],[106.146522,24.948449],[106.206269,24.851304],[106.173008,24.760059],[106.045508,24.681796],[106.023335,24.632313],[105.942031,24.724738],[105.827466,24.702997],[105.70551,24.768752],[105.500402,24.807862],[105.445584,24.918608],[105.365511,24.943566],[105.265729,24.930003],[105.198592,24.995095],[105.09573,24.928375],[105.077868,24.918065],[105.03352,24.787765],[104.899245,24.752996],[104.841963,24.676359],[104.743413,24.621978],[104.63316,24.65896],[104.529682,24.73126],[104.539537,24.813836],[104.713232,24.996179],[104.667652,25.05961],[104.750804,25.215067],[104.822869,25.17013],[104.816094,25.262152],[104.639935,25.298942],[104.646094,25.356809],[104.543232,25.400597],[104.556783,25.524845],[104.434827,25.47246],[104.420661,25.585301],[104.332581,25.598792],[104.309791,25.648964],[104.328886,25.760561],[104.373233,25.731459],[104.441602,25.869362],[104.414501,25.909733],[104.499501,26.070541],[104.592508,26.317506],[104.683667,26.377557],[104.554935,26.590701],[104.487798,26.579465],[104.421276,26.712091],[104.354139,26.621194],[104.120082,26.636705],[104.052329,26.507204],[103.865699,26.512023],[103.764685,26.584816],[103.773308,26.716901],[103.705555,26.794904],[103.779468,26.874454],[103.77454,26.951815],[103.675374,27.051506],[103.638418,27.013133],[103.624251,27.112237],[103.711714,27.14259],[103.903271,27.347921],[103.932221,27.444072],[104.015372,27.429204],[104.01722,27.383523],[104.113307,27.338354],[104.174285,27.262856],[104.363378,27.467964],[104.497653,27.411677],[104.546312,27.330382],[104.609754,27.306991],[104.808702,27.35483],[104.871528,27.291041],[105.067397,27.418051],[105.184425,27.393085],[105.260186,27.514672],[105.232469,27.546506],[105.305149,27.612799],[105.308229,27.705011],[105.353809,27.74897],[105.508409,27.769089],[105.605112,27.715605],[105.62359,27.666333],[105.78435,27.719312],[106.023335,27.746851],[106.120653,27.779677],[106.193334,27.754265],[106.343007,27.821489],[106.304819,27.899249],[106.328225,27.952643],[106.206885,28.134302],[106.126812,28.16701],[105.975907,28.107917],[105.860111,28.165955],[105.88906,28.238722],[105.826234,28.304064],[105.730147,28.271925],[105.639604,28.32408],[105.62359,28.518253],[105.683952,28.535601],[105.749242,28.614943],[105.884748,28.594981],[105.891524,28.672179],[105.966668,28.76086],[106.103407,28.636476],[106.2925,28.537177],[106.330688,28.481971],[106.37442,28.525613],[106.395978,28.570287],[106.484057,28.530344],[106.504999,28.662204],[106.45326,28.816968],[106.562897,28.753516],[106.63681,28.623346],[106.564745,28.485127],[106.632499,28.503531],[106.7446,28.465667],[106.73844,28.554522],[106.866556,28.624397],[106.883186,28.69265],[106.824056,28.756139],[106.926302,28.809104],[106.986664,28.793899],[106.986664,28.793899],[106.983584,28.851561],[107.057497,28.895049],[107.191156,28.888763],[107.219489,28.772923],[107.383945,28.848417],[107.441227,28.943755],[107.36485,29.010753],[107.412894,29.095485],[107.404271,29.187984],[107.486806,29.174402],[107.570574,29.218276],[107.589052,29.149845],[107.701769,29.142006],[107.751044,29.199997],[107.810791,29.138348],[107.784921,29.04842],[107.867457,28.960508],[107.930899,29.035343],[108.024521,29.038482],[108.068253,29.086597],[108.256115,29.040574],[108.268433,29.089734],[108.350353,28.933282],[108.352817,28.815395],[108.385462,28.772398],[108.332491,28.679528],[108.471077,28.627548],[108.565316,28.662204],[108.636149,28.621245],[108.577019,28.534024],[108.611512,28.324607],[108.668178,28.334614],[108.688504,28.422527],[108.640461,28.457251],[108.710678,28.500902],[108.779663,28.425158],[108.764881,28.306698],[108.726692,28.282463],[108.772888,28.21289],[108.922561,28.217635],[109.006329,28.163317],[109.026655,28.220271],[109.086401,28.184942],[109.081473,28.249264],[109.152306,28.349885],[109.191726,28.470927],[109.274262,28.494592],[109.27303,28.310386],[109.388211,28.268236],[109.340168,28.190216],[109.298284,28.036117],[109.378972,28.032948],[109.30198,27.956342],[109.345711,27.840537],[109.332777,27.782853],[109.470747,27.68011],[109.461508,27.567724],[109.303211,27.475396],[109.300132,27.423893],[109.202197,27.449913],[109.142451,27.418051],[109.040821,27.276151],[108.907162,27.2054],[108.878829,27.106378],[108.791366,27.084539],[108.87575,26.999273],[109.07901,27.115965],[109.164625,27.065893],[109.267487,27.128746],[109.415928,27.15377],[109.472595,27.135136],[109.454733,27.069622],[109.520022,27.058433],[109.555131,26.947015],[109.486761,26.895267],[109.500928,26.828546],[109.481218,26.838156],[109.473211,26.828546],[109.504624,26.805051],[109.52187,26.748964]]],[[[109.529261,26.740414],[109.528029,26.744689],[109.548971,26.737208],[109.548971,26.737208],[109.529261,26.740414]]],[[[109.500928,26.828546],[109.504624,26.805051],[109.473211,26.828546],[109.481218,26.838156],[109.500928,26.828546]]]]}},{type:"Feature",properties:{adcode:53e4,name:"云南省",center:[102.712251,25.040609],centroid:[101.485108,25.008649],childrenNum:16,level:"province",subFeatureIndex:24,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[105.542902,23.18449],[105.445584,23.292797],[105.372903,23.317525],[105.325475,23.390034],[105.238012,23.264217],[105.093266,23.260919],[104.886311,23.169088],[104.804391,23.110218],[104.860441,22.970917],[104.737869,22.825957],[104.579573,22.84636],[104.375697,22.690228],[104.272219,22.738245],[104.274067,22.828163],[104.117618,22.808861],[104.045553,22.728312],[104.009213,22.51789],[103.964249,22.502966],[103.825047,22.615685],[103.642113,22.795071],[103.566969,22.698508],[103.53494,22.594143],[103.436389,22.697404],[103.441317,22.753144],[103.323057,22.807758],[103.283021,22.678635],[103.195557,22.648268],[103.183854,22.557679],[103.081608,22.506835],[103.079761,22.448784],[102.930703,22.482512],[102.880196,22.586961],[102.688639,22.700164],[102.603024,22.731623],[102.570379,22.700164],[102.510633,22.774661],[102.384365,22.679739],[102.420706,22.636119],[102.322771,22.554364],[102.25625,22.457631],[102.270416,22.419472],[102.046214,22.457631],[101.907628,22.43717],[101.862665,22.389048],[101.76473,22.506282],[101.672339,22.474772],[101.625528,22.282789],[101.547304,22.237936],[101.596579,22.160933],[101.573789,22.114933],[101.626144,22.006247],[101.606434,21.967965],[101.701288,21.938553],[101.777049,21.826954],[101.747484,21.730276],[101.780129,21.640763],[101.754875,21.585137],[101.745636,21.29721],[101.833715,21.252606],[101.76473,21.147733],[101.672339,21.195158],[101.605818,21.172285],[101.604586,21.229741],[101.532521,21.252606],[101.387775,21.225837],[101.290457,21.178422],[101.222088,21.234203],[101.244877,21.302227],[101.142631,21.409218],[101.194986,21.425372],[101.209153,21.557316],[101.117378,21.689141],[101.123537,21.771956],[101.015132,21.70693],[100.870386,21.672461],[100.730568,21.518914],[100.558105,21.450434],[100.48296,21.459343],[100.437381,21.532829],[100.351765,21.52949],[100.247056,21.463798],[100.199628,21.512791],[100.126948,21.508338],[100.107853,21.585137],[100.169447,21.663564],[100.095535,21.704151],[99.991441,21.703595],[99.944014,21.821955],[99.999448,21.970184],[99.972347,22.052837],[99.871333,22.0667],[99.870101,22.029544],[99.486987,22.12879],[99.400139,22.099966],[99.220901,22.111053],[99.156227,22.160933],[99.235683,22.250673],[99.282495,22.401219],[99.381661,22.503519],[99.385973,22.57094],[99.31514,22.737693],[99.385973,22.761972],[99.457421,22.84636],[99.456806,22.932901],[99.563363,22.925737],[99.517168,23.006719],[99.528255,23.065635],[99.3484,23.128927],[99.255393,23.077746],[99.106336,23.086552],[98.889525,23.209238],[98.936953,23.309833],[98.872279,23.484456],[98.826084,23.470187],[98.808221,23.547549],[98.877823,23.59197],[98.786048,23.781551],[98.669019,23.800713],[98.701664,23.834103],[98.701048,23.946251],[98.899996,24.109102],[98.875975,24.150056],[98.716446,24.12767],[98.611737,24.08507],[98.550759,24.125485],[98.360434,24.097087],[98.225543,24.113471],[98.110978,24.092171],[97.902175,24.01404],[97.894168,23.973589],[97.769748,23.933126],[97.711234,23.861465],[97.5283,23.926563],[97.634241,24.046828],[97.730944,24.113471],[97.729712,24.227013],[97.767284,24.258656],[97.658879,24.326279],[97.716161,24.358987],[97.669966,24.452703],[97.531995,24.43146],[97.570799,24.602396],[97.570183,24.766579],[97.701379,24.842617],[97.764204,24.824155],[97.785762,24.875733],[97.716777,24.978283],[97.839349,25.27081],[97.914494,25.211278],[98.014892,25.305433],[98.06971,25.311924],[98.15779,25.457334],[98.131304,25.510266],[98.189818,25.569111],[98.170724,25.620374],[98.247717,25.607965],[98.314854,25.543201],[98.402317,25.593936],[98.457752,25.68294],[98.476846,25.777265],[98.553839,25.845672],[98.640686,25.798815],[98.704744,25.852133],[98.686881,25.925877],[98.614201,25.968919],[98.575396,26.118364],[98.634527,26.145759],[98.662244,26.0872],[98.735541,26.183351],[98.672715,26.240251],[98.733693,26.350753],[98.753403,26.559129],[98.781736,26.62066],[98.746012,26.697125],[98.757098,26.87819],[98.732461,27.002472],[98.765722,27.050973],[98.712135,27.077081],[98.696121,27.211253],[98.734309,27.35111],[98.706591,27.362269],[98.674563,27.582044],[98.583404,27.571437],[98.444201,27.665274],[98.429419,27.548628],[98.317318,27.519448],[98.278514,27.659974],[98.234166,27.690707],[98.222463,27.812493],[98.169492,27.851118],[98.205217,27.88973],[98.133152,27.99069],[98.160253,28.101056],[98.139311,28.142216],[98.168876,28.204454],[98.266195,28.24083],[98.208913,28.35831],[98.301303,28.384633],[98.37768,28.246101],[98.389383,28.114777],[98.428803,28.10475],[98.559382,28.182833],[98.626519,28.165427],[98.712135,28.229233],[98.752787,28.333561],[98.677026,28.463563],[98.627751,28.487756],[98.638222,28.55242],[98.594491,28.667979],[98.683802,28.739877],[98.652389,28.816968],[98.657932,28.93014],[98.765722,29.006044],[98.815613,28.948991],[98.828547,28.820113],[98.912931,28.800715],[98.972677,28.832693],[98.917243,28.888239],[98.925866,28.978306],[99.009018,29.031158],[98.967134,29.128418],[98.976373,29.204698],[99.113727,29.221409],[99.132206,28.948467],[99.103872,28.842128],[99.126662,28.699473],[99.183944,28.588677],[99.174705,28.402003],[99.280647,28.298269],[99.306516,28.227652],[99.374886,28.181778],[99.437095,28.398318],[99.403219,28.546638],[99.463581,28.549266],[99.532566,28.681628],[99.615718,28.741975],[99.625573,28.814871],[99.717964,28.846321],[99.733362,28.719415],[99.793724,28.699473],[99.987129,28.524561],[99.990209,28.476712],[100.073977,28.42621],[100.054267,28.376737],[100.176223,28.324607],[100.157129,28.210254],[100.033941,28.184942],[100.086296,28.030836],[100.196549,27.936257],[100.210715,27.877037],[100.295099,27.869633],[100.327744,27.720372],[100.442924,27.866459],[100.54517,27.809318],[100.633866,27.915111],[100.681293,27.923041],[100.707162,27.80085],[100.782307,27.691767],[100.848212,27.670573],[100.936908,27.469026],[101.021907,27.332508],[101.057016,27.20061],[101.170349,27.195821],[101.136472,27.023794],[101.264587,26.955549],[101.267667,26.902737],[101.399478,26.841893],[101.357594,26.770868],[101.389623,26.723314],[101.512195,26.756443],[101.453065,26.692848],[101.451833,26.600867],[101.400094,26.605146],[101.458608,26.495424],[101.506652,26.499708],[101.636615,26.395245],[101.660636,26.346999],[101.586724,26.279422],[101.630455,26.224687],[101.690202,26.241861],[101.807846,26.156501],[101.799223,26.109231],[101.86328,26.052266],[101.917483,26.108156],[102.005562,26.091499],[102.005562,26.091499],[102.107808,26.068391],[102.245163,26.212341],[102.349257,26.244545],[102.392372,26.296588],[102.567915,26.36362],[102.638748,26.307852],[102.60056,26.250448],[102.674473,26.205363],[102.739762,26.268691],[102.998457,26.371661],[102.989833,26.483108],[103.056971,26.525943],[103.018783,26.593911],[102.991681,26.775675],[102.898674,26.908073],[102.870957,27.026992],[102.913457,27.133538],[102.882044,27.293168],[102.941174,27.405303],[102.989833,27.368114],[103.111789,27.401054],[103.222043,27.566133],[103.295955,27.568785],[103.29226,27.632943],[103.487512,27.795028],[103.515846,27.965326],[103.488128,28.03242],[103.430846,28.044039],[103.471498,28.123221],[103.573128,28.230815],[103.639649,28.261912],[103.721569,28.201817],[103.877402,28.311966],[103.781931,28.525613],[103.838598,28.587101],[103.844757,28.660104],[103.940844,28.606013],[104.12501,28.637526],[104.314719,28.615468],[104.425588,28.626497],[104.318415,28.538229],[104.261748,28.537177],[104.254357,28.408844],[104.314103,28.306698],[104.384936,28.329874],[104.44961,28.269817],[104.44653,28.112666],[104.354139,28.019744],[104.40095,27.952114],[104.573413,27.840537],[104.743413,27.901892],[104.872144,27.905594],[105.05939,28.097889],[105.186889,28.0546],[105.186273,27.995445],[105.270657,27.99703],[105.284823,27.935729],[105.233084,27.895547],[105.244171,27.823077],[105.308229,27.810376],[105.308229,27.810376],[105.273736,27.795028],[105.308229,27.705011],[105.305149,27.612799],[105.232469,27.546506],[105.260186,27.514672],[105.184425,27.393085],[105.067397,27.418051],[104.871528,27.291041],[104.808702,27.35483],[104.609754,27.306991],[104.546312,27.330382],[104.497653,27.411677],[104.363378,27.467964],[104.174285,27.262856],[104.113307,27.338354],[104.01722,27.383523],[104.015372,27.429204],[103.932221,27.444072],[103.903271,27.347921],[103.711714,27.14259],[103.624251,27.112237],[103.638418,27.013133],[103.675374,27.051506],[103.77454,26.951815],[103.779468,26.874454],[103.705555,26.794904],[103.773308,26.716901],[103.764685,26.584816],[103.865699,26.512023],[104.052329,26.507204],[104.120082,26.636705],[104.354139,26.621194],[104.421276,26.712091],[104.487798,26.579465],[104.554935,26.590701],[104.683667,26.377557],[104.592508,26.317506],[104.499501,26.070541],[104.414501,25.909733],[104.441602,25.869362],[104.373233,25.731459],[104.328886,25.760561],[104.309791,25.648964],[104.332581,25.598792],[104.420661,25.585301],[104.434827,25.47246],[104.556783,25.524845],[104.543232,25.400597],[104.646094,25.356809],[104.639935,25.298942],[104.816094,25.262152],[104.822869,25.17013],[104.750804,25.215067],[104.667652,25.05961],[104.713232,24.996179],[104.539537,24.813836],[104.529682,24.73126],[104.492109,24.656241],[104.610986,24.376973],[104.70892,24.321372],[104.72863,24.446167],[104.83642,24.446712],[104.979933,24.412937],[105.063085,24.429281],[105.063085,24.429281],[105.188121,24.346995],[105.164715,24.288109],[105.229389,24.165888],[105.20044,24.105279],[105.260186,24.061033],[105.320548,24.116202],[105.481924,24.018958],[105.529967,24.129308],[105.628518,24.126577],[105.649459,24.033167],[105.704278,24.066497],[105.89214,24.040271],[105.933407,24.123847],[106.04982,24.089986],[106.192102,23.824798],[106.136667,23.795238],[106.157609,23.724048],[106.120653,23.605129],[106.141595,23.569487],[105.999929,23.447683],[105.89214,23.525058],[105.815763,23.506953],[105.699966,23.401566],[105.694423,23.363122],[105.531815,23.248275],[105.542902,23.18449]]]]}},{type:"Feature",properties:{adcode:54e4,name:"西藏自治区",center:[91.132212,29.660361],centroid:[88.388277,31.56375],childrenNum:7,level:"province",subFeatureIndex:25,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[79.039649,34.33427],[79.0107,34.399956],[79.161605,34.441416],[79.229358,34.413778],[79.504683,34.454737],[79.675914,34.451284],[79.801566,34.478909],[79.906892,34.683837],[79.947544,34.820993],[80.034391,34.902],[80.031311,35.034384],[80.118159,35.066222],[80.23026,35.147476],[80.257977,35.20323],[80.362687,35.209096],[80.268448,35.294114],[80.321419,35.386848],[80.412578,35.433663],[80.516672,35.392214],[80.65649,35.394165],[80.689135,35.33903],[80.844351,35.345375],[81.026053,35.312181],[81.031597,35.380506],[81.09935,35.407333],[81.219458,35.319016],[81.362356,35.354647],[81.494167,35.292161],[81.513261,35.235002],[81.675253,35.233536],[81.736847,35.262365],[81.927789,35.271158],[82.05344,35.350255],[82.033114,35.450236],[82.328149,35.559342],[82.336156,35.651284],[82.424852,35.713006],[82.628727,35.692114],[82.731589,35.63767],[82.788872,35.684824],[82.960719,35.671702],[82.998907,35.484348],[83.067892,35.462908],[83.127022,35.398554],[83.242203,35.420011],[83.451006,35.38197],[83.622238,35.335614],[83.677672,35.360991],[83.885244,35.367334],[84.005968,35.422449],[84.095895,35.362943],[84.1618,35.359039],[84.335495,35.414647],[84.45314,35.473141],[84.448828,35.55058],[84.729081,35.613353],[85.053065,35.751862],[85.159006,35.745549],[85.271107,35.788757],[85.372121,35.701346],[85.613569,35.652257],[85.65299,35.731465],[85.811286,35.779049],[85.949256,35.779049],[86.060125,35.846008],[86.132806,35.979271],[86.199944,36.032513],[86.187625,36.131158],[86.392733,36.206992],[86.515305,36.205543],[86.701318,36.245122],[86.746282,36.291916],[86.862078,36.300114],[86.887332,36.262492],[86.996353,36.308793],[87.149106,36.29722],[87.193454,36.349283],[87.306787,36.363739],[87.361605,36.419128],[87.460155,36.409498],[87.470626,36.354102],[87.570409,36.342536],[87.731785,36.384936],[87.949211,36.401312],[87.983088,36.437903],[88.134609,36.427313],[88.241782,36.468704],[88.365586,36.457636],[88.470912,36.482175],[88.573158,36.461005],[88.623665,36.389271],[88.783809,36.291916],[88.802903,36.337717],[88.926091,36.364221],[88.964279,36.318917],[89.10225,36.281305],[89.127503,36.249465],[89.232213,36.295774],[89.287647,36.235954],[89.375727,36.228231],[89.490291,36.150969],[89.711414,36.092972],[89.638117,36.04993],[89.476125,36.021868],[89.418843,36.04606],[89.429929,35.916302],[89.549422,35.858132],[89.801957,35.847948],[89.747138,35.751862],[89.765616,35.599732],[89.700327,35.537435],[89.744058,35.479963],[89.68616,35.414647],[89.497067,35.361479],[89.532175,35.285323],[89.449639,35.226693],[89.513081,35.139158],[89.593153,35.104412],[89.560509,34.938794],[89.654747,34.883351],[89.707102,34.919663],[89.821667,34.902981],[89.867862,34.810677],[89.799493,34.74384],[89.732356,34.732039],[89.72558,34.660709],[89.798877,34.628714],[89.823515,34.455231],[89.801957,34.390575],[89.872174,34.335752],[89.825362,34.293746],[89.818587,34.174037],[89.655979,34.096778],[89.635037,34.0492],[89.691704,33.957933],[89.795181,33.865575],[89.837065,33.869052],[89.933768,33.796986],[89.907282,33.74128],[90.008296,33.688026],[89.984275,33.61232],[90.01076,33.553501],[90.080977,33.530561],[90.092064,33.469691],[90.246665,33.42426],[90.332896,33.310829],[90.405577,33.260311],[90.486881,33.266815],[90.70554,33.135645],[90.805938,33.114599],[91.001807,33.116102],[91.001807,33.116102],[91.134849,33.073495],[91.262349,33.141156],[91.436044,33.065974],[91.49887,33.109086],[91.58079,33.039395],[91.785281,32.944044],[91.896766,32.907884],[91.955897,32.820437],[92.145606,32.885779],[92.227526,32.820939],[92.198577,32.755046],[92.255243,32.720823],[92.355641,32.764606],[92.63651,32.720319],[92.686401,32.765109],[92.877342,32.697161],[93.019624,32.737433],[93.069515,32.626137],[93.239514,32.662411],[93.385492,32.525297],[93.4631,32.556065],[93.516687,32.475844],[93.618933,32.522775],[93.654657,32.57321],[93.820345,32.549509],[93.861613,32.466253],[93.958931,32.484929],[94.136322,32.433939],[94.196684,32.516216],[94.371611,32.524793],[94.395016,32.594385],[94.53853,32.599425],[94.614291,32.673492],[94.772587,32.555057],[94.80708,32.486444],[94.889616,32.472311],[94.912405,32.415758],[94.985086,32.421819],[95.081789,32.384942],[95.218527,32.397067],[95.261643,32.348049],[95.096571,32.322267],[95.10581,32.259042],[95.241317,32.32075],[95.26965,32.194761],[95.312766,32.148673],[95.406389,32.182102],[95.454432,32.062006],[95.360809,31.959013],[95.439649,31.831508],[95.546823,31.739961],[95.618272,31.783712],[95.779648,31.74912],[95.825227,31.681935],[95.89914,31.817273],[95.982908,31.816765],[96.041422,31.734364],[96.135661,31.702299],[96.160298,31.600943],[96.204646,31.598904],[96.252689,31.69619],[96.176313,31.777608],[96.253921,31.929566],[96.389428,31.919917],[96.468268,31.769978],[96.576057,31.712989],[96.616093,31.736908],[96.775006,31.673788],[96.840295,31.720623],[96.760223,31.856922],[96.81073,31.894521],[96.722651,32.013314],[96.894498,32.013822],[97.008447,32.067076],[97.130403,32.04375],[97.308409,32.074682],[97.264062,32.183621],[97.299786,32.294959],[97.371235,32.273208],[97.424822,32.323278],[97.387865,32.427374],[97.341054,32.441009],[97.388481,32.501583],[97.334895,32.514198],[97.448843,32.586823],[97.472249,32.54497],[97.670582,32.517225],[97.730944,32.527315],[97.937283,32.484425],[98.218768,32.342489],[98.218768,32.234752],[98.301919,32.12334],[98.434962,32.007734],[98.414636,31.832525],[98.543983,31.718588],[98.553839,31.656473],[98.713367,31.510189],[98.837787,31.436705],[98.88583,31.376446],[98.773113,31.249163],[98.691809,31.333016],[98.64007,31.337615],[98.602498,31.192367],[98.709671,31.118635],[98.736772,31.049459],[98.806374,30.995621],[98.774345,30.907877],[98.901844,30.785105],[98.957895,30.765056],[98.907388,30.698196],[98.989308,30.151826],[99.044742,30.079885],[99.068148,29.93118],[99.0238,29.846105],[98.993003,29.656502],[99.052133,29.563908],[99.075539,29.314316],[99.113727,29.221409],[98.976373,29.204698],[98.967134,29.128418],[99.009018,29.031158],[98.925866,28.978306],[98.917243,28.888239],[98.972677,28.832693],[98.912931,28.800715],[98.828547,28.820113],[98.815613,28.948991],[98.765722,29.006044],[98.657932,28.93014],[98.652389,28.816968],[98.683802,28.739877],[98.594491,28.667979],[98.638222,28.55242],[98.627751,28.487756],[98.677026,28.463563],[98.752787,28.333561],[98.712135,28.229233],[98.626519,28.165427],[98.559382,28.182833],[98.428803,28.10475],[98.389383,28.114777],[98.37768,28.246101],[98.301303,28.384633],[98.208913,28.35831],[98.266195,28.24083],[98.168876,28.204454],[98.139311,28.142216],[98.090036,28.195489],[98.03337,28.187052],[98.020435,28.25348],[97.907718,28.363575],[97.801161,28.326714],[97.738335,28.396213],[97.737103,28.465667],[97.68598,28.51983],[97.569567,28.541382],[97.506126,28.471453],[97.485184,28.386212],[97.518445,28.327767],[97.460546,28.268236],[97.42359,28.297742],[97.350909,28.23714],[97.321344,28.054071],[97.413119,28.013406],[97.386634,27.882855],[97.303482,27.913525],[97.062649,27.742615],[97.049099,27.814081],[96.972722,27.861169],[96.849534,27.874393],[96.784245,27.9315],[96.690622,27.948943],[96.572978,28.058296],[96.499681,28.067271],[96.46334,28.143271],[96.398667,28.118471],[96.297037,28.141161],[96.275479,28.228179],[95.989067,28.198126],[95.874502,28.297742],[95.674322,28.254007],[95.371896,28.110028],[95.28628,27.939957],[95.015267,27.828897],[94.88592,27.743145],[94.524979,27.596362],[94.277372,27.580983],[93.970634,27.305396],[93.849294,27.168676],[93.841903,27.045645],[93.56781,26.937948],[93.232739,26.907006],[93.111399,26.880325],[92.909371,26.914475],[92.802813,26.895267],[92.682089,26.948082],[92.57122,26.946482],[92.404916,26.902737],[92.109265,26.854705],[92.124664,26.959815],[92.043976,27.052572],[92.032273,27.168144],[92.125896,27.27296],[92.010715,27.474866],[91.839484,27.489728],[91.753868,27.462656],[91.585101,27.54014],[91.570934,27.650965],[91.642383,27.766442],[91.611586,27.891316],[91.486551,27.937314],[91.464993,28.002841],[91.309776,28.057768],[91.251878,27.970611],[91.162567,27.968497],[91.113292,27.846357],[90.96485,27.900306],[90.96177,27.9537],[90.896481,27.9463],[90.802242,28.040342],[90.701844,28.076246],[90.591591,28.021329],[90.513983,28.061992],[90.384019,28.060936],[90.296556,28.15435],[90.231882,28.144854],[90.124709,28.190743],[90.03355,28.13694],[89.976268,28.189161],[89.906051,28.180723],[89.789638,28.24083],[89.720037,28.170175],[89.605472,28.161735],[89.461958,28.031892],[89.375727,27.875979],[89.238988,27.796616],[89.184786,27.673752],[89.131815,27.633474],[89.163228,27.574619],[89.095474,27.471681],[89.182938,27.373959],[89.077612,27.287319],[89.057286,27.234663],[88.975982,27.217106],[88.911924,27.274024],[88.920548,27.325598],[88.809063,27.405834],[88.770874,27.567724],[88.852178,27.671103],[88.888519,27.846886],[88.842939,28.006539],[88.764099,28.068327],[88.67602,28.068327],[88.645223,28.111083],[88.565151,28.083109],[88.554064,28.027667],[88.478919,28.034005],[88.401311,27.976952],[88.254101,27.939429],[88.156783,27.957928],[88.111819,27.864872],[87.826639,27.927799],[87.727473,27.802967],[87.590119,27.848473],[87.45954,27.82096],[87.420735,27.859053],[87.364069,27.824135],[87.280917,27.845299],[87.227946,27.813022],[87.118309,27.840537],[87.035157,27.9463],[86.935375,27.955285],[86.864542,28.022385],[86.756753,28.032948],[86.700086,28.101583],[86.647732,28.069383],[86.568891,28.103167],[86.514689,27.954757],[86.450015,27.908766],[86.231972,27.97431],[86.19132,28.16701],[86.082915,28.01816],[86.125415,27.923041],[86.053966,27.900306],[85.949256,27.937314],[85.980053,27.984349],[85.901213,28.053543],[85.854402,28.172284],[85.753388,28.227652],[85.720743,28.371999],[85.682555,28.375684],[85.650526,28.283517],[85.526106,28.324607],[85.415853,28.321447],[85.272339,28.282463],[85.209513,28.338827],[85.113427,28.34462],[85.108499,28.461459],[85.189803,28.545062],[85.195963,28.623871],[85.126361,28.675854],[85.05676,28.674279],[84.981616,28.586576],[84.857196,28.56766],[84.698284,28.633325],[84.650856,28.714692],[84.483321,28.735155],[84.408176,28.854182],[84.234481,28.889287],[84.248648,29.030635],[84.194445,29.044759],[84.20738,29.118487],[84.116837,29.286661],[84.002272,29.291358],[83.917273,29.324749],[83.727563,29.244383],[83.656114,29.167088],[83.548941,29.201042],[83.266841,29.571194],[83.12887,29.62374],[83.088834,29.605014],[82.9484,29.704846],[82.830756,29.687694],[82.703872,29.847662],[82.6238,29.834687],[82.560974,29.955547],[82.498148,29.947771],[82.412533,30.012037],[82.246845,30.071601],[82.17786,30.067976],[82.207425,30.143548],[82.114418,30.226816],[82.104563,30.346682],[81.99123,30.322927],[81.872354,30.373012],[81.759021,30.385401],[81.63029,30.446802],[81.566232,30.428747],[81.555761,30.369399],[81.406704,30.40398],[81.427646,30.305366],[81.393769,30.199413],[81.335871,30.150791],[81.269349,30.153378],[81.293371,30.094899],[81.225618,30.005301],[81.131995,30.016181],[81.034677,30.246977],[80.81725,30.321378],[80.719316,30.414816],[80.633084,30.458665],[80.549316,30.448866],[80.322035,30.564338],[80.214245,30.585974],[80.124934,30.558671],[80.04363,30.603485],[79.970333,30.685848],[79.961094,30.771225],[79.890877,30.854986],[79.835443,30.850876],[79.75845,30.93662],[79.668523,30.980233],[79.59769,30.925843],[79.505915,31.027415],[79.427075,31.018186],[79.421531,31.067399],[79.316206,31.017673],[79.33222,30.96946],[79.227511,30.94945],[79.181931,31.015622],[79.0957,30.993057],[79.010084,31.044333],[78.997765,31.159093],[78.865338,31.313082],[78.841933,31.288542],[78.755085,31.3555],[78.792041,31.436195],[78.729832,31.478047],[78.740303,31.532631],[78.845628,31.610115],[78.763092,31.668696],[78.706426,31.778626],[78.654071,31.821849],[78.739687,31.885376],[78.762476,31.946829],[78.599868,32.024982],[78.519796,32.123847],[78.469905,32.127901],[78.430485,32.211975],[78.511173,32.308108],[78.458818,32.379889],[78.472985,32.435454],[78.395377,32.530342],[78.518564,32.605978],[78.628202,32.630168],[78.741534,32.703706],[78.781571,32.607994],[78.760629,32.56363],[78.81052,32.436464],[78.970664,32.331873],[79.005772,32.375341],[79.103091,32.369782],[79.135736,32.472311],[79.252148,32.51672],[79.308199,32.596905],[79.27309,32.678025],[79.301423,32.728877],[79.224431,32.784729],[79.255844,32.942537],[79.162837,33.011804],[79.139431,33.117606],[79.162221,33.166202],[79.072294,33.228286],[79.022403,33.323328],[78.84686,33.421264],[78.74215,33.553501],[78.755085,33.623281],[78.692259,33.676575],[78.779723,33.732323],[78.758165,33.791019],[78.744614,33.980759],[78.656535,34.030359],[78.661462,34.086868],[78.750158,34.092815],[78.793273,34.132445],[78.9257,34.155719],[78.981751,34.318458],[79.039649,34.33427]]]]}},{type:"Feature",properties:{adcode:61e4,name:"陕西省",center:[108.948024,34.263161],centroid:[108.887567,35.263665],childrenNum:10,level:"province",subFeatureIndex:26,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[107.288474,37.00812],[107.288474,37.00812],[107.268764,37.099324],[107.336517,37.165628],[107.257677,37.337082],[107.284162,37.482036],[107.342061,37.515265],[107.348836,37.608226],[107.484959,37.706279],[107.499125,37.7659],[107.620465,37.775832],[107.65003,37.864688],[107.982022,37.787181],[108.025137,37.649926],[108.134159,37.621971],[108.219158,37.661295],[108.304158,37.638556],[108.440896,37.654663],[108.532671,37.690656],[108.611512,37.65419],[108.777815,37.683554],[108.799989,37.783871],[108.798141,37.93362],[108.82709,37.989285],[108.797525,38.047735],[108.871438,38.027471],[108.938575,37.920877],[109.017416,37.969949],[109.069155,38.091071],[108.963829,38.155085],[108.938575,38.207291],[109.051908,38.432146],[109.178792,38.520675],[109.276726,38.623121],[109.367269,38.627328],[109.338936,38.70161],[109.404226,38.720752],[109.511399,38.833633],[109.549587,38.805662],[109.624116,38.854603],[109.683862,38.935631],[109.665384,38.981691],[109.961035,39.191608],[110.217881,39.28105],[110.146432,39.455434],[110.243751,39.42355],[110.39096,39.31161],[110.434692,39.381016],[110.528315,39.380091],[110.604075,39.277345],[110.702626,39.27364],[110.740198,39.351874],[110.892335,39.509927],[111.134399,39.586513],[111.148566,39.531619],[111.064182,39.400899],[111.125776,39.366678],[111.247732,39.302351],[111.163348,39.152644],[111.138711,39.064897],[110.980414,38.970063],[111.009363,38.847614],[110.880016,38.618446],[110.920052,38.581973],[110.874473,38.453702],[110.77777,38.44105],[110.746973,38.366029],[110.661358,38.308773],[110.57759,38.297035],[110.565887,38.215283],[110.509221,38.192245],[110.501213,38.031713],[110.522771,37.954853],[110.59422,37.921821],[110.663821,37.803256],[110.758676,37.744139],[110.706321,37.705332],[110.796248,37.66319],[110.795017,37.566029],[110.745125,37.450693],[110.644111,37.435017],[110.630561,37.373228],[110.695234,37.34945],[110.690307,37.287115],[110.53509,37.137969],[110.444547,37.007164],[110.382953,37.021975],[110.425453,36.960325],[110.416214,36.790892],[110.447011,36.737687],[110.394656,36.676768],[110.496902,36.582175],[110.503677,36.487948],[110.45933,36.330969],[110.474112,36.248018],[110.447011,36.164495],[110.511684,35.879951],[110.549257,35.877527],[110.57759,35.701346],[110.609619,35.632321],[110.525851,35.44195],[110.477808,35.413672],[110.45009,35.327803],[110.39404,35.271647],[110.325671,35.014785],[110.257301,34.93487],[110.232664,34.803308],[110.241287,34.682361],[110.310272,34.608033],[110.379257,34.600646],[110.360779,34.516878],[110.403279,34.43352],[110.403279,34.43352],[110.503677,34.337234],[110.426685,34.275454],[110.43962,34.24331],[110.642264,34.16067],[110.590525,34.096778],[110.669365,33.939072],[110.587445,33.887929],[110.782698,33.795494],[110.877552,33.635238],[111.00382,33.578429],[111.02661,33.478675],[111.022914,33.475181],[111.022914,33.474682],[111.02661,33.474183],[110.996429,33.435745],[111.025994,33.330327],[110.984726,33.255308],[110.824582,33.158188],[110.745741,33.147167],[110.702626,33.097057],[110.59422,33.168706],[110.54125,33.255809],[110.468569,33.181226],[110.218497,33.163197],[110.164911,33.209265],[110.031252,33.191742],[109.852013,33.247803],[109.732521,33.231288],[109.619804,33.27532],[109.537268,33.2438],[109.438718,33.152177],[109.576073,33.110088],[109.688174,33.116603],[109.794731,33.066977],[109.76455,32.909391],[109.988752,32.886281],[110.10886,32.82999],[110.159367,32.767122],[110.156903,32.683061],[110.206179,32.633191],[110.153824,32.593376],[110.085454,32.613034],[110.017701,32.546987],[109.910528,32.592872],[109.816905,32.577244],[109.726978,32.608498],[109.631507,32.599929],[109.637051,32.540935],[109.575457,32.506629],[109.502776,32.389489],[109.495385,32.300522],[109.592703,32.219568],[109.621652,32.106617],[109.590855,32.012807],[109.631507,31.962059],[109.584696,31.900617],[109.638282,31.811172],[109.585928,31.726731],[109.281654,31.717061],[109.273646,31.801003],[109.195422,31.817782],[109.164009,31.877247],[108.988466,31.979317],[108.902235,31.984899],[108.734084,32.106617],[108.67249,32.104083],[108.509882,32.201343],[108.46923,32.270173],[108.312781,32.232222],[108.251187,32.273208],[108.179122,32.222099],[108.070717,32.233234],[107.979558,32.14614],[107.812022,32.24791],[107.75474,32.338445],[107.707929,32.331873],[107.680211,32.398078],[107.533002,32.383426],[107.456625,32.417778],[107.436299,32.529837],[107.382097,32.54043],[107.313727,32.489976],[107.263836,32.403129],[107.127098,32.482406],[107.080286,32.542448],[107.108004,32.600938],[107.066736,32.708741],[106.82344,32.705217],[106.733513,32.739446],[106.663296,32.690615],[106.585687,32.688097],[106.421231,32.616562],[106.347935,32.670974],[106.17424,32.697664],[106.076305,32.753537],[106.076305,32.758065],[106.076921,32.764103],[106.07261,32.764103],[106.093552,32.823956],[106.025798,32.85814],[105.825002,32.824962],[105.822538,32.770141],[105.719061,32.759575],[105.596489,32.699175],[105.563844,32.72485],[105.49917,32.911902],[105.590329,32.876734],[105.735691,32.905372],[105.917393,32.993739],[105.930944,33.177721],[105.965436,33.204759],[105.862574,33.234291],[105.74801,33.298827],[105.723372,33.390796],[105.82993,33.382802],[105.842248,33.490152],[105.956197,33.612818],[106.129276,33.604347],[106.187174,33.54652],[106.303587,33.604347],[106.447101,33.613316],[106.456956,33.533055],[106.54134,33.513103],[106.58076,33.575937],[106.539492,33.691013],[106.480362,33.715403],[106.461883,33.789528],[106.493296,33.846197],[106.41076,33.906304],[106.474202,33.970836],[106.501919,34.104706],[106.585071,34.149282],[106.526557,34.291768],[106.663912,34.24331],[106.717498,34.369342],[106.624491,34.410323],[106.610325,34.454244],[106.455108,34.531667],[106.334384,34.517864],[106.314058,34.578973],[106.419384,34.643482],[106.505615,34.74679],[106.575216,34.769893],[106.493296,34.941247],[106.494528,35.005964],[106.494528,35.005964],[106.5746,35.089236],[106.710723,35.100495],[106.838222,35.079933],[106.901664,35.094621],[107.08275,35.024095],[107.089526,34.976553],[107.189308,34.893166],[107.252134,34.880896],[107.286626,34.931927],[107.523763,34.909851],[107.561951,34.966747],[107.634016,34.950565],[107.804631,34.95694],[107.863761,34.996161],[107.757204,35.076016],[107.686371,35.217895],[107.651878,35.239889],[107.745501,35.311693],[107.867457,35.256014],[108.049159,35.254059],[108.174811,35.305345],[108.2401,35.256014],[108.352817,35.285812],[108.48894,35.275066],[108.614591,35.32878],[108.631222,35.418548],[108.618287,35.556908],[108.539447,35.605569],[108.517273,35.715921],[108.524664,35.839703],[108.498179,35.876072],[108.588722,35.950214],[108.656475,35.952636],[108.712526,36.13889],[108.646004,36.25429],[108.651548,36.384936],[108.618903,36.434052],[108.510498,36.474478],[108.495099,36.422498],[108.407636,36.458117],[108.340498,36.55911],[108.262274,36.549497],[108.194521,36.625405],[108.163724,36.563916],[108.007891,36.61628],[108.004811,36.683006],[107.939522,36.655651],[107.907493,36.751591],[107.720863,36.802391],[107.540393,36.828736],[107.478183,36.908674],[107.310032,36.912501],[107.288474,37.00812]]],[[[106.076305,32.753537],[106.07261,32.764103],[106.076921,32.764103],[106.076305,32.758065],[106.076305,32.753537]]],[[[111.022914,33.474682],[111.022914,33.475181],[111.02661,33.478675],[111.02661,33.474183],[111.022914,33.474682]]]]}},{type:"Feature",properties:{adcode:62e4,name:"甘肃省",center:[103.823557,36.058039],centroid:[100.823557,38.168039],childrenNum:14,level:"province",subFeatureIndex:27,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[106.494528,35.005964],[106.494528,35.005964],[106.493296,34.941247],[106.575216,34.769893],[106.505615,34.74679],[106.419384,34.643482],[106.314058,34.578973],[106.334384,34.517864],[106.455108,34.531667],[106.610325,34.454244],[106.624491,34.410323],[106.717498,34.369342],[106.663912,34.24331],[106.526557,34.291768],[106.585071,34.149282],[106.501919,34.104706],[106.474202,33.970836],[106.41076,33.906304],[106.493296,33.846197],[106.461883,33.789528],[106.480362,33.715403],[106.539492,33.691013],[106.58076,33.575937],[106.54134,33.513103],[106.456956,33.533055],[106.447101,33.613316],[106.303587,33.604347],[106.187174,33.54652],[106.129276,33.604347],[105.956197,33.612818],[105.842248,33.490152],[105.82993,33.382802],[105.723372,33.390796],[105.74801,33.298827],[105.862574,33.234291],[105.965436,33.204759],[105.930944,33.177721],[105.917393,32.993739],[105.735691,32.905372],[105.590329,32.876734],[105.49917,32.911902],[105.414171,32.921948],[105.391381,32.835017],[105.455439,32.737433],[105.347033,32.682558],[105.111128,32.59388],[105.026745,32.650322],[104.881999,32.600938],[104.845659,32.653848],[104.739717,32.635711],[104.643015,32.661908],[104.582653,32.722333],[104.458849,32.748504],[104.363994,32.822448],[104.294393,32.83552],[104.288234,32.94304],[104.378161,32.953081],[104.426204,33.0108],[104.337509,33.038392],[104.378161,33.109086],[104.303632,33.304328],[104.432979,33.325828],[104.292545,33.336326],[104.22048,33.404782],[104.155191,33.542531],[104.168741,33.611821],[104.046169,33.686533],[103.871243,33.68255],[103.778236,33.658648],[103.626099,33.727347],[103.520157,33.678566],[103.525085,33.798975],[103.349542,33.74327],[103.279325,33.806433],[103.153057,33.814884],[103.181391,33.900842],[103.124108,33.968354],[103.119797,34.034822],[103.178927,34.079931],[103.124108,34.16166],[102.973203,34.205217],[102.978747,34.249246],[102.911609,34.313022],[102.798276,34.272982],[102.599328,34.145321],[102.655994,34.113623],[102.471213,34.072993],[102.437336,34.087364],[102.391756,33.970836],[102.315996,33.994154],[102.237772,33.963392],[102.136142,33.965377],[102.234076,33.870046],[102.239619,33.788036],[102.299981,33.782566],[102.342481,33.725357],[102.33817,33.614313],[102.440416,33.57494],[102.462589,33.449724],[102.396684,33.40678],[102.264873,33.417269],[102.186649,33.332327],[102.217446,33.248303],[102.112736,33.287324],[102.08933,33.204759],[101.935345,33.186734],[101.865744,33.103072],[101.841723,33.184731],[101.769658,33.268816],[101.878063,33.315829],[101.885454,33.380804],[101.9452,33.437742],[101.907012,33.542032],[101.844186,33.602353],[101.769042,33.538541],[101.735781,33.49614],[101.622448,33.502127],[101.582412,33.675081],[101.501724,33.70296],[101.385312,33.644702],[101.238718,33.685039],[101.166653,33.660142],[101.191907,33.786047],[101.153718,33.844706],[100.999118,33.889419],[100.806329,34.155224],[100.764445,34.178987],[100.821727,34.317469],[100.895024,34.375268],[100.986799,34.374774],[101.054552,34.322905],[101.235022,34.325376],[101.331109,34.245289],[101.530057,34.21066],[101.622448,34.178492],[101.736397,34.079931],[101.84665,34.150272],[101.955055,34.10966],[101.965526,34.167601],[102.062229,34.227976],[102.067772,34.293746],[102.149692,34.271993],[102.189728,34.355018],[102.237156,34.343163],[102.237772,34.343163],[102.237156,34.343163],[102.237772,34.343163],[102.210054,34.399462],[102.210054,34.399462],[102.155852,34.507511],[102.003715,34.538074],[101.919947,34.621821],[101.917483,34.875497],[102.048062,34.910832],[102.094874,34.986848],[102.218677,35.058386],[102.29567,35.071609],[102.310452,35.128883],[102.402227,35.191006],[102.370814,35.262854],[102.279655,35.304857],[102.317228,35.433663],[102.407155,35.408308],[102.447807,35.437563],[102.504473,35.583189],[102.742226,35.495065],[102.808747,35.560315],[102.686175,35.772253],[102.78411,35.862496],[102.955957,35.861041],[102.971971,35.995247],[102.882044,36.082335],[102.941174,36.105058],[102.98737,36.193956],[103.068058,36.203612],[103.024326,36.257185],[102.830305,36.358439],[102.832153,36.357957],[102.831537,36.360848],[102.830305,36.362294],[102.769943,36.472072],[102.761936,36.568721],[102.606719,36.682526],[102.704654,36.792329],[102.587009,36.869912],[102.56114,36.919676],[102.450271,36.968453],[102.506321,37.019108],[102.488459,37.079278],[102.642444,37.099801],[102.599944,37.174687],[102.457662,37.24807],[102.428097,37.308534],[102.19712,37.420287],[102.102881,37.48441],[102.130598,37.544684],[102.035743,37.627184],[102.036359,37.684974],[101.946432,37.728051],[101.815853,37.65419],[101.791832,37.695864],[101.659405,37.733256],[101.597195,37.828308],[101.459224,37.866105],[101.362522,37.791437],[101.150639,37.876969],[100.887633,38.050562],[100.93814,38.160261],[100.825423,38.158849],[100.74843,38.239724],[100.619083,38.265567],[100.546402,38.246773],[100.474953,38.289052],[100.318505,38.329428],[100.261222,38.366498],[100.24028,38.441519],[100.064122,38.518802],[100.001296,38.466821],[100.093071,38.4073],[100.157744,38.309712],[100.182998,38.221864],[100.126332,38.231735],[99.937238,38.34163],[99.826985,38.370251],[99.65945,38.449017],[99.555972,38.520207],[99.50916,38.608628],[99.450646,38.60442],[99.361951,38.718418],[99.222133,38.788875],[99.068764,38.896991],[99.1088,38.946334],[98.951735,38.987737],[98.816845,39.085799],[98.743548,39.086728],[98.584635,38.930046],[98.457752,38.952849],[98.383839,39.029581],[98.280977,39.027257],[98.251412,38.891403],[98.094964,38.786077],[98.009348,38.859262],[97.828878,38.930046],[97.701379,38.963085],[97.679205,39.010522],[97.371235,39.14058],[97.220946,39.192999],[96.962867,39.198564],[97.012142,39.141972],[96.969643,39.097873],[96.940693,38.907701],[96.983809,38.869046],[97.009063,38.702544],[97.057722,38.672654],[97.055874,38.5946],[96.975802,38.559519],[96.7941,38.60816],[96.780549,38.504289],[96.6666,38.483684],[96.698013,38.422302],[96.626564,38.356177],[96.665369,38.230325],[96.46334,38.27778],[96.335841,38.246303],[96.313051,38.162142],[96.221892,38.148969],[96.109175,38.187072],[96.063596,38.172962],[95.856024,38.284355],[95.83693,38.343977],[95.702039,38.400736],[95.51849,38.295156],[95.320157,38.32051],[95.261027,38.301261],[95.121825,38.417615],[94.973999,38.430271],[94.810775,38.385261],[94.67958,38.387137],[94.527443,38.36556],[94.511429,38.445268],[94.370379,38.762753],[93.885018,38.720752],[93.800019,38.750622],[93.769838,38.821047],[93.884403,38.826175],[93.729186,38.92446],[93.453245,38.915615],[93.274007,38.89606],[93.179152,38.923994],[93.198246,39.045847],[93.131725,39.108088],[93.142196,39.160531],[92.978356,39.143364],[92.938936,39.169809],[92.866871,39.138723],[92.489916,39.09973],[92.41046,39.038412],[92.366728,39.059322],[92.339011,39.236575],[92.52564,39.368528],[92.639589,39.514543],[92.745531,39.868137],[92.796654,40.15364],[92.906907,40.310773],[92.928465,40.572609],[93.506216,40.648464],[93.760599,40.664804],[93.820961,40.793574],[93.809874,40.879583],[94.01067,41.114857],[94.184365,41.268392],[94.534219,41.50586],[94.750413,41.538114],[94.861898,41.668309],[95.135991,41.772811],[95.29552,41.569456],[95.39407,41.693333],[95.57146,41.796011],[95.677402,41.830795],[95.855408,41.849516],[96.038342,41.924794],[96.117183,41.985753],[96.13874,42.054207],[96.077147,42.149652],[96.178161,42.217929],[96.040806,42.3264],[96.06606,42.414367],[95.978596,42.436892],[96.02356,42.54234],[96.103632,42.604026],[96.386348,42.727655],[96.742361,42.757096],[96.968411,42.756218],[97.172903,42.795305],[97.307177,42.565259],[97.84674,41.656687],[97.613915,41.477176],[97.629314,41.440407],[97.971776,41.097726],[98.25018,40.939271],[98.333332,40.918929],[98.344419,40.568518],[98.627751,40.677965],[98.569853,40.746901],[98.668403,40.772734],[98.689345,40.691576],[98.801446,40.609411],[98.790975,40.705185],[98.984996,40.782701],[99.041662,40.693844],[99.102025,40.676603],[99.172858,40.747354],[99.174705,40.858317],[99.565827,40.846551],[99.673,40.932943],[100.057346,40.908077],[100.107853,40.875511],[100.237201,40.716977],[100.242744,40.618495],[100.169447,40.541242],[100.169447,40.277458],[100.002528,40.197528],[99.927383,40.063947],[99.488218,39.875943],[99.672384,39.887881],[99.822058,39.85987],[99.904593,39.785886],[100.040716,39.756913],[100.128179,39.702155],[100.250135,39.68512],[100.314193,39.606799],[100.326512,39.509003],[100.500823,39.4813],[100.498975,39.400437],[100.619699,39.38749],[100.842053,39.405523],[100.842669,39.199955],[100.864227,39.106695],[100.835278,39.025863],[100.961545,39.005873],[100.969553,38.9468],[101.117378,38.97518],[101.228863,39.02075],[101.198682,38.943077],[101.24303,38.86066],[101.334189,38.848545],[101.307087,38.802865],[101.562702,38.712816],[101.601506,38.6549],[101.679115,38.690869],[101.777049,38.660507],[101.941505,38.808926],[102.075164,38.891403],[101.926106,39.000758],[101.830636,39.093229],[102.280887,39.190217],[102.45335,39.25511],[102.601792,39.172129],[103.007696,39.09973],[103.344615,39.331514],[103.595302,39.386565],[103.839214,39.460516],[103.964865,39.455434],[104.091133,39.418466],[104.047401,39.297721],[104.177364,39.15218],[104.207546,39.083941],[104.168125,38.940285],[104.044322,38.895128],[103.85954,38.64462],[103.416063,38.404956],[103.507838,38.281068],[103.53494,38.156497],[103.369868,38.089658],[103.362477,38.037368],[103.401897,37.861854],[103.676606,37.783871],[103.948235,37.564606],[104.183524,37.406981],[104.287002,37.42789],[104.437907,37.445943],[104.679971,37.407931],[104.713848,37.32947],[104.632544,37.299015],[104.600515,37.242831],[104.638087,37.201857],[104.775442,37.246641],[104.85613,37.211864],[104.95468,37.040125],[105.165331,36.995218],[105.190585,36.886185],[105.244787,36.894798],[105.334714,36.800953],[105.319932,36.742961],[105.218302,36.730494],[105.22015,36.631167],[105.281744,36.522575],[105.319932,36.536038],[105.398156,36.430683],[105.401236,36.370002],[105.473301,36.298185],[105.460366,36.223887],[105.513337,36.150003],[105.343954,36.033965],[105.333483,35.887707],[105.392613,35.865405],[105.481924,35.727094],[105.570003,35.716407],[105.671017,35.749434],[105.754785,35.730494],[105.690727,35.698431],[105.847176,35.490681],[105.868734,35.53987],[106.015943,35.52234],[106.070762,35.491655],[106.057827,35.488245],[105.897683,35.451698],[105.894603,35.413672],[106.054132,35.449261],[106.061523,35.457547],[106.064603,35.431225],[106.073226,35.421474],[106.079385,35.427325],[106.107102,35.364894],[106.174856,35.438538],[106.319601,35.265296],[106.472354,35.310716],[106.503767,35.415135],[106.440941,35.526723],[106.476666,35.580756],[106.434782,35.688712],[106.501304,35.737779],[106.501304,35.735836],[106.503767,35.736322],[106.504383,35.738265],[106.737208,35.689198],[106.86594,35.737779],[106.92199,35.803316],[106.849925,35.887707],[106.950939,36.004444],[106.957715,36.091522],[106.858548,36.206992],[106.858548,36.206992],[106.599238,36.274552],[106.599238,36.274552],[106.505615,36.265869],[106.488369,36.400348],[106.521014,36.479289],[106.401521,36.546133],[106.471738,36.581214],[106.519782,36.708912],[106.519782,36.708912],[106.589383,36.750153],[106.631883,36.723301],[106.658368,36.811972],[106.595542,36.940243],[106.666991,37.01672],[106.605397,37.127475],[106.750143,37.098847],[106.777244,37.156569],[106.777244,37.156569],[106.891193,37.098369],[107.030395,37.140831],[107.095685,37.115548],[107.180685,37.143692],[107.268764,37.099324],[107.288474,37.00812],[107.288474,37.00812],[107.310032,36.912501],[107.478183,36.908674],[107.540393,36.828736],[107.720863,36.802391],[107.907493,36.751591],[107.939522,36.655651],[108.004811,36.683006],[108.007891,36.61628],[108.163724,36.563916],[108.194521,36.625405],[108.262274,36.549497],[108.340498,36.55911],[108.407636,36.458117],[108.495099,36.422498],[108.510498,36.474478],[108.618903,36.434052],[108.651548,36.384936],[108.646004,36.25429],[108.712526,36.13889],[108.656475,35.952636],[108.588722,35.950214],[108.498179,35.876072],[108.524664,35.839703],[108.517273,35.715921],[108.539447,35.605569],[108.618287,35.556908],[108.631222,35.418548],[108.614591,35.32878],[108.48894,35.275066],[108.352817,35.285812],[108.2401,35.256014],[108.174811,35.305345],[108.049159,35.254059],[107.867457,35.256014],[107.745501,35.311693],[107.651878,35.239889],[107.686371,35.217895],[107.757204,35.076016],[107.863761,34.996161],[107.804631,34.95694],[107.634016,34.950565],[107.561951,34.966747],[107.523763,34.909851],[107.286626,34.931927],[107.252134,34.880896],[107.189308,34.893166],[107.089526,34.976553],[107.08275,35.024095],[106.901664,35.094621],[106.838222,35.079933],[106.710723,35.100495],[106.5746,35.089236],[106.494528,35.005964]]],[[[106.070762,35.491655],[106.078153,35.489707],[106.078153,35.489707],[106.071994,35.463395],[106.061523,35.457547],[106.054132,35.449261],[106.057827,35.488245],[106.070762,35.491655]]],[[[106.073226,35.421474],[106.064603,35.431225],[106.061523,35.457547],[106.071994,35.463395],[106.06953,35.458034],[106.071378,35.449261],[106.079385,35.427325],[106.073226,35.421474]]],[[[102.831537,36.360848],[102.832153,36.357957],[102.830305,36.358439],[102.830305,36.362294],[102.831537,36.360848]]],[[[106.503767,35.736322],[106.501304,35.735836],[106.501304,35.737779],[106.504383,35.738265],[106.503767,35.736322]]]]}},{type:"Feature",properties:{adcode:63e4,name:"青海省",center:[101.778916,36.623178],centroid:[96.043531,35.726402],childrenNum:8,level:"province",subFeatureIndex:28,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[91.001807,33.116102],[91.001807,33.116102],[90.805938,33.114599],[90.70554,33.135645],[90.486881,33.266815],[90.405577,33.260311],[90.332896,33.310829],[90.246665,33.42426],[90.092064,33.469691],[90.080977,33.530561],[90.01076,33.553501],[89.984275,33.61232],[90.008296,33.688026],[89.907282,33.74128],[89.933768,33.796986],[89.837065,33.869052],[89.795181,33.865575],[89.691704,33.957933],[89.635037,34.0492],[89.655979,34.096778],[89.818587,34.174037],[89.825362,34.293746],[89.872174,34.335752],[89.801957,34.390575],[89.823515,34.455231],[89.798877,34.628714],[89.72558,34.660709],[89.732356,34.732039],[89.799493,34.74384],[89.867862,34.810677],[89.821667,34.902981],[89.707102,34.919663],[89.654747,34.883351],[89.560509,34.938794],[89.593153,35.104412],[89.513081,35.139158],[89.449639,35.226693],[89.532175,35.285323],[89.497067,35.361479],[89.68616,35.414647],[89.744058,35.479963],[89.700327,35.537435],[89.765616,35.599732],[89.747138,35.751862],[89.801957,35.847948],[89.549422,35.858132],[89.429929,35.916302],[89.418843,36.04606],[89.476125,36.021868],[89.638117,36.04993],[89.711414,36.092972],[89.941159,36.067343],[89.937463,36.130675],[89.999057,36.169809],[90.028006,36.25815],[90.145651,36.238849],[90.128405,36.208923],[90.234962,36.161597],[90.430215,36.133091],[90.526917,36.148553],[90.66304,36.134058],[90.776373,36.086203],[90.841046,36.01848],[90.922966,36.029126],[90.979017,36.106992],[91.09235,36.088621],[91.124994,36.115693],[91.07264,36.299149],[91.026444,36.323738],[91.05293,36.432608],[91.035683,36.529788],[90.7388,36.58746],[90.720938,36.708912],[90.735105,36.827778],[90.853981,36.915371],[90.983944,36.913458],[91.181045,37.025318],[91.303617,37.01242],[91.280211,37.163721],[91.1909,37.205669],[91.192132,37.27807],[91.134849,37.32614],[91.099741,37.447843],[91.057241,37.483936],[90.958075,37.477763],[90.863836,37.534246],[90.882314,37.575513],[90.776373,37.6504],[90.519526,37.73089],[90.516446,38.207291],[90.530613,38.32004],[90.361846,38.300322],[90.352607,38.233615],[90.280542,38.238315],[90.137644,38.340692],[90.111774,38.477595],[90.315034,38.501948],[90.424671,38.492114],[90.463476,38.556711],[90.610685,38.596003],[90.619308,38.664245],[90.831191,38.667982],[91.307928,38.751089],[91.446515,38.813588],[91.87952,38.884417],[91.966368,38.930976],[92.173323,38.960758],[92.263866,39.002153],[92.38459,39.000758],[92.41046,39.038412],[92.489916,39.09973],[92.866871,39.138723],[92.938936,39.169809],[92.978356,39.143364],[93.142196,39.160531],[93.131725,39.108088],[93.198246,39.045847],[93.179152,38.923994],[93.274007,38.89606],[93.453245,38.915615],[93.729186,38.92446],[93.884403,38.826175],[93.769838,38.821047],[93.800019,38.750622],[93.885018,38.720752],[94.370379,38.762753],[94.511429,38.445268],[94.527443,38.36556],[94.67958,38.387137],[94.810775,38.385261],[94.973999,38.430271],[95.121825,38.417615],[95.261027,38.301261],[95.320157,38.32051],[95.51849,38.295156],[95.702039,38.400736],[95.83693,38.343977],[95.856024,38.284355],[96.063596,38.172962],[96.109175,38.187072],[96.221892,38.148969],[96.313051,38.162142],[96.335841,38.246303],[96.46334,38.27778],[96.665369,38.230325],[96.626564,38.356177],[96.698013,38.422302],[96.6666,38.483684],[96.780549,38.504289],[96.7941,38.60816],[96.975802,38.559519],[97.055874,38.5946],[97.057722,38.672654],[97.009063,38.702544],[96.983809,38.869046],[96.940693,38.907701],[96.969643,39.097873],[97.012142,39.141972],[96.962867,39.198564],[97.220946,39.192999],[97.371235,39.14058],[97.679205,39.010522],[97.701379,38.963085],[97.828878,38.930046],[98.009348,38.859262],[98.094964,38.786077],[98.251412,38.891403],[98.280977,39.027257],[98.383839,39.029581],[98.457752,38.952849],[98.584635,38.930046],[98.743548,39.086728],[98.816845,39.085799],[98.951735,38.987737],[99.1088,38.946334],[99.068764,38.896991],[99.222133,38.788875],[99.361951,38.718418],[99.450646,38.60442],[99.50916,38.608628],[99.555972,38.520207],[99.65945,38.449017],[99.826985,38.370251],[99.937238,38.34163],[100.126332,38.231735],[100.182998,38.221864],[100.157744,38.309712],[100.093071,38.4073],[100.001296,38.466821],[100.064122,38.518802],[100.24028,38.441519],[100.261222,38.366498],[100.318505,38.329428],[100.474953,38.289052],[100.546402,38.246773],[100.619083,38.265567],[100.74843,38.239724],[100.825423,38.158849],[100.93814,38.160261],[100.887633,38.050562],[101.150639,37.876969],[101.362522,37.791437],[101.459224,37.866105],[101.597195,37.828308],[101.659405,37.733256],[101.791832,37.695864],[101.815853,37.65419],[101.946432,37.728051],[102.036359,37.684974],[102.035743,37.627184],[102.130598,37.544684],[102.102881,37.48441],[102.19712,37.420287],[102.428097,37.308534],[102.457662,37.24807],[102.599944,37.174687],[102.642444,37.099801],[102.488459,37.079278],[102.506321,37.019108],[102.450271,36.968453],[102.56114,36.919676],[102.587009,36.869912],[102.704654,36.792329],[102.606719,36.682526],[102.761936,36.568721],[102.769943,36.472072],[102.830305,36.362294],[102.830305,36.358439],[103.024326,36.257185],[103.068058,36.203612],[102.98737,36.193956],[102.941174,36.105058],[102.882044,36.082335],[102.971971,35.995247],[102.955957,35.861041],[102.78411,35.862496],[102.686175,35.772253],[102.808747,35.560315],[102.742226,35.495065],[102.504473,35.583189],[102.447807,35.437563],[102.407155,35.408308],[102.317228,35.433663],[102.279655,35.304857],[102.370814,35.262854],[102.402227,35.191006],[102.310452,35.128883],[102.29567,35.071609],[102.218677,35.058386],[102.094874,34.986848],[102.048062,34.910832],[101.917483,34.875497],[101.919947,34.621821],[102.003715,34.538074],[102.155852,34.507511],[102.210054,34.399462],[102.210054,34.399462],[102.237772,34.343163],[102.237156,34.343163],[102.237772,34.343163],[102.237156,34.343163],[102.189728,34.355018],[102.149692,34.271993],[102.067772,34.293746],[102.062229,34.227976],[101.965526,34.167601],[101.955055,34.10966],[101.84665,34.150272],[101.736397,34.079931],[101.622448,34.178492],[101.530057,34.21066],[101.331109,34.245289],[101.235022,34.325376],[101.054552,34.322905],[100.986799,34.374774],[100.895024,34.375268],[100.821727,34.317469],[100.764445,34.178987],[100.806329,34.155224],[100.999118,33.889419],[101.153718,33.844706],[101.191907,33.786047],[101.166653,33.660142],[101.238718,33.685039],[101.385312,33.644702],[101.501724,33.70296],[101.582412,33.675081],[101.622448,33.502127],[101.735781,33.49614],[101.769042,33.538541],[101.769658,33.447728],[101.695745,33.433748],[101.64955,33.323328],[101.739477,33.265815],[101.625528,33.100566],[101.486326,33.227285],[101.405022,33.225783],[101.393935,33.157687],[101.297232,33.262313],[101.183283,33.270317],[101.11553,33.194746],[101.169733,33.100566],[101.183899,32.984204],[101.129081,32.989725],[101.124153,32.909893],[101.237486,32.824962],[101.22332,32.725856],[101.157414,32.661404],[101.075494,32.683061],[100.93198,32.600433],[100.690532,32.678025],[100.645568,32.526306],[100.54517,32.569681],[100.516837,32.630168],[100.399809,32.756556],[100.339447,32.719313],[100.258759,32.742466],[100.208252,32.606482],[100.088143,32.668959],[100.139266,32.724346],[100.123252,32.837028],[100.038252,32.928979],[99.956332,32.948061],[99.877492,33.045915],[99.854086,32.945048],[99.788181,32.956596],[99.763543,32.778693],[99.607711,32.780705],[99.558436,32.839039],[99.385973,32.900349],[99.268328,32.878744],[99.235067,32.982197],[99.179633,33.044912],[99.002242,33.08252],[98.858728,33.150674],[98.759562,33.277321],[98.779272,33.37181],[98.734309,33.409278],[98.742316,33.477677],[98.648077,33.549014],[98.61728,33.63723],[98.6567,33.647193],[98.539056,33.746752],[98.462064,33.849178],[98.406629,33.867065],[98.440506,33.981255],[98.401702,34.08786],[98.21076,34.078444],[98.051848,34.115604],[97.937283,34.196804],[97.937283,34.196804],[97.834421,34.208186],[97.665654,34.126997],[97.70261,34.036805],[97.660111,33.956444],[97.458698,33.886935],[97.388481,33.884452],[97.435293,33.680558],[97.415583,33.605343],[97.52522,33.575937],[97.552321,33.465698],[97.625618,33.461705],[97.753733,33.410277],[97.676125,33.340825],[97.621306,33.334327],[97.576343,33.221779],[97.487648,33.168205],[97.487648,33.10658],[97.542466,33.036385],[97.523988,32.988721],[97.373699,32.956094],[97.386018,32.779196],[97.42359,32.704713],[97.543698,32.621602],[97.730944,32.527315],[97.670582,32.517225],[97.472249,32.54497],[97.448843,32.586823],[97.334895,32.514198],[97.388481,32.501583],[97.341054,32.441009],[97.387865,32.427374],[97.424822,32.323278],[97.371235,32.273208],[97.299786,32.294959],[97.264062,32.183621],[97.308409,32.074682],[97.130403,32.04375],[97.008447,32.067076],[96.894498,32.013822],[96.722651,32.013314],[96.81073,31.894521],[96.760223,31.856922],[96.840295,31.720623],[96.775006,31.673788],[96.616093,31.736908],[96.576057,31.712989],[96.468268,31.769978],[96.389428,31.919917],[96.253921,31.929566],[96.176313,31.777608],[96.252689,31.69619],[96.204646,31.598904],[96.160298,31.600943],[96.135661,31.702299],[96.041422,31.734364],[95.982908,31.816765],[95.89914,31.817273],[95.825227,31.681935],[95.779648,31.74912],[95.618272,31.783712],[95.546823,31.739961],[95.439649,31.831508],[95.360809,31.959013],[95.454432,32.062006],[95.406389,32.182102],[95.312766,32.148673],[95.26965,32.194761],[95.241317,32.32075],[95.10581,32.259042],[95.096571,32.322267],[95.261643,32.348049],[95.218527,32.397067],[95.081789,32.384942],[94.985086,32.421819],[94.912405,32.415758],[94.889616,32.472311],[94.80708,32.486444],[94.772587,32.555057],[94.614291,32.673492],[94.53853,32.599425],[94.395016,32.594385],[94.371611,32.524793],[94.196684,32.516216],[94.136322,32.433939],[93.958931,32.484929],[93.861613,32.466253],[93.820345,32.549509],[93.654657,32.57321],[93.618933,32.522775],[93.516687,32.475844],[93.4631,32.556065],[93.385492,32.525297],[93.239514,32.662411],[93.069515,32.626137],[93.019624,32.737433],[92.877342,32.697161],[92.686401,32.765109],[92.63651,32.720319],[92.355641,32.764606],[92.255243,32.720823],[92.198577,32.755046],[92.227526,32.820939],[92.145606,32.885779],[91.955897,32.820437],[91.896766,32.907884],[91.785281,32.944044],[91.58079,33.039395],[91.49887,33.109086],[91.436044,33.065974],[91.262349,33.141156],[91.134849,33.073495],[91.001807,33.116102]]]]}},{type:"Feature",properties:{adcode:64e4,name:"宁夏回族自治区",center:[106.278179,38.46637],centroid:[106.169867,37.291331],childrenNum:5,level:"province",subFeatureIndex:29,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[106.06953,35.458034],[106.071994,35.463395],[106.078153,35.489707],[106.078153,35.489707],[106.070762,35.491655],[106.015943,35.52234],[105.868734,35.53987],[105.847176,35.490681],[105.690727,35.698431],[105.754785,35.730494],[105.671017,35.749434],[105.570003,35.716407],[105.481924,35.727094],[105.392613,35.865405],[105.333483,35.887707],[105.343954,36.033965],[105.513337,36.150003],[105.460366,36.223887],[105.473301,36.298185],[105.401236,36.370002],[105.398156,36.430683],[105.319932,36.536038],[105.281744,36.522575],[105.22015,36.631167],[105.218302,36.730494],[105.319932,36.742961],[105.334714,36.800953],[105.244787,36.894798],[105.190585,36.886185],[105.165331,36.995218],[104.95468,37.040125],[104.85613,37.211864],[104.775442,37.246641],[104.638087,37.201857],[104.600515,37.242831],[104.632544,37.299015],[104.713848,37.32947],[104.679971,37.407931],[104.437907,37.445943],[104.287002,37.42789],[104.407726,37.464467],[104.419429,37.511943],[104.801311,37.538516],[104.866601,37.566503],[105.024281,37.579781],[105.111128,37.633818],[105.315004,37.702018],[105.598952,37.699178],[105.622974,37.778669],[105.760944,37.799947],[105.80406,37.861854],[105.799749,37.940227],[105.840401,38.003902],[105.780655,38.084949],[105.775111,38.186601],[105.86627,38.296565],[105.821307,38.366967],[105.874277,38.593197],[105.852719,38.641349],[105.90569,38.731488],[105.897683,38.788875],[106.003625,38.874636],[105.97098,38.909097],[106.060907,38.968667],[106.096631,39.08487],[106.145907,39.153108],[106.283877,39.14522],[106.284493,39.270397],[106.402753,39.291701],[106.506231,39.269934],[106.602318,39.375466],[106.683622,39.357426],[106.751375,39.381478],[106.806809,39.318554],[106.795723,39.214327],[106.859164,39.107623],[106.96757,39.054676],[106.954019,38.941215],[106.709491,38.718885],[106.66268,38.601614],[106.647897,38.470569],[106.601702,38.392295],[106.482825,38.319571],[106.546883,38.269794],[106.768621,38.174843],[107.014997,38.120261],[107.19054,38.154144],[107.329742,38.087774],[107.438147,37.992586],[107.419669,37.940699],[107.49235,37.944945],[107.65003,37.864688],[107.620465,37.775832],[107.499125,37.7659],[107.484959,37.706279],[107.348836,37.608226],[107.342061,37.515265],[107.284162,37.482036],[107.257677,37.337082],[107.336517,37.165628],[107.268764,37.099324],[107.180685,37.143692],[107.095685,37.115548],[107.030395,37.140831],[106.891193,37.098369],[106.777244,37.156569],[106.777244,37.156569],[106.750143,37.098847],[106.605397,37.127475],[106.666991,37.01672],[106.595542,36.940243],[106.658368,36.811972],[106.631883,36.723301],[106.589383,36.750153],[106.519782,36.708912],[106.519782,36.708912],[106.471738,36.581214],[106.401521,36.546133],[106.521014,36.479289],[106.488369,36.400348],[106.505615,36.265869],[106.599238,36.274552],[106.599238,36.274552],[106.858548,36.206992],[106.858548,36.206992],[106.957715,36.091522],[106.950939,36.004444],[106.849925,35.887707],[106.92199,35.803316],[106.86594,35.737779],[106.737208,35.689198],[106.504383,35.738265],[106.501304,35.737779],[106.434782,35.688712],[106.476666,35.580756],[106.440941,35.526723],[106.503767,35.415135],[106.472354,35.310716],[106.319601,35.265296],[106.174856,35.438538],[106.107102,35.364894],[106.079385,35.427325],[106.071378,35.449261],[106.073226,35.450236],[106.073842,35.45511],[106.06953,35.458034]]],[[[106.057827,35.488245],[106.054132,35.449261],[105.894603,35.413672],[105.897683,35.451698],[106.057827,35.488245]]],[[[106.071378,35.449261],[106.06953,35.458034],[106.073842,35.45511],[106.073226,35.450236],[106.071378,35.449261]]]]}},{type:"Feature",properties:{adcode:65e4,name:"新疆维吾尔自治区",center:[87.617733,43.792818],centroid:[85.294712,41.371801],childrenNum:23,level:"province",subFeatureIndex:30,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[79.039649,34.33427],[78.958961,34.386132],[78.878273,34.391563],[78.742766,34.454737],[78.708274,34.522301],[78.634977,34.538074],[78.58139,34.505539],[78.542586,34.574539],[78.436029,34.543496],[78.427405,34.594243],[78.280812,34.623298],[78.267261,34.705482],[78.213059,34.717778],[78.237696,34.882369],[78.182262,34.936832],[78.201972,34.974592],[78.123131,35.036833],[78.124979,35.108327],[78.062769,35.11469],[78.01719,35.22816],[78.013494,35.36587],[78.136066,35.49263],[78.009799,35.491655],[77.914944,35.464857],[77.816394,35.518445],[77.690742,35.448287],[77.518895,35.481912],[77.396939,35.467781],[77.307628,35.540356],[77.195527,35.519419],[77.072339,35.590974],[76.967013,35.591947],[76.83705,35.66198],[76.76129,35.65566],[76.69292,35.747492],[76.593754,35.772253],[76.566037,35.819328],[76.59745,35.895947],[76.54879,35.919209],[76.365857,35.82418],[76.298719,35.841643],[76.147198,35.833397],[76.16506,35.909033],[76.104082,36.018964],[75.961184,36.051381],[75.942706,36.137923],[76.016619,36.165461],[76.011691,36.229197],[76.060967,36.225335],[75.989518,36.340127],[76.035097,36.409017],[75.945786,36.588421],[75.871873,36.66621],[75.724048,36.750632],[75.537418,36.773161],[75.536802,36.730015],[75.458578,36.720903],[75.425933,36.778912],[75.413614,36.954588],[75.244847,36.963194],[75.130898,37.010987],[75.032348,37.01672],[74.893762,36.939764],[74.84695,37.056839],[74.739161,37.028185],[74.70898,37.084529],[74.56793,37.032961],[74.498944,37.072595],[74.465068,37.147031],[74.511263,37.239973],[74.665864,37.235686],[74.727458,37.282831],[74.816153,37.216629],[74.911008,37.23378],[74.927022,37.277594],[75.125971,37.322334],[75.153072,37.414109],[75.069304,37.513367],[75.035428,37.501026],[74.940573,37.558914],[74.891914,37.668399],[75.006478,37.771102],[74.917167,37.844847],[74.911008,37.967118],[74.821697,38.102842],[74.789668,38.324734],[74.868508,38.404018],[74.862965,38.484152],[74.792747,38.536121],[74.717603,38.542205],[74.639995,38.599744],[74.506336,38.63761],[74.229779,38.656302],[74.147859,38.676858],[74.068403,38.585714],[74.090577,38.542205],[73.926121,38.536121],[73.89902,38.579166],[73.799237,38.610966],[73.757353,38.719818],[73.769056,38.775815],[73.699455,38.857865],[73.767824,38.941215],[73.826339,38.917012],[73.820179,39.041665],[73.743187,39.029581],[73.719781,39.108088],[73.639709,39.220353],[73.542391,39.269471],[73.554094,39.350023],[73.502355,39.383791],[73.592898,39.412457],[73.61076,39.466059],[73.745651,39.461902],[73.868223,39.482686],[73.953838,39.600345],[73.905795,39.742193],[73.841737,39.756453],[73.845433,39.831389],[73.907027,39.873647],[73.910722,39.934693],[73.980324,40.004851],[73.943367,40.015849],[74.023439,40.085008],[74.26304,40.125281],[74.356662,40.089128],[74.442894,40.137175],[74.577169,40.260567],[74.673255,40.278828],[74.697893,40.344527],[74.908544,40.339055],[74.795211,40.443412],[74.819233,40.505767],[74.891914,40.507587],[74.973218,40.460258],[75.102565,40.439769],[75.13521,40.463445],[75.242383,40.448876],[75.355716,40.538059],[75.432093,40.563518],[75.550353,40.648917],[75.636584,40.624399],[75.646439,40.516684],[75.733287,40.474369],[75.669845,40.363678],[75.709265,40.28111],[75.831221,40.327196],[75.921764,40.291151],[75.986438,40.381911],[76.176147,40.381455],[76.279625,40.439314],[76.333212,40.343615],[76.442233,40.391482],[76.539551,40.4639],[76.556798,40.542606],[76.657196,40.620312],[76.676906,40.696113],[76.646725,40.760045],[76.731724,40.818935],[76.761905,40.954185],[76.85368,40.976323],[76.885709,41.027348],[77.002122,41.073373],[77.091433,41.062546],[77.169041,41.009291],[77.296541,41.004776],[77.363062,41.040888],[77.476395,40.999357],[77.591576,40.992132],[77.829328,41.059388],[77.814546,41.134238],[77.905089,41.185141],[77.972842,41.172982],[78.129291,41.228354],[78.162551,41.382521],[78.324544,41.384316],[78.458818,41.41349],[78.580774,41.481659],[78.650375,41.467314],[78.739071,41.555578],[78.825302,41.560503],[78.959577,41.652663],[79.021787,41.657134],[79.138199,41.722814],[79.21704,41.725493],[79.326061,41.809391],[79.361169,41.796457],[79.462799,41.848625],[79.550879,41.833915],[79.640806,41.884717],[79.776313,41.892734],[79.852689,42.015544],[79.918594,42.041322],[80.14218,42.034656],[80.193303,42.081301],[80.139717,42.151427],[80.168666,42.200202],[80.28631,42.232993],[80.283847,42.320649],[80.229028,42.358241],[80.206238,42.428943],[80.265368,42.502211],[80.164354,42.627363],[80.228412,42.692923],[80.261673,42.825592],[80.417505,42.838755],[80.500041,42.879544],[80.602903,42.89445],[80.487106,42.94878],[80.378701,43.031497],[80.593048,43.133319],[80.79446,43.137248],[80.777214,43.30816],[80.69283,43.32035],[80.761199,43.446456],[80.75504,43.49422],[80.522215,43.816724],[80.511128,43.906887],[80.453846,43.989596],[80.449534,44.077778],[80.3941,44.127189],[80.413194,44.264461],[80.350368,44.484713],[80.411962,44.605392],[80.313412,44.704987],[80.200695,44.75642],[80.169898,44.844727],[79.999283,44.793797],[79.969102,44.877383],[79.887798,44.909173],[80.144644,45.058985],[80.24381,45.031507],[80.328194,45.069973],[80.404571,45.049264],[80.493882,45.126991],[80.599207,45.10588],[80.731634,45.156111],[80.897938,45.127413],[80.93551,45.16033],[81.024821,45.162862],[81.111669,45.218522],[81.170183,45.210935],[81.44982,45.265707],[81.575471,45.307803],[81.634601,45.357856],[81.78797,45.383497],[81.921013,45.233272],[82.052824,45.25602],[82.109491,45.211357],[82.294272,45.247596],[82.487061,45.181],[82.58746,45.224001],[82.60101,45.346083],[82.546808,45.425925],[82.281954,45.538772],[82.266555,45.620015],[82.289961,45.7166],[82.340468,45.772552],[82.342932,45.935076],[82.461808,45.979999],[82.518474,46.153938],[82.726662,46.494818],[82.829524,46.772551],[82.876335,46.82375],[82.937929,47.014193],[82.993364,47.06557],[83.02724,47.215341],[83.15474,47.236063],[83.257602,47.173057],[83.370318,47.178751],[83.418978,47.118934],[83.463325,47.131961],[83.576042,47.059049],[83.766367,47.026838],[83.932671,46.970117],[84.002888,46.990527],[84.086656,46.965217],[84.195061,47.003586],[84.37122,46.993384],[84.425422,47.00889],[84.506726,46.972975],[84.748175,47.009706],[84.849189,46.95705],[84.934188,46.863857],[84.987159,46.918239],[85.082014,46.939895],[85.276651,47.068831],[85.325926,47.044781],[85.545816,47.057826],[85.582772,47.14295],[85.682555,47.222655],[85.675163,47.318063],[85.701649,47.384138],[85.614801,47.497853],[85.617881,47.550781],[85.547048,48.00833],[85.529186,48.02714],[85.587084,48.191738],[85.678243,48.266272],[85.695489,48.335129],[85.791576,48.418986],[85.916612,48.438043],[86.225813,48.432485],[86.305269,48.491999],[86.416138,48.481688],[86.579978,48.538768],[86.640956,48.629012],[86.780774,48.73133],[86.754289,48.78458],[86.822042,48.849193],[86.757985,48.894844],[86.732731,48.995444],[86.836209,49.051159],[86.88918,49.132656],[87.088128,49.13383],[87.112766,49.155748],[87.239033,49.114644],[87.388707,49.098193],[87.43675,49.075073],[87.511894,49.101718],[87.49896,49.141268],[87.821096,49.173745],[87.867291,49.108769],[87.833415,49.050374],[87.911639,48.980132],[87.87653,48.949099],[87.763198,48.926697],[87.742256,48.881074],[87.93874,48.757765],[88.029283,48.75027],[88.089645,48.695009],[88.027436,48.62743],[87.96153,48.599344],[88.041602,48.548275],[88.10874,48.545898],[88.196819,48.493982],[88.363123,48.460267],[88.443811,48.391579],[88.503557,48.413029],[88.605803,48.337914],[88.575006,48.277423],[88.663085,48.172189],[88.79736,48.133869],[88.824461,48.106708],[88.939026,48.115497],[89.078228,47.98711],[89.231597,47.980301],[89.38127,48.046344],[89.569132,48.037943],[89.651052,47.913774],[89.735435,47.897329],[89.761921,47.835916],[89.957789,47.842743],[89.960253,47.885694],[90.086521,47.865628],[90.07605,47.777646],[90.13518,47.723337],[90.331665,47.68146],[90.398186,47.547551],[90.468403,47.497853],[90.468403,47.404795],[90.526301,47.378871],[90.488113,47.317252],[90.56141,47.207212],[90.767134,46.992568],[90.901408,46.960725],[90.958075,46.8794],[90.942676,46.825797],[91.054161,46.71761],[91.017821,46.582483],[91.079415,46.558626],[90.983328,46.374823],[90.900177,46.31204],[91.021517,46.121185],[91.028292,46.023224],[90.850285,45.888035],[90.714779,45.728714],[90.676591,45.582339],[90.671047,45.48762],[90.772677,45.432223],[90.804706,45.294756],[90.877387,45.280865],[90.881698,45.191964],[91.007966,45.218522],[91.129922,45.215993],[91.242023,45.137544],[91.37753,45.110947],[91.448978,45.156533],[91.561695,45.075466],[91.694738,45.065325],[91.803144,45.082649],[92.100026,45.081381],[92.240461,45.015859],[92.315605,45.02897],[92.501003,45.001054],[92.779407,45.050532],[92.884117,45.046727],[92.932776,45.017551],[93.174225,45.015436],[93.434767,44.955343],[93.509296,44.968044],[93.716251,44.89434],[93.723642,44.86551],[94.215162,44.667978],[94.329727,44.582811],[94.359292,44.51544],[94.470777,44.509466],[94.606283,44.448418],[94.722696,44.340681],[94.945666,44.292734],[94.998637,44.25332],[95.398381,44.294447],[95.326932,44.028756],[95.527113,44.007243],[95.623199,43.855567],[95.735916,43.597437],[95.857872,43.417779],[95.880046,43.280289],[95.921314,43.22974],[96.363558,42.900586],[96.386348,42.727655],[96.103632,42.604026],[96.02356,42.54234],[95.978596,42.436892],[96.06606,42.414367],[96.040806,42.3264],[96.178161,42.217929],[96.077147,42.149652],[96.13874,42.054207],[96.117183,41.985753],[96.038342,41.924794],[95.855408,41.849516],[95.677402,41.830795],[95.57146,41.796011],[95.39407,41.693333],[95.29552,41.569456],[95.135991,41.772811],[94.861898,41.668309],[94.750413,41.538114],[94.534219,41.50586],[94.184365,41.268392],[94.01067,41.114857],[93.809874,40.879583],[93.820961,40.793574],[93.760599,40.664804],[93.506216,40.648464],[92.928465,40.572609],[92.906907,40.310773],[92.796654,40.15364],[92.745531,39.868137],[92.639589,39.514543],[92.52564,39.368528],[92.339011,39.236575],[92.366728,39.059322],[92.41046,39.038412],[92.38459,39.000758],[92.263866,39.002153],[92.173323,38.960758],[91.966368,38.930976],[91.87952,38.884417],[91.446515,38.813588],[91.307928,38.751089],[90.831191,38.667982],[90.619308,38.664245],[90.610685,38.596003],[90.463476,38.556711],[90.424671,38.492114],[90.315034,38.501948],[90.111774,38.477595],[90.137644,38.340692],[90.280542,38.238315],[90.352607,38.233615],[90.361846,38.300322],[90.530613,38.32004],[90.516446,38.207291],[90.519526,37.73089],[90.776373,37.6504],[90.882314,37.575513],[90.863836,37.534246],[90.958075,37.477763],[91.057241,37.483936],[91.099741,37.447843],[91.134849,37.32614],[91.192132,37.27807],[91.1909,37.205669],[91.280211,37.163721],[91.303617,37.01242],[91.181045,37.025318],[90.983944,36.913458],[90.853981,36.915371],[90.735105,36.827778],[90.720938,36.708912],[90.7388,36.58746],[91.035683,36.529788],[91.05293,36.432608],[91.026444,36.323738],[91.07264,36.299149],[91.124994,36.115693],[91.09235,36.088621],[90.979017,36.106992],[90.922966,36.029126],[90.841046,36.01848],[90.776373,36.086203],[90.66304,36.134058],[90.526917,36.148553],[90.430215,36.133091],[90.234962,36.161597],[90.128405,36.208923],[90.145651,36.238849],[90.028006,36.25815],[89.999057,36.169809],[89.937463,36.130675],[89.941159,36.067343],[89.711414,36.092972],[89.490291,36.150969],[89.375727,36.228231],[89.287647,36.235954],[89.232213,36.295774],[89.127503,36.249465],[89.10225,36.281305],[88.964279,36.318917],[88.926091,36.364221],[88.802903,36.337717],[88.783809,36.291916],[88.623665,36.389271],[88.573158,36.461005],[88.470912,36.482175],[88.365586,36.457636],[88.241782,36.468704],[88.134609,36.427313],[87.983088,36.437903],[87.949211,36.401312],[87.731785,36.384936],[87.570409,36.342536],[87.470626,36.354102],[87.460155,36.409498],[87.361605,36.419128],[87.306787,36.363739],[87.193454,36.349283],[87.149106,36.29722],[86.996353,36.308793],[86.887332,36.262492],[86.862078,36.300114],[86.746282,36.291916],[86.701318,36.245122],[86.515305,36.205543],[86.392733,36.206992],[86.187625,36.131158],[86.199944,36.032513],[86.132806,35.979271],[86.060125,35.846008],[85.949256,35.779049],[85.811286,35.779049],[85.65299,35.731465],[85.613569,35.652257],[85.372121,35.701346],[85.271107,35.788757],[85.159006,35.745549],[85.053065,35.751862],[84.729081,35.613353],[84.448828,35.55058],[84.45314,35.473141],[84.335495,35.414647],[84.1618,35.359039],[84.095895,35.362943],[84.005968,35.422449],[83.885244,35.367334],[83.677672,35.360991],[83.622238,35.335614],[83.451006,35.38197],[83.242203,35.420011],[83.127022,35.398554],[83.067892,35.462908],[82.998907,35.484348],[82.960719,35.671702],[82.788872,35.684824],[82.731589,35.63767],[82.628727,35.692114],[82.424852,35.713006],[82.336156,35.651284],[82.328149,35.559342],[82.033114,35.450236],[82.05344,35.350255],[81.927789,35.271158],[81.736847,35.262365],[81.675253,35.233536],[81.513261,35.235002],[81.494167,35.292161],[81.362356,35.354647],[81.219458,35.319016],[81.09935,35.407333],[81.031597,35.380506],[81.026053,35.312181],[80.844351,35.345375],[80.689135,35.33903],[80.65649,35.394165],[80.516672,35.392214],[80.412578,35.433663],[80.321419,35.386848],[80.268448,35.294114],[80.362687,35.209096],[80.257977,35.20323],[80.23026,35.147476],[80.118159,35.066222],[80.031311,35.034384],[80.034391,34.902],[79.947544,34.820993],[79.906892,34.683837],[79.801566,34.478909],[79.675914,34.451284],[79.504683,34.454737],[79.229358,34.413778],[79.161605,34.441416],[79.0107,34.399956],[79.039649,34.33427]]]]}},{type:"Feature",properties:{adcode:71e4,name:"台湾省",center:[121.509062,25.044332],centroid:[120.971486,23.749452],childrenNum:0,level:"province",subFeatureIndex:31,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[120.443706,22.441042],[120.297112,22.531154],[120.20041,22.721137],[120.131425,23.002313],[120.018708,23.073342],[120.108019,23.34115],[120.12157,23.504758],[120.095084,23.587583],[120.102476,23.70104],[120.175156,23.807282],[120.245989,23.84067],[120.278018,23.927657],[120.68885,24.600764],[120.82374,24.68832],[120.89211,24.767665],[120.914899,24.864876],[121.024537,25.040639],[121.209318,25.127342],[121.371926,25.15984],[121.444607,25.27081],[121.53515,25.307597],[121.62323,25.294614],[121.745186,25.162007],[121.917033,25.137634],[121.947214,25.031965],[122.012503,25.001602],[121.844968,24.836101],[121.841272,24.733977],[121.892395,24.618171],[121.88562,24.529477],[121.809243,24.338818],[121.643556,24.097633],[121.65957,24.006934],[121.621382,23.920547],[121.522832,23.538772],[121.479716,23.32247],[121.415042,23.196039],[121.430441,23.137181],[121.370695,23.084351],[121.324499,22.945574],[121.170514,22.723345],[121.03316,22.650477],[120.914899,22.302718],[120.907508,22.033426],[120.86624,21.98461],[120.873016,21.897477],[120.701784,21.926898],[120.651277,22.033426],[120.640806,22.241259],[120.569973,22.361938],[120.443706,22.441042]]],[[[119.646064,23.55084],[119.609108,23.503661],[119.566608,23.584842],[119.678093,23.600195],[119.646064,23.55084]]],[[[123.491374,25.747089],[123.496917,25.739005],[123.495069,25.737927],[123.494453,25.737927],[123.492606,25.737388],[123.480903,25.737927],[123.480287,25.737388],[123.46612,25.732537],[123.465504,25.732537],[123.491374,25.747089]]],[[[123.549272,25.724991],[123.549272,25.724991],[123.546192,25.729303],[123.546192,25.728764],[123.549272,25.724991]]],[[[123.690322,25.923187],[123.691554,25.921572],[123.690938,25.917267],[123.690938,25.916729],[123.690322,25.923187]]],[[[123.559743,25.718523],[123.559743,25.717984],[123.548656,25.720679],[123.549272,25.720679],[123.559743,25.718523]]],[[[121.510513,22.087215],[121.573339,22.086106],[121.594281,21.995152],[121.510513,22.087215]]],[[[123.559743,25.718523],[123.560359,25.718523],[123.560359,25.717984],[123.559743,25.717984],[123.559743,25.718523]]]]}},{type:"Feature",properties:{adcode:81e4,name:"香港特别行政区",center:[114.173355,22.320048],centroid:[114.134394,22.377371],childrenNum:18,level:"province",subFeatureIndex:32,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[114.031778,22.504071],[114.044096,22.502413],[114.045944,22.502413],[114.185762,22.551601],[114.185762,22.551601],[114.232574,22.539997],[114.232574,22.528944],[114.263371,22.541654],[114.263987,22.541654],[114.271994,22.535023],[114.28924,22.522864],[114.355762,22.434958],[114.406269,22.433299],[114.406269,22.432746],[114.356994,22.340356],[114.323733,22.384622],[114.315726,22.299951],[114.315726,22.298843],[114.248588,22.274484],[114.265835,22.200825],[114.195002,22.232951],[114.120473,22.272269],[114.121089,22.320985],[114.034857,22.301058],[114.026234,22.229628],[113.848844,22.191961],[113.898119,22.308808],[114.015763,22.332054],[113.920293,22.368024],[113.918445,22.418366],[114.031778,22.504071]]],[[[114.350834,22.260087],[114.355146,22.268393],[114.355762,22.268393],[114.350834,22.260087]]],[[[114.320037,22.381303],[114.320037,22.381856],[114.319421,22.382409],[114.323733,22.384622],[114.320037,22.381303]]],[[[114.372392,22.322645],[114.372392,22.323752],[114.37424,22.323199],[114.372392,22.322645]]]]}},{type:"Feature",properties:{adcode:82e4,name:"澳门特别行政区",center:[113.54909,22.198951],centroid:[113.56642,22.159262],childrenNum:8,level:"province",subFeatureIndex:33,acroutes:[1e5],parent:{adcode:1e5}},geometry:{type:"MultiPolygon",coordinates:[[[[113.558736,22.213012],[113.6037,22.132116],[113.553809,22.107727],[113.558736,22.213012]]]]}},{type:"Feature",properties:{adcode:1e5,name:"",adchar:"JD"},geometry:{type:"MultiPolygon",coordinates:[[[[122.51865306,23.46078502],[122.51742454,23.45790762],[122.51536697,23.45555069],[122.51268178,23.45394494],[122.50963181,23.45324755],[122.5065156,23.45352678],[122.5036382,23.45475531],[122.50128127,23.45681287],[122.49967552,23.45949807],[122.49897813,23.46254804],[122.49925737,23.46566424],[122.77921829,24.57855302],[122.78044682,24.58143041],[122.78250438,24.58378734],[122.78518957,24.5853931],[122.78823955,24.58609049],[122.79135575,24.58581125],[122.79423315,24.58458272],[122.79659008,24.58252516],[122.79819583,24.57983997],[122.79889322,24.57678999],[122.79861399,24.57367379],[122.51865306,23.46078502]]],[[[121.17202617,20.8054593],[121.16966862,20.80340244],[121.16679085,20.80217478],[121.16367457,20.80189649],[121.1606248,20.8025948],[121.1579401,20.80420136],[121.15588324,20.80655891],[121.15465558,20.80943668],[121.15437729,20.81255297],[121.1550756,20.81560273],[121.15668216,20.81828744],[121.89404403,21.70026162],[121.89640158,21.70231847],[121.89927934,21.70354613],[121.90239563,21.70382443],[121.9054454,21.70312611],[121.9081301,21.70151955],[121.91018696,21.699162],[121.91141462,21.69628423],[121.91169291,21.69316794],[121.9109946,21.69011818],[121.90938804,21.68743347],[121.17202617,20.8054593]]],[[[119.47366172,18.00707291],[119.47175735,18.00459056],[119.46917909,18.0028182],[119.46617933,18.0019293],[119.4630517,18.00201089],[119.46010237,18.00305497],[119.45762002,18.00495935],[119.45584765,18.00753761],[119.45495876,18.01053737],[119.45504035,18.01366499],[119.45608443,18.01661433],[120.00812005,19.0335793],[120.01002443,19.03606165],[120.01260269,19.03783401],[120.01560245,19.03872291],[120.01873007,19.03864132],[120.02167941,19.03759723],[120.02416175,19.03569286],[120.02593412,19.0331146],[120.02682302,19.03011484],[120.02674143,19.02698721],[120.02569734,19.02403788],[119.47366172,18.00707291]]],[[[119.0726757,15.04098494],[119.0726746,15.04083704],[119.07218171,15.00751424],[119.07164663,15.00443165],[119.07018516,15.00166528],[119.06794036,14.99948592],[119.06513198,14.99810691],[119.06203491,14.99766324],[119.05895232,14.99819832],[119.05618595,14.99965979],[119.05400659,15.00190458],[119.05262758,15.00471297],[119.0521839,15.00781004],[119.0526757,15.04105889],[119.0526757,16.04388528],[119.05316513,16.04697545],[119.05458553,16.04976313],[119.05679784,16.05197545],[119.05958553,16.05339584],[119.0626757,16.05388528],[119.06576587,16.05339584],[119.06855355,16.05197545],[119.07076587,16.04976313],[119.07218626,16.04697545],[119.0726757,16.04388528],[119.0726757,15.04098494]]],[[[118.68646749,11.18959191],[118.85557939,11.6136711],[118.9698053,11.99151854],[118.97116801,11.99433487],[118.97333431,11.99659227],[118.97609216,11.99806975],[118.9791716,11.99862269],[118.98227119,11.99819697],[118.98508753,11.99683427],[118.98734492,11.99466796],[118.9888224,11.99191011],[118.98937534,11.98883067],[118.98894963,11.98573108],[118.87459939,11.60747236],[118.87431591,11.606662],[118.70476212,11.18147468],[118.70409227,11.18010771],[118.54242469,10.9053354],[118.54043581,10.90292022],[118.53779795,10.90123786],[118.53476931,10.90045298],[118.53164636,10.90064241],[118.5287348,10.90178762],[118.52631962,10.9037765],[118.52463726,10.90641436],[118.52385237,10.909443],[118.52404181,10.91256595],[118.52518702,10.91547751],[118.68646749,11.18959191]]],[[[115.54466883,7.14672265],[115.54229721,7.14468204],[115.53941108,7.14347417],[115.53629295,7.14321728],[115.53324806,7.14393652],[115.53057445,7.14556148],[115.52853383,7.1479331],[115.52732596,7.15081924],[115.52706908,7.15393736],[115.52778832,7.15698226],[115.52941328,7.15965587],[116.23523025,7.99221221],[116.23760187,7.99425282],[116.240488,7.99546069],[116.24360613,7.99571758],[116.24665102,7.99499834],[116.24932463,7.99337338],[116.25136525,7.99100176],[116.25257312,7.98811563],[116.25283001,7.9849975],[116.25211077,7.98195261],[116.2504858,7.979279],[115.54466883,7.14672265]]],[[[112.30705249,3.53487257],[112.51501594,3.59753306],[112.84361424,3.7506962],[112.84662187,3.75155809],[112.84974864,3.7514484],[112.85268847,3.75037785],[112.8551536,3.74845124],[112.85690272,3.74585715],[112.85776462,3.74284952],[112.85765492,3.73972276],[112.85658437,3.73678292],[112.85465776,3.7343178],[112.85206367,3.73256867],[112.52281386,3.57910186],[112.52147408,3.5785908],[112.31248917,3.51562254],[112.31181658,3.51544515],[111.79132585,3.39736822],[111.78820398,3.39716187],[111.78517113,3.39793033],[111.78252419,3.39959839],[111.78052226,3.40200275],[111.77936129,3.40490807],[111.77915495,3.40802995],[111.77992341,3.41106279],[111.78159146,3.41370973],[111.78399583,3.41571167],[111.78690114,3.41687263],[112.30705249,3.53487257]]],[[[108.26055972,6.08912451],[108.26004031,6.09098419],[108.23638164,6.22427602],[108.23630689,6.22476797],[108.19687578,6.53630242],[108.19679674,6.53760583],[108.1987683,6.95072469],[108.19897125,6.95268198],[108.22460147,7.07791743],[108.22570055,7.08084671],[108.22765103,7.083293],[108.230262,7.08501682],[108.23327786,7.08584944],[108.23640341,7.08570936],[108.2393327,7.08461028],[108.24177899,7.0826598],[108.24350281,7.08004883],[108.24433543,7.07703297],[108.24419535,7.07390742],[108.21876335,6.94964057],[108.21679964,6.53816468],[108.25611734,6.22752625],[108.279563,6.09543449],[108.30878645,6.01987736],[108.30944469,6.0168187],[108.30912553,6.01370633],[108.30786022,6.01084492],[108.30577262,6.00851455],[108.30306706,6.00694335],[108.3000084,6.00628511],[108.29689603,6.00660426],[108.29403462,6.00786957],[108.29170425,6.00995718],[108.29013305,6.01266273],[108.26055972,6.08912451]]],[[[110.12822847,11.36894451],[110.18898148,11.48996382],[110.23982347,11.61066468],[110.28485499,11.78705054],[110.3083549,11.94803461],[110.3142445,12.14195265],[110.312278,12.23998238],[110.31270536,12.24308175],[110.31406956,12.24589736],[110.31623706,12.2481536],[110.3189957,12.24962962],[110.32207543,12.25018094],[110.32517479,12.24975358],[110.3279904,12.24838938],[110.33024665,12.24622187],[110.33172267,12.24346324],[110.33227398,12.24038351],[110.33424553,12.14210167],[110.33424294,12.14159753],[110.32832827,11.94685414],[110.32822801,11.94571326],[110.30456934,11.78364161],[110.30436343,11.7826124],[110.25901765,11.60499559],[110.25854422,11.60358735],[110.20728377,11.48189306],[110.20700505,11.48128846],[110.14588682,11.35954163],[110.14541497,11.35870461],[110.07246741,11.24270688],[110.07040803,11.24035153],[110.0677216,11.23874785],[110.06467109,11.23805281],[110.0615551,11.23833444],[110.05867865,11.23956519],[110.05632331,11.24162456],[110.05471962,11.24431099],[110.05402458,11.2473615],[110.05430621,11.25047749],[110.05553696,11.25335394],[110.12822847,11.36894451]]],[[[109.82951587,15.22896754],[109.77065019,15.44468789],[109.67264555,15.66561455],[109.57455994,15.82609887],[109.51574449,15.91095759],[109.29314007,16.19491896],[109.29161878,16.19765288],[109.29101677,16.20072311],[109.29139298,16.2038291],[109.29271057,16.20666681],[109.29484059,16.20895848],[109.29757451,16.21047978],[109.30064474,16.21108179],[109.30375073,16.21070558],[109.30658844,16.20938798],[109.30888011,16.20725797],[109.53166592,15.92306523],[109.53201478,15.92259221],[109.59116145,15.8372556],[109.59147511,15.83677407],[109.6900529,15.67548445],[109.69066131,15.67432448],[109.7892391,15.45210582],[109.78974541,15.45068337],[109.84889209,15.23393326],[109.84903675,15.23333003],[109.8648092,15.15722425],[109.86495704,15.15409906],[109.86413191,15.15108113],[109.86241457,15.1484659],[109.85997314,15.14650935],[109.85704658,15.145403],[109.85392139,15.14525516],[109.85090347,15.14608029],[109.84828823,15.14779763],[109.84633168,15.15023907],[109.84522534,15.15316562],[109.82951587,15.22896754]]]]}}],L7={type:Hf,features:Gf},Jt=(n,e)=>{const t=(90+n)*(Math.PI/180),i=(90-e)*(Math.PI/180);return new N().setFromSpherical(new kn(k1.earthRadius,i,t))},Vf=(n,e)=>n.add(e).divideScalar(2),K5=(n,e,t)=>{const i=n.distanceTo(e);return n.lerp(e,t/i)},D7=(n,e)=>{let t=n.angleTo(e)*1.8/Math.PI/.1,i=t*40,r=t*t*800,s=new N(0,0,0),o=new h3(s,Vf(n.clone(),e.clone())),a=new N,l=new N;o.at(1,a),o.at(r/a.distanceTo(s),l);let c=K5(n.clone(),l,i),u=K5(e.clone(),l,i);return{v1:c,v2:u}},I7=(n,e=[106.278179,38.46637])=>d3.geoMercator().center(e).translate([0,0])(n),Wf=(n,e)=>{const t=[],i=new Se;for(let r=0;r<n.length;r++){let s=Jt(n[r][0],n[r][1]);t.push(s.x,s.y,s.z)}return i.setAttribute("position",new fe(t,3)),new y9(i,e)},kf=(n,e)=>{const t=new Array,i=new Se;return n.forEach(r=>{const[s,o]=I7(r);t.push(new N(s,-o,2.1))}),i.setFromPoints(t),new y9(i,e)},Xf=()=>{const n=new ie;n.name="cityStroke";const e=new m4({color:15832403});return L7.features.forEach(t=>{const i=new qe;i.name=t.properties.name,t.geometry.coordinates.forEach(s=>{s.forEach(o=>{const a=Wf(o,e);i.add(a)})}),n.add(i)}),{cityStroke:n}},qf="FeatureCollection",Yf=[{type:"Feature",properties:{adcode:1e5,name:"中华人民共和国",center:[116.3683244,39.915085],centroid:[104.113164,37.570667],childrenNum:34,level:"country",parent:{adcode:null}},geometry:{type:"MultiPolygon",coordinates:[[[[123.388512,39.74742],[123.389744,39.763984],[123.350939,39.750641],[123.274563,39.753862],[123.270251,39.714743],[123.286882,39.704154],[123.253005,39.689879],[123.215433,39.696786],[123.212969,39.665928],[123.166774,39.674219],[123.146448,39.647037],[123.103332,39.676983],[123.010941,39.655331],[123.021412,39.64335],[122.978912,39.616156],[122.972753,39.594946],[122.941956,39.604629],[122.860652,39.604629],[122.847101,39.581571],[122.808913,39.559889],[122.682645,39.514658],[122.649385,39.516505],[122.637066,39.488799],[122.581631,39.464316],[122.532972,39.419947],[122.489856,39.403764],[122.412864,39.411625],[122.366668,39.390815],[122.366053,39.370461],[122.30877,39.346399],[122.274893,39.322329],[122.242865,39.267678],[122.160329,39.238019],[122.117213,39.213911],[122.123988,39.172631],[122.167104,39.158711],[122.127684,39.144788],[122.088264,39.112291],[122.048228,39.101146],[122.071634,39.074204],[122.061778,39.060264],[122.013735,39.073275],[121.963228,39.030053],[121.913953,39.0598],[121.929352,39.024939],[121.864062,39.037026],[121.855439,39.025869],[121.905946,38.997503],[121.920728,38.969591],[121.863446,38.942598],[121.804932,38.970986],[121.790149,39.022614],[121.756889,39.025869],[121.73841,38.998898],[121.671273,39.010059],[121.66265,38.966333],[121.618918,38.950046],[121.655874,38.946788],[121.719316,38.920252],[121.708845,38.872744],[121.675585,38.86156],[121.618302,38.862492],[121.564715,38.874607],[121.509897,38.817743],[121.399028,38.812613],[121.359608,38.822406],[121.302325,38.78976],[121.259825,38.786495],[121.198848,38.721623],[121.13787,38.723023],[121.112,38.776231],[121.12863,38.799089],[121.110768,38.862026],[121.129862,38.879266],[121.094138,38.894173],[121.08921,38.922115],[121.128014,38.958888],[121.180369,38.959819],[121.204391,38.941202],[121.275224,38.971917],[121.341129,38.980757],[121.317108,39.012384],[121.370695,39.060264],[121.431057,39.027263],[121.508049,39.034237],[121.581962,39.075598],[121.599208,39.098824],[121.562252,39.127149],[121.590585,39.154999],[121.642324,39.11972],[121.605983,39.080708],[121.631853,39.077921],[121.68236,39.117863],[121.639244,39.166136],[121.604136,39.166136],[121.586889,39.193506],[121.591201,39.228748],[121.631237,39.22643],[121.589353,39.263044],[121.623846,39.285745],[121.672505,39.275554],[121.667577,39.310754],[121.70207,39.326496],[121.72486,39.364447],[121.621382,39.326033],[121.562252,39.322792],[121.51544,39.286672],[121.464933,39.30103],[121.466781,39.320014],[121.435984,39.329736],[121.432904,39.357506],[121.35468,39.377863],[121.324499,39.371386],[121.307869,39.391277],[121.270296,39.374162],[121.245659,39.389427],[121.246891,39.421334],[121.304173,39.48187],[121.286927,39.507271],[121.268449,39.482794],[121.224717,39.519275],[121.226565,39.554814],[121.263521,39.589873],[121.299246,39.606013],[121.325731,39.601402],[121.450151,39.624914],[121.451999,39.658095],[121.482796,39.659478],[121.502506,39.703233],[121.45939,39.747881],[121.487107,39.760303],[121.472325,39.802155],[121.530223,39.851334],[121.541926,39.874302],[121.572107,39.865116],[121.626925,39.882569],[121.699606,39.937196],[121.76428,39.933525],[121.779062,39.942702],[121.796309,39.999116],[121.824642,40.025701],[121.910257,40.072887],[121.956453,40.133311],[121.995257,40.128277],[122.003264,40.172191],[121.98109,40.173106],[121.950293,40.204194],[121.940438,40.242121],[122.02667,40.244862],[122.039605,40.260391],[122.040221,40.322017],[122.079641,40.332967],[122.110438,40.315629],[122.138155,40.338897],[122.111054,40.348932],[122.135691,40.374925],[122.152322,40.357597],[122.198517,40.382219],[122.186814,40.422779],[122.229314,40.424146],[122.250872,40.445555],[122.241633,40.465137],[122.278589,40.482891],[122.244712,40.485167],[122.245944,40.519752],[122.150474,40.588413],[122.133843,40.614313],[122.148626,40.671983],[122.122141,40.657457],[122.06609,40.64883],[122.025438,40.674253],[121.951525,40.680607],[121.936127,40.711462],[121.934279,40.79805],[121.883772,40.802127],[121.84312,40.831567],[121.816019,40.894931],[121.778446,40.886787],[121.735331,40.862351],[121.732251,40.846961],[121.682976,40.829755],[121.626309,40.844244],[121.576418,40.837906],[121.553013,40.817528],[121.55486,40.849677],[121.526527,40.85194],[121.499426,40.880001],[121.440296,40.88181],[121.355296,40.892217],[121.274608,40.886335],[121.251202,40.880453],[121.23642,40.851035],[121.177906,40.873665],[121.126167,40.86914],[121.076892,40.815716],[121.086747,40.79805],[121.010986,40.784457],[121.00729,40.807563],[120.971566,40.805751],[120.994356,40.790801],[120.980189,40.766329],[120.991276,40.744115],[121.028848,40.746382],[121.032544,40.709193],[120.983269,40.712822],[120.945081,40.687868],[120.861313,40.684692],[120.8299,40.671076],[120.837291,40.644289],[120.822509,40.59432],[120.72827,40.539311],[120.72211,40.515657],[120.693777,40.505647],[120.666676,40.467413],[120.615553,40.453298],[120.617401,40.41959],[120.596459,40.399084],[120.602618,40.36079],[120.537329,40.325211],[120.52193,40.304676],[120.523778,40.256737],[120.491749,40.20008],[120.451097,40.177679],[120.371641,40.174478],[120.273091,40.127362],[120.161606,40.096239],[120.134504,40.074719],[120.092005,40.077466],[119.947259,40.040364],[119.941715,40.009659],[119.91831,39.989946],[119.854252,39.98857],[119.872114,39.960594],[119.842549,39.956007],[119.820375,39.979399],[119.787115,39.950502],[119.726137,39.940867],[119.681789,39.922511],[119.642369,39.925264],[119.620195,39.904609],[119.588166,39.910576],[119.540739,39.888079],[119.520413,39.840306],[119.536427,39.809052],[119.474217,39.813189],[119.366428,39.734996],[119.269726,39.498497],[119.316537,39.437051],[119.317153,39.4107],[119.272805,39.363521],[119.185342,39.342234],[119.121284,39.281576],[119.096031,39.24219],[119.038132,39.211593],[119.023966,39.187012],[118.97777,39.163352],[118.926031,39.123435],[118.890307,39.118792],[118.896466,39.139683],[118.951285,39.178662],[118.920488,39.171703],[118.897082,39.151286],[118.857662,39.162888],[118.814546,39.138754],[118.76096,39.133648],[118.637156,39.157319],[118.578642,39.130863],[118.588497,39.107648],[118.533062,39.090928],[118.570634,38.999363],[118.604511,38.971452],[118.539837,38.910008],[118.491178,38.909077],[118.377845,38.971917],[118.366143,39.016104],[118.319331,39.009594],[118.225092,39.034701],[118.1906,39.080708],[118.162883,39.136433],[118.12531,39.182838],[118.065564,39.218084],[118.056941,39.219939],[118.037231,39.220402],[117.977485,39.206028],[117.96455,39.172631],[117.871543,39.122506],[117.837667,39.057011],[117.855529,38.957492],[117.898029,38.948649],[117.875855,38.920252],[117.847522,38.855502],[117.778536,38.869016],[117.752051,38.847579],[117.64611,38.828933],[117.646725,38.788827],[117.671363,38.772032],[117.740964,38.753833],[117.740964,38.700141],[117.729261,38.680055],[117.65658,38.66043],[117.639334,38.626776],[117.638102,38.54491],[117.68553,38.539293],[117.644878,38.52759],[117.678754,38.477008],[117.72495,38.457328],[117.730493,38.424985],[117.781,38.373862],[117.84629,38.368232],[117.937449,38.387936],[117.957775,38.376208],[117.948536,38.346644],[117.895565,38.301572],[117.896797,38.279495],[118.018753,38.202409],[118.045238,38.214165],[118.112376,38.210403],[118.177665,38.186417],[118.217085,38.146893],[118.331034,38.12524],[118.404331,38.121003],[118.431432,38.106406],[118.44991,38.124299],[118.504729,38.11394],[118.534294,38.063541],[118.552156,38.05553],[118.597736,38.079088],[118.607591,38.129006],[118.626069,38.138421],[118.703677,38.151129],[118.811467,38.157717],[118.908169,38.139362],[118.974075,38.094162],[119.001792,37.99613],[119.110813,37.921577],[119.12806,37.847892],[119.12806,37.814332],[119.154545,37.806294],[119.217371,37.810077],[119.225378,37.752844],[119.275269,37.739594],[119.275885,37.717347],[119.246936,37.698409],[119.133603,37.705511],[119.080016,37.696514],[119.02027,37.6572],[118.988857,37.620709],[118.939582,37.527268],[118.942662,37.497361],[119.001176,37.31862],[119.03998,37.30434],[119.054147,37.254816],[119.084328,37.239572],[119.091103,37.257674],[119.12806,37.254816],[119.136683,37.230995],[119.204436,37.280058],[119.190885,37.25958],[119.2069,37.223371],[119.298675,37.197156],[119.301138,37.139452],[119.327624,37.115595],[119.361501,37.125616],[119.428022,37.125616],[119.489616,37.134681],[119.576463,37.127524],[119.678709,37.158056],[119.698419,37.127047],[119.744615,37.135158],[119.83023,37.225754],[119.865339,37.233854],[119.89244,37.263866],[119.883201,37.311004],[119.837006,37.346695],[119.843781,37.376662],[119.926933,37.386649],[119.949723,37.419927],[120.010085,37.442263],[120.064903,37.448915],[120.086461,37.465067],[120.144359,37.481691],[120.222584,37.532963],[120.246605,37.556689],[120.208417,37.588469],[120.215192,37.621183],[120.272475,37.636824],[120.269395,37.658622],[120.22012,37.671886],[120.227511,37.693673],[120.367945,37.697935],[120.454793,37.757576],[120.517619,37.750005],[120.590915,37.7642],[120.634031,37.796364],[120.656821,37.793054],[120.733197,37.833714],[120.839139,37.82426],[120.845298,37.826623],[120.874863,37.833241],[120.940769,37.819533],[120.943233,37.785486],[120.994356,37.759468],[121.037471,37.718767],[121.136022,37.723501],[121.160043,37.698882],[121.142797,37.661464],[121.161891,37.646302],[121.148956,37.626397],[121.17421,37.597479],[121.217326,37.582778],[121.304789,37.582778],[121.358376,37.597479],[121.349137,37.635403],[121.391021,37.625449],[121.435368,37.592737],[121.395948,37.589891],[121.400876,37.557638],[121.460006,37.522522],[121.477252,37.475992],[121.571491,37.441313],[121.575802,37.460317],[121.635548,37.494037],[121.66573,37.473617],[121.772903,37.466492],[121.923808,37.473142],[121.997721,37.494512],[122.017431,37.531065],[122.075329,37.540556],[122.08888,37.554316],[122.150474,37.557163],[122.163408,37.519199],[122.131996,37.49926],[122.166488,37.438937],[122.194205,37.456041],[122.25272,37.467917],[122.287212,37.445114],[122.281053,37.430858],[122.337103,37.414223],[122.41656,37.414699],[122.487393,37.43466],[122.4954,37.413748],[122.553914,37.407093],[122.641377,37.428482],[122.67587,37.413273],[122.701739,37.418501],[122.714058,37.392355],[122.6925,37.373809],[122.650616,37.388551],[122.607501,37.364296],[122.611196,37.339558],[122.573624,37.296247],[122.567465,37.25958],[122.592718,37.261485],[122.624131,37.190959],[122.573624,37.176178],[122.581015,37.147562],[122.533588,37.153286],[122.484313,37.128956],[122.478769,37.058784],[122.467067,37.037289],[122.494168,37.033945],[122.575472,37.054485],[122.583479,37.037289],[122.544675,37.004797],[122.55761,36.968467],[122.532356,36.901496],[122.48924,36.886659],[122.483081,36.913938],[122.434422,36.914416],[122.457212,36.868946],[122.383915,36.865595],[122.378371,36.844525],[122.344495,36.828239],[122.280437,36.835904],[122.275509,36.83734],[122.220691,36.848835],[122.174495,36.842609],[122.188662,36.866073],[122.175727,36.894317],[122.119677,36.891924],[122.141235,36.938337],[122.124604,36.944077],[122.115981,36.94025],[122.093191,36.913938],[122.051923,36.904846],[122.042684,36.871819],[122.008808,36.96225],[121.965076,36.938337],[121.927504,36.932597],[121.767975,36.874691],[121.762432,36.84644],[121.726092,36.826323],[121.6762,36.819137],[121.631853,36.80093],[121.651563,36.723739],[121.556092,36.764502],[121.575186,36.740047],[121.532071,36.73621],[121.485259,36.786073],[121.548701,36.807638],[121.565331,36.830635],[121.506817,36.803805],[121.496962,36.795179],[121.454462,36.752515],[121.3941,36.738129],[121.400876,36.701191],[121.35776,36.713186],[121.31218,36.702151],[121.29863,36.702151],[121.251818,36.671436],[121.161275,36.651273],[121.078123,36.607568],[121.028848,36.572971],[120.955551,36.575855],[120.926602,36.611892],[120.882255,36.627262],[120.847146,36.618617],[120.884718,36.601323],[120.909972,36.568645],[120.962327,36.562877],[120.983269,36.546051],[120.95432,36.507578],[120.965407,36.466199],[120.938305,36.447908],[120.90874,36.450315],[120.919827,36.419018],[120.871784,36.36699],[120.848994,36.403124],[120.858849,36.424797],[120.828668,36.46668],[120.759683,36.46283],[120.694393,36.390118],[120.744284,36.327946],[120.66298,36.331803],[120.653741,36.282129],[120.686386,36.279234],[120.696857,36.15563],[120.712255,36.126632],[120.672835,36.130016],[120.64327,36.114547],[120.615553,36.120348],[120.593995,36.100525],[120.546568,36.107778],[120.546568,36.091821],[120.468959,36.087952],[120.429539,36.056994],[120.370409,36.053607],[120.289721,36.059413],[120.35809,36.174956],[120.362402,36.196209],[120.319902,36.232423],[120.297112,36.225664],[120.310047,36.185101],[120.263236,36.182202],[120.260772,36.198624],[120.224432,36.19138],[120.22012,36.209248],[120.181316,36.203936],[120.140664,36.173507],[120.142512,36.143549],[120.108635,36.127599],[120.116642,36.102943],[120.152367,36.095206],[120.181316,36.066669],[120.239214,36.062316],[120.234902,36.030863],[120.198562,35.995525],[120.257076,36.025055],[120.249069,35.992136],[120.285409,36.01247],[120.289721,36.017311],[120.316206,36.002304],[120.30512,35.971796],[120.265699,35.966468],[120.209033,35.917531],[120.202258,35.89184],[120.169613,35.888446],[120.207801,35.947575],[120.152983,35.907353],[120.125265,35.906868],[120.112331,35.885052],[120.064287,35.873414],[120.032258,35.812288],[120.049505,35.786562],[120.01378,35.714193],[119.958346,35.760342],[119.926317,35.759856],[119.920157,35.739943],[119.950339,35.729741],[119.91215,35.660725],[119.925085,35.637382],[119.868419,35.60868],[119.83023,35.620357],[119.824071,35.646136],[119.792658,35.615492],[119.800665,35.581915],[119.752622,35.588729],[119.75139,35.617924],[119.718129,35.615492],[119.662079,35.589215],[119.663311,35.562931],[119.618963,35.459655],[119.579543,35.406504],[119.590014,35.37284],[119.543819,35.347949],[119.538275,35.296678],[119.493312,35.318655],[119.450812,35.285443],[119.411392,35.231689],[119.397841,35.137777],[119.428022,35.121136],[119.373819,35.078538],[119.354109,35.080007],[119.306066,35.076578],[119.292515,35.068742],[119.307298,35.032977],[119.291899,35.028567],[119.285124,35.068252],[119.238313,35.048657],[119.211211,34.981507],[119.214907,34.925589],[119.202588,34.890253],[119.217371,34.827886],[119.238313,34.799388],[119.272189,34.797914],[119.312841,34.774813],[119.378747,34.764489],[119.440957,34.769406],[119.439725,34.785136],[119.497007,34.754164],[119.494543,34.754656],[119.381827,34.752198],[119.456971,34.748264],[119.525956,34.73351],[119.465594,34.672994],[119.569072,34.615389],[119.610956,34.592729],[119.641137,34.569078],[119.781571,34.515839],[119.811752,34.485754],[119.962657,34.459112],[120.103707,34.391481],[120.311895,34.306991],[120.314359,34.255563],[120.347619,34.179352],[120.367329,34.091674],[120.48559,33.859411],[120.500372,33.818152],[120.534249,33.782346],[120.583524,33.668362],[120.651277,33.57567],[120.717183,33.436945],[120.741205,33.337505],[120.769538,33.307],[120.813885,33.303499],[120.833595,33.274984],[120.819429,33.237951],[120.843451,33.209915],[120.874247,33.093672],[120.871784,33.047032],[120.917979,33.02596],[120.932762,33.005887],[120.957399,32.893395],[120.981421,32.85972],[120.972182,32.761134],[120.953088,32.714318],[120.916131,32.701225],[120.963559,32.68259],[120.979573,32.636236],[120.961711,32.612042],[121.020225,32.605489],[121.153268,32.52933],[121.269681,32.483402],[121.352216,32.474315],[121.390405,32.460682],[121.425513,32.430885],[121.450151,32.282256],[121.493882,32.263533],[121.499426,32.211394],[121.458774,32.177462],[121.542542,32.152132],[121.525295,32.136423],[121.759352,32.059362],[121.772287,32.032984],[121.856055,31.955328],[121.889315,31.866425],[121.970004,31.718911],[121.974931,31.61704],[121.995873,31.493117],[121.981706,31.464024],[121.890547,31.428795],[121.819098,31.437987],[121.682976,31.491075],[121.625693,31.501792],[121.547469,31.531382],[121.434136,31.590535],[121.395332,31.585437],[121.371926,31.553314],[121.343593,31.511996],[121.404571,31.479337],[121.520984,31.394575],[121.599208,31.37465],[121.722396,31.3036],[121.809859,31.196669],[121.946598,31.066039],[121.977395,31.016301],[121.990945,30.96859],[121.994025,30.862823],[121.954605,30.825828],[121.970004,30.789333],[121.987866,30.753338],[121.992793,30.695204],[122.011271,30.66947],[122.075329,30.647848],[122.133227,30.595317],[122.087032,30.602014],[121.997105,30.658659],[121.968156,30.688514],[121.943518,30.776993],[121.904714,30.814007],[121.681128,30.818633],[121.601056,30.805269],[121.517288,30.775451],[121.426129,30.730192],[121.362071,30.679764],[121.274608,30.677191],[121.239499,30.648878],[121.188992,30.632916],[121.148956,30.599953],[121.058413,30.563888],[121.092906,30.515952],[121.183449,30.434458],[121.225333,30.404526],[121.328195,30.397299],[121.371926,30.37097],[121.395332,30.338435],[121.497578,30.258861],[121.561636,30.184395],[121.635548,30.070002],[121.652795,30.071037],[121.699606,30.007832],[121.721164,29.992802],[121.78399,29.99332],[121.835113,29.958068],[121.919497,29.920729],[121.971235,29.955476],[122.00388,29.92021],[122.00696,29.891678],[122.140003,29.901535],[122.143082,29.877668],[122.10243,29.859504],[122.043916,29.822647],[122.003264,29.762401],[121.937359,29.748373],[121.833265,29.653242],[121.872685,29.632437],[121.909641,29.650122],[121.966308,29.636078],[122.000185,29.582486],[121.995257,29.545007],[121.968772,29.515846],[121.973083,29.477821],[121.993409,29.45229],[121.975547,29.411113],[121.937975,29.384],[121.936127,29.348012],[121.958301,29.334448],[121.94475,29.28435],[122.000185,29.278608],[122.002032,29.260336],[121.966924,29.249894],[121.971851,29.193485],[121.948446,29.193485],[121.986634,29.154817],[121.988482,29.110906],[121.970004,29.092604],[121.966308,29.052852],[121.884388,29.105677],[121.85975,29.086328],[121.811091,29.10986],[121.780294,29.10986],[121.767975,29.166837],[121.750113,29.136523],[121.715621,29.125022],[121.608447,29.168927],[121.616454,29.143318],[121.660186,29.118226],[121.658954,29.058606],[121.712541,29.028783],[121.711309,28.985865],[121.743338,28.954451],[121.772287,28.898404],[121.774751,28.863818],[121.687287,28.863294],[121.704534,28.804577],[121.689135,28.719062],[121.646019,28.682842],[121.540694,28.655537],[121.557324,28.645033],[121.596128,28.575156],[121.634317,28.562542],[121.646019,28.511544],[121.671273,28.472621],[121.692831,28.407368],[121.658954,28.392628],[121.634317,28.347868],[121.660186,28.355768],[121.669425,28.33312],[121.627541,28.251966],[121.580114,28.240368],[121.571491,28.279376],[121.538846,28.299401],[121.488955,28.301509],[121.45631,28.250385],[121.402107,28.197127],[121.373774,28.133287],[121.328195,28.134343],[121.299862,28.067297],[121.261057,28.034551],[121.176058,28.022401],[121.140949,28.031382],[121.121239,28.12537],[121.108304,28.139092],[121.059029,28.096338],[121.015298,27.981714],[120.991892,27.95],[121.05595,27.900294],[121.099681,27.895005],[121.162507,27.90717],[121.162507,27.879136],[121.193304,27.872259],[121.192072,27.822518],[121.152652,27.810344],[121.153268,27.809815],[121.149572,27.801875],[121.149572,27.801345],[121.13479,27.787051],[121.134174,27.787051],[121.152036,27.815638],[121.107688,27.81352],[121.070116,27.834162],[121.027616,27.832574],[120.97403,27.887071],[120.942001,27.896592],[120.910588,27.864852],[120.840371,27.758986],[120.797871,27.779638],[120.760915,27.717671],[120.709176,27.682699],[120.685154,27.622797],[120.634647,27.577186],[120.637111,27.561271],[120.703016,27.478475],[120.673451,27.420055],[120.665444,27.357884],[120.580444,27.321203],[120.554575,27.25206],[120.574901,27.234501],[120.545952,27.156785],[120.492365,27.136016],[120.461568,27.142407],[120.403054,27.10086],[120.391967,27.081146],[120.282946,27.089671],[120.29588,27.035845],[120.275554,27.027315],[120.279866,26.987326],[120.25954,26.982526],[120.232439,26.907303],[120.1807,26.920644],[120.117258,26.916909],[120.103707,26.873143],[120.037802,26.86033],[120.042729,26.828292],[120.082765,26.822417],[120.103707,26.794642],[120.136352,26.797847],[120.106787,26.752966],[120.151135,26.750829],[120.162222,26.717691],[120.110483,26.692563],[120.1382,26.638012],[120.093852,26.613938],[120.063671,26.627848],[120.007621,26.595744],[119.967585,26.597885],[119.93802,26.576478],[119.947875,26.56042],[119.867187,26.509019],[119.828383,26.524013],[119.851788,26.595209],[119.901679,26.624638],[119.949107,26.624638],[119.972512,26.654594],[119.969433,26.686681],[119.99407,26.720363],[120.061824,26.768997],[120.052584,26.786629],[119.942947,26.784492],[119.938636,26.747088],[119.899216,26.693098],[119.908455,26.661547],[119.873962,26.642827],[119.864107,26.671174],[119.833926,26.690959],[119.711354,26.686681],[119.664543,26.726243],[119.637441,26.703256],[119.619579,26.649246],[119.577695,26.622498],[119.605412,26.595744],[119.670086,26.618218],[119.740303,26.610727],[119.788346,26.583435],[119.83639,26.454381],[119.835774,26.434019],[119.893672,26.355752],[119.946027,26.374519],[119.95465,26.352534],[119.909687,26.310161],[119.862875,26.307479],[119.845013,26.323036],[119.806825,26.307479],[119.802513,26.268846],[119.7711,26.285481],[119.676246,26.262943],[119.664543,26.202282],[119.604181,26.168985],[119.618963,26.11956],[119.654688,26.090002],[119.668854,26.026024],[119.700267,26.032477],[119.723673,26.011503],[119.69534,25.904424],[119.638057,25.889888],[119.628202,25.87212],[119.626354,25.723406],[119.602949,25.714779],[119.602949,25.68512],[119.543819,25.684581],[119.472986,25.662466],[119.478529,25.631715],[119.541355,25.6247],[119.534579,25.585303],[119.586934,25.59232],[119.616499,25.556691],[119.611572,25.519972],[119.634362,25.475137],[119.675014,25.475137],[119.680557,25.497827],[119.715666,25.51187],[119.716898,25.551292],[119.683637,25.592859],[119.700267,25.616606],[119.784651,25.667321],[119.790194,25.614447],[119.843165,25.597717],[119.831462,25.579905],[119.883817,25.546432],[119.861027,25.531313],[119.81668,25.532393],[119.811136,25.507009],[119.83331,25.48162],[119.864107,25.48],[119.866571,25.455145],[119.804977,25.457847],[119.764325,25.433529],[119.773564,25.395691],[119.688564,25.441095],[119.682405,25.445959],[119.675014,25.468113],[119.622659,25.434069],[119.670086,25.435691],[119.656535,25.396772],[119.665159,25.3719],[119.649144,25.342697],[119.597405,25.334584],[119.582623,25.374063],[119.59063,25.398394],[119.577695,25.445959],[119.555521,25.429205],[119.578927,25.400556],[119.548746,25.365952],[119.486536,25.369737],[119.507478,25.396231],[119.48592,25.418935],[119.491464,25.443257],[119.463131,25.448661],[119.438493,25.412449],[119.45266,25.493505],[119.400921,25.493505],[119.359037,25.521592],[119.343638,25.472436],[119.353493,25.411908],[119.288204,25.410827],[119.26295,25.428124],[119.275269,25.476758],[119.256175,25.488643],[119.219834,25.468654],[119.191501,25.424341],[119.151465,25.426503],[119.14469,25.388121],[119.218603,25.368115],[119.240776,25.316733],[119.247552,25.333502],[119.299291,25.328634],[119.333167,25.287516],[119.380595,25.250173],[119.331935,25.230685],[119.294979,25.237182],[119.314689,25.190076],[119.26911,25.159746],[119.231537,25.188993],[119.190269,25.175995],[119.131755,25.223106],[119.108349,25.193867],[119.137299,25.15487],[119.165632,25.145661],[119.146538,25.056782],[119.119436,25.012861],[119.107118,25.075214],[119.134219,25.106107],[119.075705,25.099604],[119.06585,25.102855],[119.028893,25.139702],[119.032589,25.17437],[119.054147,25.168412],[119.074473,25.211195],[119.055379,25.219316],[118.990089,25.20199],[118.975307,25.237723],[118.996864,25.266411],[118.956212,25.272905],[118.91556,25.256668],[118.940198,25.21715],[118.942046,25.211195],[118.985162,25.19495],[118.985162,25.168954],[118.951901,25.15162],[118.974691,25.115319],[118.892155,25.092558],[118.945126,25.028588],[118.974691,25.024792],[119.016575,25.058409],[119.023966,25.04377],[118.989473,24.973807],[119.004872,24.970009],[119.007335,24.963499],[119.032589,24.961871],[119.032589,24.961328],[119.014111,24.941252],[118.945741,24.954275],[118.91864,24.932569],[118.932807,24.906518],[118.987009,24.898375],[118.988857,24.878831],[118.933423,24.870687],[118.864437,24.887518],[118.834256,24.854397],[118.807771,24.870687],[118.748641,24.84245],[118.69875,24.848967],[118.702445,24.865258],[118.647627,24.843536],[118.650707,24.808774],[118.786213,24.77672],[118.778822,24.743569],[118.703677,24.665278],[118.670417,24.679962],[118.652554,24.653857],[118.661178,24.622306],[118.687047,24.63373],[118.680272,24.58204],[118.614366,24.521617],[118.558316,24.51236],[118.557084,24.572788],[118.512736,24.60816],[118.444367,24.614689],[118.363679,24.567889],[118.375382,24.536317],[118.242955,24.51236],[118.169042,24.559725],[118.150564,24.583673],[118.121615,24.570067],[118.084042,24.528695],[118.048934,24.418122],[118.088354,24.408858],[118.081579,24.35653],[118.112376,24.357075],[118.158571,24.269814],[118.115455,24.229435],[118.074803,24.225615],[118.019369,24.197232],[118.000275,24.152462],[117.936217,24.100029],[117.927594,24.039922],[117.910347,24.012045],[117.864768,24.004938],[117.807486,23.947521],[117.792703,23.906494],[117.762522,23.886796],[117.691073,23.888985],[117.671979,23.878041],[117.651653,23.815093],[117.660276,23.789357],[117.601762,23.70171],[117.54448,23.715956],[117.501364,23.70445],[117.493357,23.642514],[117.454552,23.628259],[117.463791,23.584937],[117.387415,23.555317],[117.302415,23.550379],[117.291328,23.571225],[117.192778,23.5619],[117.085605,23.536663],[117.044953,23.539955],[117.01046,23.502641],[116.963649,23.507031],[116.92854,23.530079],[116.888504,23.501543],[116.895895,23.476295],[116.874953,23.447748],[116.874338,23.447199],[116.871258,23.416449],[116.871874,23.4159],[116.782563,23.313714],[116.798577,23.244996],[116.821367,23.240597],[116.806584,23.200998],[116.74499,23.215299],[116.701259,23.198248],[116.665534,23.158086],[116.566368,23.134424],[116.550969,23.109656],[116.566368,23.088738],[116.557129,23.056253],[116.576839,23.014397],[116.542346,22.995667],[116.50539,22.930645],[116.449955,22.936707],[116.382818,22.91907],[116.317528,22.95269],[116.226985,22.91466],[116.191261,22.874965],[116.104413,22.816505],[116.05637,22.844635],[115.99724,22.826985],[115.965211,22.800506],[115.931334,22.802713],[115.883291,22.78561],[115.829089,22.734838],[115.796444,22.739254],[115.788437,22.809885],[115.760103,22.834707],[115.696046,22.84298],[115.654162,22.865591],[115.583945,22.82864],[115.570394,22.786713],[115.541445,22.755259],[115.609198,22.753052],[115.565467,22.684048],[115.575322,22.650914],[115.471844,22.697852],[115.430576,22.684048],[115.381301,22.684048],[115.349272,22.712206],[115.338185,22.776781],[115.319091,22.783402],[115.230396,22.776781],[115.236555,22.82533],[115.190359,22.818711],[115.190975,22.77347],[115.154635,22.80161],[115.061628,22.783402],[115.053621,22.747533],[115.02344,22.726007],[115.039454,22.713862],[114.945216,22.645391],[114.927969,22.621639],[114.922426,22.549253],[114.88547,22.538751],[114.866375,22.591805],[114.746267,22.581859],[114.743803,22.632687],[114.728405,22.651466],[114.73518,22.724351],[114.749963,22.764089],[114.709927,22.787817],[114.689601,22.7674],[114.601521,22.730975],[114.591666,22.690122],[114.567029,22.685705],[114.51529,22.655332],[114.579964,22.661407],[114.603369,22.638763],[114.559022,22.583517],[114.568261,22.560859],[114.614456,22.545384],[114.628623,22.513875],[114.611377,22.481806],[114.549167,22.465769],[114.506667,22.438667],[114.476486,22.459132],[114.472174,22.522168],[114.427211,22.589042],[114.381631,22.60175],[114.321885,22.587385],[114.294784,22.563623],[114.232574,22.539857],[114.222719,22.553122],[114.166052,22.559201],[114.156813,22.543726],[114.095219,22.534329],[114.082285,22.512216],[114.031778,22.503923],[113.976343,22.510558],[113.954785,22.491206],[113.952937,22.486783],[113.893807,22.442539],[113.869786,22.459685],[113.856851,22.539857],[113.803264,22.593463],[113.773083,22.643182],[113.751525,22.715518],[113.733663,22.736494],[113.678228,22.726007],[113.717033,22.645391],[113.740438,22.534329],[113.691779,22.514981],[113.668373,22.4807],[113.631417,22.475723],[113.573519,22.41156],[113.608627,22.408793],[113.624642,22.443092],[113.66591,22.438667],[113.669605,22.416539],[113.627721,22.349027],[113.604932,22.339617],[113.617866,22.315259],[113.595693,22.304186],[113.594461,22.228864],[113.558736,22.212244],[113.53841,22.209473],[113.534715,22.174009],[113.554425,22.142416],[113.554425,22.107489],[113.567359,22.075327],[113.527939,22.073663],[113.45957,22.043711],[113.442324,22.009315],[113.330223,21.96159],[113.319752,21.909407],[113.266781,21.871646],[113.235368,21.887751],[113.1516,21.979905],[113.142977,22.012089],[113.091854,22.065344],[113.086927,22.12634],[113.045659,22.088636],[113.032108,22.04593],[113.053666,22.012089],[113.047507,21.956595],[112.989608,21.869424],[112.929862,21.838875],[112.893522,21.84443],[112.841167,21.920512],[112.792508,21.921067],[112.68595,21.810541],[112.647146,21.758302],[112.535661,21.753856],[112.497473,21.785535],[112.445734,21.803317],[112.427256,21.789981],[112.415553,21.734956],[112.353343,21.707157],[112.238778,21.702153],[112.236315,21.727173],[112.196894,21.736624],[112.192583,21.789425],[112.136532,21.793871],[112.036134,21.761637],[111.956062,21.710494],[111.954214,21.667674],[111.997946,21.657107],[112.026895,21.633744],[111.972692,21.603144],[111.941896,21.607039],[111.887693,21.578659],[111.810084,21.555283],[111.832258,21.578659],[111.794686,21.61149],[111.736788,21.609821],[111.693672,21.590345],[111.677658,21.529677],[111.650556,21.512418],[111.609904,21.530234],[111.560629,21.50518],[111.521825,21.517429],[111.494724,21.501282],[111.444217,21.514088],[111.382623,21.495714],[111.353058,21.464528],[111.28592,21.41885],[111.258819,21.412165],[111.253275,21.452831],[111.276065,21.443362],[111.28284,21.485691],[111.171355,21.458401],[111.103602,21.455616],[111.034617,21.438906],[110.929291,21.375945],[110.888639,21.367585],[110.796248,21.37483],[110.768531,21.364799],[110.713097,21.3124],[110.65951,21.239902],[110.626249,21.215915],[110.534474,21.204198],[110.501213,21.217588],[110.451322,21.186343],[110.422373,21.190807],[110.39096,21.124949],[110.296722,21.093684],[110.24991,21.045098],[110.241903,21.016051],[110.208642,21.050684],[110.204947,21.003202],[110.180925,20.98197],[110.184005,20.891979],[110.209874,20.860106],[110.269004,20.839972],[110.327519,20.847802],[110.393424,20.816479],[110.407591,20.731987],[110.392192,20.682724],[110.411286,20.670966],[110.466105,20.680485],[110.487047,20.640167],[110.499982,20.572386],[110.550489,20.47262],[110.54125,20.42047],[110.491358,20.373912],[110.452554,20.311064],[110.425453,20.291419],[110.384185,20.293103],[110.349076,20.258859],[110.296722,20.249314],[110.220345,20.25156],[110.168606,20.219553],[110.118099,20.219553],[110.082375,20.258859],[109.993679,20.254368],[109.929006,20.211691],[109.909296,20.236961],[109.916071,20.316677],[109.861252,20.376717],[109.864948,20.40196],[109.895745,20.42776],[109.888354,20.475423],[109.839695,20.489439],[109.811977,20.541566],[109.813825,20.574627],[109.793499,20.615522],[109.74484,20.621124],[109.730057,20.719673],[109.711579,20.774519],[109.664768,20.862343],[109.655529,20.929435],[109.674007,21.067997],[109.674623,21.136671],[109.763934,21.226514],[109.757775,21.346963],[109.770709,21.359783],[109.868644,21.365913],[109.904368,21.429992],[109.894513,21.442248],[109.819369,21.445033],[109.785492,21.45673],[109.704188,21.462857],[109.654913,21.493487],[109.612413,21.556953],[109.581,21.548047],[109.576689,21.493487],[109.540964,21.466199],[109.484914,21.453388],[109.41716,21.438906],[109.245929,21.425536],[109.186183,21.390991],[109.138756,21.388762],[109.095024,21.419407],[109.046365,21.424421],[109.039589,21.457844],[109.074698,21.489589],[109.142451,21.511861],[109.138756,21.567528],[109.110422,21.568085],[109.09872,21.571424],[109.093792,21.579215],[108.937959,21.589789],[108.881293,21.627068],[108.83325,21.610933],[108.801837,21.626512],[108.745786,21.602587],[108.710062,21.646538],[108.705134,21.622061],[108.678033,21.659331],[108.658939,21.643757],[108.626294,21.67991],[108.591802,21.677129],[108.492635,21.554727],[108.397781,21.533017],[108.330027,21.540254],[108.230245,21.491259],[108.210535,21.505737],[108.249955,21.561406],[108.241332,21.599805],[108.205608,21.597579],[108.156332,21.55083],[108.193905,21.519656],[108.108289,21.508521],[108.041768,21.544151],[107.958,21.534131],[107.929051,21.585893],[107.893942,21.596466],[107.892095,21.622617],[107.863761,21.650988],[107.837892,21.640419],[107.807711,21.655438],[107.712856,21.616497],[107.603219,21.597579],[107.584741,21.614828],[107.547168,21.58645],[107.486806,21.59591],[107.500973,21.613715],[107.477567,21.659888],[107.431372,21.642088],[107.388256,21.594241],[107.363619,21.602031],[107.356843,21.667674],[107.310648,21.733844],[107.271844,21.727173],[107.242279,21.703265],[107.199163,21.718833],[107.194851,21.736624],[107.148656,21.758858],[107.093837,21.803317],[107.018077,21.81943],[107.018693,21.859427],[107.058729,21.887196],[107.05996,21.914959],[106.999598,21.947714],[106.974345,21.923288],[106.935541,21.933836],[106.926302,21.967695],[106.859164,21.986009],[106.802498,21.98157],[106.790179,22.004876],[106.73844,22.008205],[106.698404,21.959925],[106.683006,21.999882],[106.706411,22.021521],[106.71565,22.089745],[106.691629,22.13521],[106.706411,22.160707],[106.673151,22.182322],[106.7021,22.207257],[106.688549,22.260438],[106.670071,22.283144],[106.663296,22.33076],[106.562897,22.345706],[106.588767,22.374486],[106.560434,22.455813],[106.588151,22.472958],[106.585071,22.517192],[106.61402,22.602303],[106.652825,22.57357],[106.711955,22.575228],[106.756302,22.68957],[106.780324,22.708894],[106.768621,22.739254],[106.820976,22.768504],[106.838838,22.803265],[106.813585,22.817608],[106.808657,22.817608],[106.804346,22.816505],[106.801882,22.815401],[106.776012,22.813746],[106.709491,22.866142],[106.716882,22.881582],[106.674998,22.891506],[106.657136,22.863385],[106.631267,22.88103],[106.606013,22.925684],[106.562282,22.923479],[106.525941,22.946628],[106.504383,22.91025],[106.41384,22.877171],[106.37134,22.878273],[106.366413,22.857871],[106.286957,22.867245],[106.258007,22.889852],[106.270326,22.907494],[106.206885,22.978588],[106.153914,22.988505],[106.106486,22.980792],[106.08616,22.996218],[106.019639,22.990709],[105.994385,22.93781],[105.959277,22.948832],[105.893987,22.936707],[105.879205,22.916865],[105.839169,22.987403],[105.805908,22.994565],[105.780039,23.022659],[105.74185,23.030921],[105.724604,23.06231],[105.648844,23.078828],[105.625438,23.064513],[105.574931,23.066165],[105.558916,23.177893],[105.542902,23.184495],[105.50225,23.202648],[105.445584,23.292827],[105.416018,23.283482],[105.372903,23.317561],[105.353809,23.362069],[105.325475,23.390086],[105.260186,23.31811],[105.238012,23.26424],[105.181962,23.279084],[105.122215,23.247745],[105.093266,23.260942],[104.958991,23.188896],[104.949136,23.152033],[104.912796,23.175693],[104.882615,23.163589],[104.874608,23.123417],[104.804391,23.110207],[104.821021,23.032022],[104.860441,22.970874],[104.846275,22.926235],[104.772362,22.893711],[104.760659,22.862282],[104.732942,22.852356],[104.737869,22.825882],[104.674428,22.817056],[104.596203,22.846289],[104.527834,22.814298],[104.498885,22.774574],[104.422508,22.734838],[104.375697,22.690122],[104.323342,22.728767],[104.272835,22.73815],[104.256821,22.77347],[104.274067,22.828088],[104.261748,22.841877],[104.224176,22.826434],[104.117618,22.808781],[104.089901,22.768504],[104.045553,22.728215],[104.04309,22.67687],[104.022148,22.593463],[104.009213,22.575228],[104.009213,22.517745],[103.964865,22.502265],[103.894032,22.564728],[103.875554,22.565833],[103.863851,22.584069],[103.825047,22.615562],[103.766533,22.688465],[103.669215,22.766297],[103.642113,22.794989],[103.567585,22.701164],[103.580519,22.66693],[103.529396,22.59291],[103.50907,22.601198],[103.457947,22.658646],[103.436389,22.6973],[103.441317,22.753052],[103.375411,22.794989],[103.323057,22.807678],[103.321209,22.777885],[103.288564,22.732078],[103.283021,22.678526],[103.220195,22.643734],[103.195557,22.648153],[103.161065,22.590147],[103.183238,22.558649],[103.119181,22.518298],[103.085304,22.509452],[103.071753,22.445304],[103.030485,22.441432],[102.986754,22.477935],[102.930703,22.482359],[102.892515,22.533223],[102.880196,22.586832],[102.82353,22.623296],[102.80074,22.620534],[102.688639,22.70006],[102.657226,22.687913],[102.607335,22.730975],[102.569763,22.701164],[102.551285,22.743669],[102.498314,22.777885],[102.45951,22.762986],[102.43672,22.699508],[102.384365,22.679631],[102.404691,22.629925],[102.356648,22.563623],[102.322771,22.554227],[102.25625,22.457473],[102.270416,22.419858],[102.179257,22.430369],[102.145381,22.397727],[102.131214,22.430922],[102.046214,22.458026],[101.978461,22.427603],[101.907628,22.437007],[101.901469,22.384447],[101.862665,22.389427],[101.823244,22.42705],[101.824476,22.45692],[101.774585,22.506135],[101.715455,22.477935],[101.672339,22.47517],[101.648318,22.400494],[101.671723,22.372826],[101.625528,22.28259],[101.56455,22.269299],[101.547304,22.238282],[101.596579,22.161262],[101.602738,22.131883],[101.573789,22.115251],[101.626144,22.005986],[101.606434,21.967695],[101.666796,21.934391],[101.701288,21.938832],[101.700057,21.897191],[101.735165,21.875534],[101.740093,21.845541],[101.771506,21.833319],[101.747484,21.729953],[101.76781,21.716054],[101.780129,21.640975],[101.807846,21.644313],[101.828788,21.617054],[101.804766,21.577546],[101.754875,21.58478],[101.755491,21.538027],[101.772737,21.512975],[101.741324,21.482906],[101.749948,21.409379],[101.730238,21.336929],[101.745636,21.297345],[101.791832,21.285636],[101.833715,21.252731],[101.834331,21.204756],[101.794911,21.208104],[101.76473,21.147835],[101.703136,21.14616],[101.672339,21.194713],[101.605818,21.172392],[101.588572,21.191365],[101.601506,21.233208],[101.532521,21.252174],[101.439514,21.227072],[101.387775,21.225956],[101.290457,21.17853],[101.222088,21.234324],[101.246725,21.275598],[101.244877,21.302364],[101.183899,21.334699],[101.142631,21.409379],[101.194986,21.424979],[101.193138,21.473996],[101.225167,21.499055],[101.210385,21.509077],[101.209153,21.55751],[101.146943,21.560293],[101.169117,21.590345],[101.153102,21.669343],[101.116762,21.691032],[101.111835,21.746074],[101.123537,21.771642],[101.089661,21.773865],[101.015132,21.707157],[100.940603,21.697149],[100.870386,21.67268],[100.847597,21.634856],[100.804481,21.609821],[100.789082,21.570867],[100.753358,21.555283],[100.730568,21.518542],[100.691764,21.510748],[100.579047,21.451717],[100.526692,21.471211],[100.48296,21.458958],[100.437381,21.533017],[100.350534,21.52912],[100.298795,21.477894],[100.235353,21.466756],[100.206404,21.509634],[100.180534,21.514088],[100.168831,21.482906],[100.131259,21.504066],[100.123252,21.565302],[100.107853,21.585337],[100.169447,21.663225],[100.131875,21.699929],[100.094303,21.702709],[100.049339,21.669899],[99.991441,21.703821],[99.944014,21.821097],[99.960028,21.907186],[99.982202,21.919401],[100.000064,21.973245],[99.965571,22.014309],[99.972347,22.053141],[99.871333,22.067007],[99.870101,22.029288],[99.762927,22.068117],[99.696406,22.067562],[99.648979,22.100835],[99.581841,22.103053],[99.578762,22.098617],[99.562747,22.113034],[99.516552,22.099726],[99.486987,22.128557],[99.400139,22.100281],[99.35456,22.095845],[99.294814,22.109152],[99.219669,22.110816],[99.156227,22.159599],[99.188256,22.162924],[99.175321,22.185647],[99.207966,22.232188],[99.235683,22.250468],[99.233836,22.296434],[99.278183,22.34626],[99.251698,22.393301],[99.297277,22.41156],[99.382277,22.493418],[99.359487,22.535435],[99.385973,22.57136],[99.339777,22.708894],[99.31514,22.737598],[99.326842,22.751396],[99.385357,22.761882],[99.401371,22.826434],[99.462965,22.844635],[99.43648,22.913557],[99.446951,22.934503],[99.531334,22.897019],[99.563363,22.925684],[99.533798,22.961507],[99.517168,23.006685],[99.528255,23.065614],[99.477747,23.083233],[99.440791,23.079379],[99.380429,23.099748],[99.3484,23.12892],[99.281879,23.101399],[99.255393,23.077727],[99.187024,23.100299],[99.106336,23.086536],[99.048438,23.11461],[99.057677,23.164689],[99.002242,23.160287],[98.906772,23.185595],[98.889525,23.209249],[98.928946,23.26589],[98.936953,23.309866],[98.906772,23.331849],[98.872895,23.329651],[98.920938,23.360971],[98.912315,23.426333],[98.874743,23.483431],[98.826084,23.470257],[98.80391,23.540504],[98.844562,23.578904],[98.882134,23.595358],[98.882134,23.620035],[98.847026,23.632097],[98.835939,23.683625],[98.811917,23.703354],[98.824236,23.727462],[98.784816,23.781691],[98.696121,23.784429],[98.669019,23.800857],[98.701664,23.834254],[98.68565,23.90157],[98.701048,23.946427],[98.673331,23.960647],[98.701048,23.981427],[98.727533,23.970491],[98.773729,24.022431],[98.807606,24.025164],[98.895069,24.098936],[98.876591,24.15137],[98.841482,24.126794],[98.818692,24.133348],[98.71891,24.127887],[98.681954,24.100029],[98.646229,24.106038],[98.593875,24.08036],[98.547063,24.128433],[98.487933,24.123517],[98.48239,24.122425],[98.37768,24.114232],[98.343187,24.098936],[98.219999,24.113685],[98.19721,24.09839],[98.132536,24.09238],[98.125761,24.092927],[98.123297,24.092927],[98.096196,24.08637],[98.091268,24.085824],[97.995182,24.04648],[97.984095,24.031177],[97.902175,24.014231],[97.896015,23.974319],[97.863371,23.978693],[97.8104,23.943146],[97.795617,23.951897],[97.763588,23.907041],[97.72848,23.895551],[97.718009,23.867643],[97.684132,23.876946],[97.647176,23.840823],[97.640401,23.866001],[97.633009,23.879682],[97.5283,23.926736],[97.529531,23.943146],[97.572647,23.983068],[97.628698,24.004938],[97.637321,24.04812],[97.730944,24.113685],[97.753733,24.168843],[97.72848,24.183585],[97.729712,24.227252],[97.767284,24.258357],[97.721089,24.295999],[97.665038,24.296544],[97.662574,24.339083],[97.716161,24.358711],[97.679821,24.401228],[97.669966,24.452993],[97.588662,24.435559],[97.530147,24.443187],[97.554785,24.490577],[97.570799,24.602719],[97.569567,24.708236],[97.547394,24.739221],[97.569567,24.765852],[97.652103,24.790846],[97.680437,24.827243],[97.765436,24.823984],[97.797465,24.845709],[97.785762,24.876117],[97.729712,24.908689],[97.716777,24.978147],[97.727864,25.042686],[97.719857,25.080634],[97.743262,25.078466],[97.796233,25.155954],[97.839349,25.27074],[97.875689,25.25721],[97.904023,25.216609],[97.940363,25.214985],[98.0075,25.279399],[98.006884,25.298338],[98.06971,25.311864],[98.099891,25.354055],[98.101123,25.388662],[98.137464,25.381633],[98.15779,25.457307],[98.131304,25.51025],[98.163949,25.524292],[98.189818,25.569108],[98.170724,25.620383],[98.247717,25.607971],[98.314854,25.543193],[98.326557,25.566409],[98.402317,25.593939],[98.409709,25.664084],[98.457752,25.682963],[98.461448,25.735267],[98.476846,25.77731],[98.529201,25.840884],[98.553839,25.845731],[98.640686,25.798864],[98.677642,25.816105],[98.705976,25.855426],[98.686881,25.925955],[98.637606,25.971696],[98.614201,25.968468],[98.602498,26.054523],[98.575396,26.118485],[98.632679,26.145887],[98.656084,26.139977],[98.661012,26.087852],[98.720142,26.127082],[98.712751,26.156093],[98.735541,26.185097],[98.713367,26.231274],[98.672715,26.239863],[98.681338,26.308016],[98.733693,26.350926],[98.750323,26.424372],[98.741084,26.432947],[98.757098,26.491881],[98.753403,26.559349],[98.773113,26.578083],[98.781736,26.620893],[98.762642,26.660478],[98.770033,26.690424],[98.746012,26.696841],[98.762026,26.798916],[98.730613,26.851253],[98.757098,26.877947],[98.732461,27.002257],[98.762642,27.018252],[98.765722,27.05077],[98.712751,27.075817],[98.713983,27.139744],[98.696121,27.211086],[98.723222,27.221198],[98.717062,27.271211],[98.734925,27.287168],[98.741084,27.330241],[98.706591,27.362136],[98.702896,27.412618],[98.686881,27.425367],[98.704128,27.463607],[98.685034,27.484315],[98.706591,27.553313],[98.662244,27.586734],[98.650541,27.567637],[98.583404,27.571351],[98.587099,27.587265],[98.554454,27.646126],[98.53536,27.620676],[98.474998,27.634462],[98.444201,27.665209],[98.430035,27.653547],[98.429419,27.549068],[98.388767,27.515104],[98.337644,27.508734],[98.317318,27.51935],[98.310542,27.583552],[98.283441,27.654608],[98.234166,27.690648],[98.215688,27.810874],[98.169492,27.851096],[98.205217,27.889716],[98.187355,27.939426],[98.143007,27.948942],[98.133152,27.990698],[98.160253,28.101089],[98.139311,28.142259],[98.097427,28.166531],[98.090036,28.195544],[98.056775,28.202401],[98.03337,28.187105],[98.008116,28.214003],[98.020435,28.253548],[97.907718,28.363141],[97.871378,28.361561],[97.842429,28.326798],[97.801161,28.326798],[97.769748,28.3742],[97.738335,28.396313],[97.737103,28.465782],[97.68598,28.519958],[97.634857,28.532051],[97.60406,28.515225],[97.569567,28.541515],[97.521524,28.495766],[97.507974,28.46473],[97.521524,28.444736],[97.499966,28.428948],[97.485184,28.38631],[97.488879,28.347341],[97.518445,28.327852],[97.469169,28.30309],[97.461162,28.26778],[97.422358,28.297293],[97.402032,28.279903],[97.398336,28.238786],[97.349677,28.235623],[97.362612,28.199236],[97.352757,28.149646],[97.326887,28.132759],[97.340438,28.104785],[97.305945,28.071522],[97.320728,28.054095],[97.375547,28.062545],[97.378626,28.031382],[97.413119,28.01342],[97.379242,27.970087],[97.372467,27.907699],[97.386634,27.882839],[97.324424,27.880723],[97.303482,27.913516],[97.253591,27.891832],[97.167975,27.811932],[97.103301,27.780697],[97.097758,27.740979],[97.062649,27.742568],[97.049099,27.81405],[97.008447,27.807698],[96.972722,27.861149],[96.908049,27.884426],[96.849534,27.874375],[96.810114,27.890245],[96.784245,27.931495],[96.711564,27.9574],[96.690622,27.948942],[96.635188,27.994926],[96.623485,28.024514],[96.538485,28.075218],[96.499681,28.067297],[96.46334,28.143314],[96.426384,28.161782],[96.395587,28.143842],[96.398667,28.118509],[96.367254,28.118509],[96.298269,28.140148],[96.275479,28.228241],[96.194175,28.212949],[96.098088,28.212421],[96.074683,28.193434],[95.989067,28.198181],[95.936096,28.240368],[95.907763,28.241422],[95.899756,28.278322],[95.874502,28.29782],[95.832003,28.295186],[95.787655,28.270416],[95.740228,28.275159],[95.674322,28.254075],[95.528345,28.182885],[95.437802,28.161782],[95.39715,28.142259],[95.371896,28.110063],[95.352802,28.04089],[95.32878,28.017646],[95.28628,27.939955],[95.067006,27.840512],[95.015267,27.82887],[94.947514,27.792345],[94.88592,27.743098],[94.836645,27.728796],[94.78121,27.699127],[94.722696,27.683759],[94.660486,27.650367],[94.524979,27.596282],[94.478168,27.602116],[94.443675,27.585143],[94.399944,27.589386],[94.353132,27.578778],[94.277372,27.58143],[94.220705,27.536333],[94.147409,27.458297],[94.056866,27.375423],[93.970634,27.30525],[93.849294,27.168499],[93.841903,27.045973],[93.817265,27.025183],[93.747048,27.015587],[93.625092,26.955323],[93.56781,26.938252],[93.232739,26.906769],[93.111399,26.880082],[93.050421,26.883819],[92.909371,26.914241],[92.802813,26.895028],[92.682089,26.947855],[92.64698,26.952656],[92.549046,26.941453],[92.496691,26.921711],[92.404916,26.9025],[92.28604,26.892359],[92.197961,26.86994],[92.109265,26.854991],[92.124664,26.960124],[92.076005,27.041175],[92.043976,27.052902],[92.02673,27.108318],[92.032273,27.167967],[92.061222,27.190327],[92.071077,27.237694],[92.091403,27.264296],[92.125896,27.273339],[92.064918,27.391365],[92.021802,27.444489],[92.010715,27.474758],[91.946657,27.464138],[91.839484,27.489624],[91.753868,27.462545],[91.71876,27.467324],[91.663325,27.507142],[91.626985,27.509265],[91.585101,27.540578],[91.564775,27.58196],[91.582637,27.598933],[91.562311,27.627569],[91.570934,27.650897],[91.622673,27.692238],[91.642383,27.7664],[91.610355,27.819343],[91.544449,27.820401],[91.561079,27.855329],[91.618978,27.856916],[91.611586,27.891303],[91.552456,27.90717],[91.486551,27.937311],[91.490246,27.971672],[91.464993,28.002852],[91.309776,28.057791],[91.251878,27.970615],[91.216153,27.989113],[91.162567,27.968501],[91.147784,27.927794],[91.155175,27.894476],[91.113292,27.846333],[91.025828,27.857445],[90.96485,27.900294],[90.976553,27.935725],[90.96177,27.9537],[90.896481,27.946299],[90.853365,27.969029],[90.806554,28.015005],[90.802242,28.040362],[90.741264,28.053038],[90.701844,28.076274],[90.591591,28.021345],[90.569417,28.044059],[90.513983,28.062016],[90.47949,28.044587],[90.43699,28.063073],[90.384019,28.06096],[90.367389,28.088946],[90.297172,28.153868],[90.231882,28.144897],[90.189999,28.161782],[90.166593,28.187632],[90.124709,28.190797],[90.103151,28.141731],[90.07297,28.155451],[90.03355,28.136981],[90.017536,28.162837],[89.976268,28.189215],[89.901739,28.18183],[89.869094,28.221386],[89.789638,28.240895],[89.779167,28.197127],[89.720037,28.170224],[89.605472,28.161782],[89.541414,28.088418],[89.511233,28.086307],[89.461958,28.03191],[89.44348,27.968501],[89.375727,27.875962],[89.295655,27.84845],[89.238988,27.796581],[89.184786,27.673689],[89.131815,27.633402],[89.128735,27.611131],[89.163228,27.574534],[89.109025,27.537925],[89.095474,27.471572],[89.132431,27.441302],[89.182938,27.373829],[89.152757,27.319076],[89.077612,27.287168],[89.067757,27.240354],[88.984605,27.208957],[88.942105,27.261636],[88.911924,27.272807],[88.920548,27.325456],[88.901453,27.327583],[88.867577,27.3818],[88.838012,27.37808],[88.809063,27.405711],[88.783193,27.467324],[88.797976,27.521473],[88.770874,27.563924],[88.813374,27.606889],[88.816454,27.641354],[88.852178,27.671039],[88.850331,27.710783],[88.870657,27.743098],[88.863265,27.811932],[88.888519,27.846863],[88.864497,27.921448],[88.846635,27.921448],[88.842939,28.006023],[88.812142,28.018175],[88.764099,28.068353],[88.67602,28.068353],[88.645223,28.111119],[88.620585,28.091586],[88.565151,28.083139],[88.554064,28.027684],[88.498013,28.04089],[88.469064,28.009721],[88.43334,28.002852],[88.401311,27.976958],[88.357579,27.986471],[88.254101,27.939426],[88.242398,27.967444],[88.203594,27.943127],[88.156783,27.957929],[88.120442,27.915103],[88.137689,27.878607],[88.111819,27.864852],[88.090877,27.885484],[88.037291,27.901881],[87.982472,27.884426],[87.930733,27.909285],[87.826639,27.927794],[87.782292,27.890774],[87.77798,27.860091],[87.727473,27.802933],[87.668343,27.809815],[87.670191,27.832045],[87.598126,27.814579],[87.58088,27.859562],[87.45954,27.820931],[87.418272,27.825694],[87.421967,27.856916],[87.364069,27.824106],[87.317258,27.826753],[87.280917,27.845275],[87.249504,27.839454],[87.227946,27.812991],[87.173744,27.818284],[87.118309,27.840512],[87.080737,27.910872],[87.035157,27.946299],[86.935375,27.955286],[86.926752,27.985942],[86.885484,27.995983],[86.864542,28.022401],[86.827586,28.012363],[86.756753,28.032967],[86.768456,28.06941],[86.74813,28.089474],[86.700086,28.101617],[86.662514,28.092114],[86.647732,28.06941],[86.611391,28.069938],[86.60092,28.097922],[86.568891,28.103201],[86.55842,28.047757],[86.537478,28.044587],[86.513457,27.996511],[86.514689,27.954757],[86.475884,27.944713],[86.450015,27.908757],[86.414906,27.904526],[86.393349,27.926736],[86.308965,27.950528],[86.27324,27.976958],[86.231972,27.974315],[86.206103,28.084195],[86.223965,28.092642],[86.19132,28.167058],[86.140198,28.114814],[86.128495,28.086835],[86.086611,28.090002],[86.082915,28.018175],[86.125415,27.923035],[86.053966,27.900823],[86.002227,27.90717],[85.949256,27.937311],[85.980053,27.984357],[85.901213,28.053566],[85.898749,28.101617],[85.871648,28.124843],[85.854402,28.172334],[85.791576,28.195544],[85.753388,28.227714],[85.720743,28.372093],[85.682555,28.375779],[85.650526,28.283592],[85.601251,28.254075],[85.602483,28.295712],[85.520563,28.326798],[85.458969,28.332593],[85.415853,28.321003],[85.379512,28.274105],[85.349947,28.298347],[85.272339,28.282538],[85.209513,28.338914],[85.179948,28.324164],[85.113427,28.344708],[85.129441,28.377885],[85.108499,28.461047],[85.160238,28.49261],[85.189803,28.544669],[85.18426,28.587244],[85.195963,28.624022],[85.155926,28.643983],[85.126361,28.676016],[85.05676,28.674441],[84.995782,28.611414],[84.981616,28.586193],[84.896616,28.587244],[84.857196,28.567798],[84.773428,28.610363],[84.698284,28.633478],[84.699515,28.671816],[84.669334,28.680742],[84.650856,28.714338],[84.620059,28.732182],[84.557233,28.74635],[84.483321,28.735331],[84.445133,28.764189],[84.434046,28.823978],[84.404481,28.828173],[84.408176,28.85386],[84.340423,28.866963],[84.330568,28.859101],[84.268358,28.895261],[84.234481,28.889497],[84.228322,28.949738],[84.248648,29.030353],[84.224626,29.049189],[84.194445,29.045004],[84.192597,29.084236],[84.20738,29.118749],[84.176583,29.133909],[84.17104,29.19453],[84.197525,29.210202],[84.203068,29.239972],[84.130388,29.239972],[84.116837,29.286438],[84.052163,29.296877],[84.002272,29.291658],[83.986874,29.325057],[83.949301,29.312533],[83.911729,29.323491],[83.851367,29.294789],[83.82057,29.294267],[83.800244,29.249372],[83.727563,29.244672],[83.667201,29.200277],[83.656114,29.16736],[83.596368,29.174153],[83.57789,29.203934],[83.548941,29.201322],[83.492274,29.280174],[83.463941,29.285916],[83.450391,29.332883],[83.423289,29.361053],[83.415898,29.420496],[83.383253,29.42206],[83.325355,29.502826],[83.27608,29.505951],[83.266841,29.571035],[83.217565,29.60018],[83.164595,29.595496],[83.159667,29.61735],[83.12887,29.623593],[83.088834,29.604863],[83.011226,29.667804],[82.966878,29.658963],[82.9484,29.704718],[82.885574,29.689122],[82.830756,29.687562],[82.816589,29.717192],[82.774089,29.726548],[82.757459,29.761881],[82.691553,29.766037],[82.737749,29.80655],[82.703872,29.847566],[82.6238,29.834588],[82.64351,29.868846],[82.609017,29.886489],[82.560974,29.955476],[82.498148,29.947698],[82.474743,29.973622],[82.431011,29.989692],[82.412533,30.011978],[82.368185,30.014051],[82.333693,30.045138],[82.311519,30.035813],[82.246845,30.071555],[82.17786,30.06793],[82.183403,30.12178],[82.207425,30.143519],[82.188947,30.18543],[82.142135,30.200948],[82.114418,30.226806],[82.11873,30.279019],[82.132896,30.30434],[82.104563,30.346182],[82.060215,30.332237],[82.022027,30.339468],[81.99123,30.322939],[81.954274,30.355995],[81.939491,30.344633],[81.872354,30.373035],[81.759021,30.385426],[81.723913,30.407623],[81.63029,30.446842],[81.613044,30.412784],[81.566232,30.428782],[81.555761,30.369421],[81.494783,30.381296],[81.454131,30.412268],[81.418407,30.420525],[81.406704,30.40401],[81.432573,30.379231],[81.406088,30.369421],[81.399929,30.319323],[81.427646,30.305373],[81.406088,30.291938],[81.419023,30.270232],[81.397465,30.240767],[81.393769,30.199396],[81.335871,30.149729],[81.269349,30.153351],[81.293371,30.094859],[81.2829,30.061197],[81.247792,30.032705],[81.256415,30.011978],[81.225618,30.005759],[81.131995,30.016124],[81.09627,30.052909],[81.110437,30.085538],[81.085799,30.100554],[81.082104,30.151281],[81.038372,30.205086],[81.034677,30.246971],[80.996488,30.267648],[80.933662,30.266614],[80.910873,30.30279],[80.81725,30.321389],[80.719316,30.414848],[80.692214,30.416913],[80.633084,30.458707],[80.585041,30.463866],[80.549316,30.448905],[80.504969,30.483466],[80.446454,30.495327],[80.43044,30.515952],[80.357759,30.520592],[80.322035,30.564403],[80.261673,30.566465],[80.214245,30.586044],[80.143412,30.55822],[80.04363,30.603559],[80.014065,30.661748],[79.970333,30.685941],[79.955551,30.738422],[79.961094,30.771337],[79.900732,30.7991],[79.913051,30.833022],[79.890877,30.855116],[79.835443,30.851006],[79.75845,30.936769],[79.729501,30.941389],[79.668523,30.980392],[79.660516,30.956787],[79.59769,30.925989],[79.550879,30.957813],[79.505915,31.027584],[79.427075,31.018353],[79.424611,31.061425],[79.404901,31.071678],[79.35809,31.031174],[79.316206,31.01784],[79.33222,30.969103],[79.227511,30.949088],[79.205953,31.0004],[79.181931,31.015788],[79.096931,30.992192],[79.059359,31.028097],[79.010084,31.043994],[78.97436,31.115751],[78.997765,31.158779],[78.930628,31.220726],[78.923852,31.246824],[78.884432,31.277006],[78.865338,31.312804],[78.859179,31.289281],[78.795121,31.301043],[78.755085,31.355742],[78.760013,31.392531],[78.792041,31.435944],[78.755701,31.478316],[78.729832,31.478316],[78.740303,31.532912],[78.779723,31.545154],[78.833925,31.584927],[78.845628,31.609905],[78.806824,31.64099],[78.798817,31.675629],[78.763092,31.668499],[78.706426,31.778453],[78.654687,31.819144],[78.665158,31.851684],[78.739687,31.885228],[78.768636,31.92638],[78.762476,31.947203],[78.705194,31.988835],[78.60726,32.023851],[78.609107,32.052768],[78.527188,32.11463],[78.509941,32.147065],[78.469905,32.127808],[78.429869,32.194683],[78.430485,32.212407],[78.475449,32.236708],[78.508709,32.297939],[78.480992,32.329297],[78.483456,32.357106],[78.458818,32.379853],[78.472985,32.435431],[78.426174,32.502584],[78.395377,32.530339],[78.424942,32.565652],[78.500086,32.580782],[78.518564,32.605993],[78.577695,32.615067],[78.588782,32.637748],[78.628202,32.630188],[78.675013,32.658408],[78.6861,32.680071],[78.741534,32.703743],[78.74215,32.654881],[78.781571,32.608009],[78.760629,32.563635],[78.782186,32.480373],[78.81052,32.436441],[78.87273,32.40512],[78.904142,32.374798],[78.970664,32.331826],[79.005772,32.375304],[79.067982,32.380863],[79.103091,32.369744],[79.124649,32.416235],[79.135736,32.472295],[79.180083,32.492994],[79.190554,32.511669],[79.252148,32.516715],[79.272474,32.561113],[79.308199,32.596918],[79.299575,32.637244],[79.27309,32.678056],[79.301423,32.728919],[79.275554,32.778746],[79.225047,32.784281],[79.237982,32.846145],[79.227511,32.89038],[79.255844,32.942628],[79.204721,32.964724],[79.162837,33.01191],[79.139431,33.117735],[79.162221,33.165841],[79.152366,33.184375],[79.10925,33.200401],[79.072294,33.22844],[79.083997,33.245459],[79.041497,33.268479],[79.022403,33.323504],[78.9682,33.334505],[78.949722,33.376495],[78.896751,33.41247],[78.84994,33.419963],[78.816679,33.480882],[78.74215,33.55323],[78.755085,33.623025],[78.713201,33.623025],[78.684868,33.654415],[78.692259,33.676331],[78.779723,33.73259],[78.758165,33.790802],[78.766172,33.823124],[78.756317,33.8773],[78.762476,33.90959],[78.734143,33.918529],[78.744614,33.980585],[78.736607,33.999937],[78.656535,34.030196],[78.661462,34.086718],[78.737223,34.089692],[78.801897,34.137258],[78.828998,34.125369],[78.878273,34.163012],[78.910302,34.143202],[78.9257,34.155584],[78.941099,34.212022],[78.958345,34.230827],[78.981751,34.31836],[79.019939,34.313417],[79.039649,34.33467],[78.973128,34.362833],[78.958961,34.386049],[78.899831,34.354929],[78.878273,34.391481],[78.809288,34.432955],[78.742766,34.45467],[78.758781,34.481807],[78.715049,34.502031],[78.708274,34.522249],[78.634977,34.538026],[78.58139,34.505483],[78.562912,34.51288],[78.559832,34.55725],[78.542586,34.574499],[78.492695,34.578441],[78.436029,34.543942],[78.427405,34.594207],[78.397224,34.605538],[78.346101,34.60406],[78.280812,34.623269],[78.265413,34.651335],[78.267261,34.705472],[78.213059,34.717771],[78.21429,34.760556],[78.230921,34.776288],[78.237696,34.882398],[78.206283,34.891726],[78.182262,34.936874],[78.201972,34.974642],[78.160704,34.990823],[78.123131,35.036897],[78.150849,35.069721],[78.124979,35.108407],[78.078784,35.100084],[78.062769,35.114772],[78.060306,35.180344],[78.01719,35.228267],[78.020885,35.315237],[78.013494,35.366008],[78.046755,35.384063],[78.107117,35.437229],[78.113892,35.466967],[78.140378,35.494745],[78.048603,35.491334],[78.029509,35.469404],[78.009799,35.491821],[77.951284,35.478664],[77.917408,35.490847],[77.914944,35.465017],[77.870596,35.495232],[77.85643,35.487436],[77.816394,35.518616],[77.797299,35.491334],[77.757879,35.497181],[77.735706,35.461605],[77.690742,35.448443],[77.657481,35.477689],[77.639619,35.45478],[77.590344,35.460143],[77.578025,35.47574],[77.518895,35.482075],[77.451758,35.46063],[77.396939,35.467942],[77.355055,35.494257],[77.331649,35.530793],[77.307628,35.540533],[77.195527,35.519103],[77.093281,35.569746],[77.072339,35.591162],[76.99781,35.611113],[76.967013,35.591649],[76.906651,35.615005],[76.848753,35.668018],[76.769297,35.653917],[76.69292,35.747714],[76.593754,35.771996],[76.566037,35.819082],[76.587595,35.840431],[76.579587,35.866625],[76.59745,35.895718],[76.55803,35.923347],[76.51553,35.881173],[76.471798,35.886021],[76.431762,35.851589],[76.369552,35.86323],[76.365857,35.82442],[76.298719,35.841401],[76.228502,35.837035],[76.221727,35.823449],[76.160133,35.82442],[76.146582,35.839946],[76.16506,35.908807],[76.117017,35.975186],[76.097307,36.022635],[76.044336,36.026991],[76.028322,36.016827],[75.982742,36.031347],[75.949482,36.070056],[75.936547,36.13485],[75.96796,36.159013],[76.016619,36.165294],[76.011691,36.229044],[76.060967,36.225182],[76.055423,36.252695],[75.998757,36.312034],[75.991365,36.35205],[76.035097,36.409386],[75.991981,36.505654],[75.924228,36.566242],[75.947018,36.590752],[75.871257,36.666636],[75.8072,36.707908],[75.724048,36.750597],[75.634121,36.771693],[75.588541,36.762584],[75.537418,36.773131],[75.536802,36.729975],[75.504773,36.743404],[75.458578,36.720861],[75.425933,36.778883],[75.434556,36.83303],[75.430245,36.873255],[75.396368,36.904367],[75.413614,36.954599],[75.345861,36.960816],[75.288579,36.974682],[75.244847,36.963207],[75.16847,36.991892],[75.172166,37.013877],[75.063145,37.006231],[75.032348,37.016745],[75.005862,36.99476],[74.927638,36.978029],[74.938725,36.94312],[74.893762,36.939772],[74.86974,36.990458],[74.84387,37.0134],[74.84695,37.056873],[74.806914,37.054485],[74.792747,37.027257],[74.739161,37.028212],[74.70898,37.084569],[74.632603,37.066425],[74.617205,37.043499],[74.56793,37.032512],[74.530357,37.082182],[74.498944,37.072155],[74.496481,37.116072],[74.465068,37.147085],[74.487858,37.161871],[74.477387,37.19954],[74.511263,37.240048],[74.54514,37.2491],[74.578401,37.231472],[74.598727,37.258151],[74.642458,37.261485],[74.665864,37.23576],[74.727458,37.282916],[74.753943,37.281011],[74.800139,37.248147],[74.816153,37.216699],[74.911008,37.233378],[74.927022,37.277678],[75.018181,37.293867],[75.078543,37.318144],[75.125971,37.322427],[75.140137,37.355258],[75.125971,37.388075],[75.153072,37.414223],[75.129666,37.459367],[75.090862,37.486915],[75.078543,37.511129],[75.035428,37.500685],[75.002167,37.511604],[75.000935,37.53059],[74.940573,37.559061],[74.891914,37.668097],[74.920863,37.684675],[74.923327,37.717347],[74.949196,37.725395],[75.006478,37.770823],[74.989848,37.797783],[74.917167,37.845057],[74.936877,37.876241],[74.919015,37.908357],[74.911008,37.966884],[74.92579,38.01735],[74.879595,38.021122],[74.821697,38.10311],[74.80445,38.167128],[74.816769,38.215576],[74.793363,38.271039],[74.806914,38.285602],[74.789668,38.324581],[74.834015,38.361193],[74.868508,38.403883],[74.862965,38.484035],[74.821697,38.491062],[74.78474,38.538357],[74.717603,38.542102],[74.639995,38.599653],[74.613509,38.593105],[74.546988,38.607604],[74.506336,38.637528],[74.455829,38.632853],[74.421952,38.647812],[74.353583,38.655757],[74.229779,38.656224],[74.147859,38.676785],[74.11275,38.611345],[74.088113,38.610878],[74.068403,38.585621],[74.090577,38.542102],[74.034526,38.541634],[74.011736,38.52478],[73.926121,38.536016],[73.89902,38.579071],[73.852208,38.584217],[73.799237,38.610878],[73.809092,38.634256],[73.757353,38.719755],[73.769056,38.775765],[73.729636,38.837324],[73.699455,38.857832],[73.70931,38.893241],[73.742571,38.933754],[73.767824,38.941202],[73.826339,38.916993],[73.846665,38.962145],[73.839889,39.008199],[73.820179,39.041674],[73.780143,39.026798],[73.743187,39.029588],[73.720397,39.071881],[73.719781,39.108112],[73.688368,39.154999],[73.657571,39.166136],[73.639709,39.220402],[73.623079,39.235237],[73.580579,39.237555],[73.564564,39.266288],[73.542391,39.269531],[73.554709,39.295935],[73.554094,39.350102],[73.502355,39.383877],[73.592898,39.412087],[73.61076,39.465702],[73.6471,39.474479],[73.745651,39.462005],[73.836194,39.472169],[73.868223,39.482794],[73.893476,39.528046],[73.883621,39.540969],[73.914418,39.564041],[73.916266,39.586644],[73.953838,39.600018],[73.924273,39.722108],[73.905795,39.741899],[73.841737,39.756163],[73.845433,39.831115],[73.907027,39.873843],[73.910722,39.934443],[73.980324,40.004617],[73.943367,40.016076],[74.008041,40.050901],[74.023439,40.085251],[74.113366,40.086624],[74.126301,40.104479],[74.26304,40.125074],[74.280902,40.09807],[74.316626,40.106767],[74.356662,40.089371],[74.433039,40.13148],[74.485394,40.182251],[74.534669,40.207851],[74.577169,40.260391],[74.618437,40.27957],[74.673255,40.278656],[74.697893,40.310153],[74.700357,40.346195],[74.824776,40.344371],[74.862965,40.32658],[74.908544,40.338897],[74.795211,40.443278],[74.814921,40.461039],[74.819233,40.505647],[74.844486,40.521117],[74.891914,40.507467],[74.963363,40.464681],[74.995392,40.455119],[75.021877,40.466958],[75.051442,40.449654],[75.102565,40.44009],[75.13521,40.463315],[75.206659,40.447833],[75.242383,40.448743],[75.268869,40.483802],[75.292274,40.483802],[75.355716,40.537947],[75.432093,40.563412],[75.467817,40.599773],[75.550353,40.64883],[75.599628,40.659727],[75.636584,40.624306],[75.627345,40.605226],[75.631041,40.548862],[75.646439,40.516567],[75.733287,40.474242],[75.717272,40.443278],[75.686475,40.418223],[75.669845,40.363982],[75.688323,40.343915],[75.709265,40.280939],[75.739446,40.299199],[75.785642,40.301025],[75.831221,40.327492],[75.84046,40.312434],[75.890351,40.30924],[75.921764,40.291439],[75.932235,40.339353],[75.986438,40.381763],[76.026474,40.355317],[76.048648,40.357141],[76.048648,40.388601],[76.081293,40.39635],[76.144118,40.393615],[76.176147,40.381307],[76.22419,40.401819],[76.279625,40.439179],[76.283321,40.415034],[76.327668,40.391336],[76.333212,40.343459],[76.381871,40.39088],[76.390494,40.37766],[76.442233,40.391336],[76.470566,40.422779],[76.508754,40.429613],[76.539551,40.464226],[76.543247,40.513837],[76.556798,40.542495],[76.601145,40.578868],[76.611,40.601591],[76.657196,40.620218],[76.654732,40.652917],[76.676906,40.696036],[76.646725,40.73686],[76.646725,40.759983],[76.693536,40.779472],[76.731724,40.818887],[76.741579,40.912119],[76.761905,40.954167],[76.817956,40.975406],[76.85368,40.97631],[76.885709,41.027347],[76.940528,41.028701],[77.002122,41.073381],[77.023064,41.059394],[77.091433,41.062553],[77.108063,41.038181],[77.169041,41.009285],[77.236795,41.027798],[77.296541,41.004769],[77.363062,41.04089],[77.415417,41.038633],[77.473931,41.022832],[77.476395,40.999349],[77.540453,41.006575],[77.591576,40.992122],[77.597119,41.005221],[77.654402,41.016059],[77.684583,41.00793],[77.737553,41.032313],[77.780669,41.022832],[77.796068,41.049014],[77.829328,41.059394],[77.807155,41.091876],[77.814546,41.13426],[77.836104,41.153189],[77.905089,41.185174],[77.972842,41.173013],[78.094798,41.224347],[78.129291,41.228398],[78.136682,41.279239],[78.165015,41.340825],[78.149617,41.368228],[78.163783,41.383497],[78.235232,41.399211],[78.324544,41.384395],[78.338094,41.397415],[78.385522,41.394721],[78.391681,41.408189],[78.454507,41.412228],[78.527188,41.440947],[78.580774,41.481759],[78.650375,41.467411],[78.675629,41.50238],[78.707042,41.522098],[78.696571,41.54181],[78.739071,41.555695],[78.825302,41.560173],[78.86657,41.593749],[78.891824,41.597777],[78.957729,41.65146],[78.99407,41.664427],[79.021787,41.657273],[79.043345,41.681414],[79.10925,41.697503],[79.138199,41.722968],[79.21704,41.725648],[79.271858,41.767174],[79.276786,41.78101],[79.326061,41.809565],[79.356242,41.795735],[79.415372,41.836769],[79.457256,41.847915],[79.500988,41.835432],[79.550879,41.834094],[79.616784,41.856385],[79.640806,41.884907],[79.724574,41.896935],[79.776313,41.89248],[79.822508,41.963275],[79.854537,41.984186],[79.852689,42.015319],[79.923522,42.042436],[80.089826,42.047325],[80.14218,42.03488],[80.193303,42.081535],[80.16805,42.096635],[80.139717,42.151232],[80.163738,42.152563],[80.168666,42.200462],[80.233339,42.210215],[80.28631,42.233261],[80.29247,42.259842],[80.272144,42.281984],[80.283847,42.320493],[80.229028,42.358536],[80.239499,42.389927],[80.206238,42.431462],[80.225948,42.485769],[80.265368,42.502097],[80.221637,42.533415],[80.180985,42.590718],[80.163738,42.629919],[80.179753,42.670415],[80.228412,42.692852],[80.225948,42.713083],[80.259209,42.790865],[80.262289,42.828623],[80.280151,42.838278],[80.338049,42.831695],[80.407034,42.834767],[80.450766,42.861971],[80.503737,42.882146],[80.602903,42.894424],[80.5912,42.923354],[80.487106,42.948766],[80.397795,42.996933],[80.378701,43.031502],[80.416889,43.05687],[80.482795,43.06955],[80.556092,43.104515],[80.593048,43.133347],[80.650946,43.147321],[80.706997,43.143828],[80.73225,43.131163],[80.752576,43.148194],[80.79446,43.137277],[80.804315,43.178314],[80.789533,43.201876],[80.788917,43.242433],[80.769207,43.265535],[80.777214,43.308227],[80.69283,43.32042],[80.686055,43.333916],[80.735946,43.389609],[80.746417,43.439167],[80.761199,43.446554],[80.75504,43.494329],[80.522215,43.816473],[80.511128,43.906657],[80.475404,43.938124],[80.485259,43.95579],[80.457541,43.981203],[80.458773,44.047054],[80.449534,44.078017],[80.3941,44.127009],[80.407034,44.149772],[80.400875,44.198704],[80.413194,44.264741],[80.399027,44.30587],[80.383013,44.401297],[80.350368,44.484615],[80.411962,44.605321],[80.400259,44.628751],[80.313412,44.704938],[80.238883,44.7228],[80.200695,44.756808],[80.178521,44.796741],[80.18776,44.825612],[80.169898,44.84471],[80.115695,44.815424],[80.087978,44.817122],[79.999283,44.793768],[79.991891,44.830281],[79.953703,44.849377],[79.969102,44.877797],[79.887798,44.90917],[79.944464,44.937985],[79.951855,44.957892],[79.98142,44.964244],[80.056565,45.011227],[80.060876,45.026033],[80.111999,45.052675],[80.136021,45.041259],[80.144644,45.059017],[80.195767,45.030686],[80.24381,45.031532],[80.291854,45.06578],[80.328194,45.070007],[80.358375,45.040836],[80.404571,45.049293],[80.443991,45.077614],[80.445839,45.097895],[80.493882,45.127037],[80.519135,45.108878],[80.599207,45.105921],[80.686055,45.129148],[80.731634,45.156164],[80.816634,45.152788],[80.862214,45.127037],[80.897938,45.127459],[80.93551,45.160384],[80.966307,45.168402],[81.024821,45.162916],[81.080872,45.182745],[81.111669,45.218168],[81.170183,45.211001],[81.175111,45.227863],[81.236705,45.247248],[81.284748,45.23882],[81.327864,45.260729],[81.382066,45.257781],[81.398697,45.275471],[81.437501,45.28263],[81.462754,45.264099],[81.52866,45.285999],[81.536667,45.304101],[81.575471,45.30789],[81.582863,45.336503],[81.645072,45.359216],[81.677101,45.35459],[81.78797,45.3836],[81.832318,45.319673],[81.879745,45.284314],[81.921013,45.233342],[81.993078,45.237978],[82.052824,45.255674],[82.09594,45.249776],[82.091012,45.222383],[82.109491,45.211422],[82.206809,45.236713],[82.294272,45.247669],[82.344779,45.219011],[82.487061,45.181058],[82.562822,45.204676],[82.58746,45.224069],[82.60101,45.346178],[82.546808,45.426038],[82.448257,45.461309],[82.281954,45.53891],[82.266555,45.620172],[82.288729,45.655321],[82.289961,45.71636],[82.340468,45.772742],[82.349707,45.822811],[82.336156,45.882418],[82.342932,45.935303],[82.401446,45.972333],[82.461808,45.97982],[82.518474,46.153798],[82.609017,46.294985],[82.726662,46.494756],[82.774089,46.600124],[82.788872,46.677784],[82.829524,46.772551],[82.878183,46.797138],[82.876335,46.823762],[82.923762,46.932169],[82.937929,47.014248],[82.993364,47.065229],[83.031552,47.168265],[83.02724,47.21544],[83.108544,47.221944],[83.15474,47.236168],[83.17445,47.218286],[83.207094,47.213814],[83.221877,47.186977],[83.257602,47.173147],[83.306261,47.179656],[83.324739,47.167858],[83.370318,47.178436],[83.418978,47.119012],[83.463325,47.132042],[83.53847,47.083977],[83.566803,47.080717],[83.576042,47.059114],[83.700462,47.032199],[83.69923,47.015472],[83.766367,47.026896],[83.88586,46.982003],[83.932671,46.970161],[83.951765,46.98731],[84.002888,46.990576],[84.038613,46.973428],[84.086656,46.965261],[84.150098,46.977512],[84.195061,47.003638],[84.2893,46.994658],[84.336727,47.00527],[84.37122,46.993434],[84.425422,47.008943],[84.506726,46.97302],[84.563393,46.991801],[84.668718,46.995067],[84.699515,47.008535],[84.748175,47.009759],[84.781435,46.979962],[84.849189,46.957092],[84.867051,46.927673],[84.934188,46.863878],[84.95513,46.861013],[84.979768,46.883106],[84.987159,46.918272],[85.082014,46.939933],[85.102956,46.968936],[85.175637,46.997924],[85.213825,47.041172],[85.276651,47.068898],[85.325926,47.044842],[85.355491,47.054629],[85.441106,47.063191],[85.545816,47.057891],[85.547048,47.096609],[85.582772,47.142626],[85.641903,47.18413],[85.682555,47.222757],[85.682555,47.249982],[85.701033,47.28856],[85.675779,47.321837],[85.701649,47.384275],[85.685018,47.428829],[85.614801,47.498015],[85.617881,47.550552],[85.547048,48.008205],[85.531649,48.046227],[85.551975,48.081423],[85.55136,48.127781],[85.576613,48.15853],[85.587084,48.191654],[85.622193,48.202824],[85.633895,48.232731],[85.678243,48.266205],[85.695489,48.302445],[85.695489,48.335078],[85.758315,48.403064],[85.791576,48.418954],[85.916612,48.438015],[86.053966,48.441192],[86.225813,48.432456],[86.270161,48.452307],[86.305269,48.491984],[86.38103,48.49357],[86.416138,48.481671],[86.579978,48.538763],[86.594761,48.576789],[86.635413,48.612016],[86.640956,48.629027],[86.693311,48.64366],[86.70255,48.666195],[86.771535,48.717156],[86.780774,48.731369],[86.754289,48.78463],[86.770303,48.810255],[86.818963,48.831139],[86.821426,48.850439],[86.782006,48.887049],[86.757985,48.894919],[86.730267,48.959797],[86.732115,48.994757],[86.772151,49.02773],[86.836209,49.051269],[86.84976,49.066563],[86.854071,49.109284],[86.887948,49.132001],[86.953853,49.131218],[87.000049,49.142572],[87.088128,49.133567],[87.112766,49.15549],[87.211932,49.140615],[87.239033,49.114376],[87.304939,49.112418],[87.388707,49.097921],[87.43675,49.075188],[87.511894,49.10184],[87.49588,49.132001],[87.517438,49.145704],[87.563017,49.142572],[87.602437,49.152359],[87.67635,49.15549],[87.700372,49.175839],[87.762582,49.172709],[87.793379,49.18249],[87.821096,49.173883],[87.82048,49.148445],[87.845733,49.146096],[87.867291,49.108892],[87.844502,49.090084],[87.858052,49.07362],[87.835263,49.054406],[87.883306,49.023806],[87.883922,48.993971],[87.911639,48.979833],[87.871603,48.963726],[87.87653,48.949186],[87.814321,48.945256],[87.793995,48.927565],[87.760118,48.925992],[87.742256,48.881146],[87.78106,48.872094],[87.792147,48.849258],[87.829103,48.825623],[87.803234,48.824835],[87.826639,48.800795],[87.872219,48.799612],[87.93874,48.757809],[87.96153,48.773588],[88.029283,48.750313],[88.064392,48.712813],[88.090877,48.71992],[88.089645,48.69504],[88.02682,48.65315],[88.010805,48.618742],[87.96153,48.599353],[87.973233,48.575997],[88.041602,48.548272],[88.10874,48.545895],[88.130297,48.521721],[88.151855,48.526478],[88.196819,48.493967],[88.229464,48.498329],[88.318159,48.478497],[88.363123,48.460641],[88.360659,48.433251],[88.438267,48.393528],[88.462289,48.392335],[88.503557,48.412996],[88.523267,48.403461],[88.535586,48.368884],[88.573158,48.369679],[88.573774,48.351785],[88.605803,48.337863],[88.575006,48.277757],[88.594716,48.259831],[88.601491,48.221567],[88.638447,48.183674],[88.668628,48.171303],[88.700657,48.180881],[88.721599,48.160526],[88.79736,48.133772],[88.824461,48.107005],[88.939026,48.115396],[88.953808,48.090618],[89.027105,48.051028],[89.044967,48.009806],[89.078228,47.98698],[89.156452,47.996992],[89.231597,47.98017],[89.282104,47.994189],[89.308589,48.021816],[89.359712,48.026219],[89.38127,48.046227],[89.498299,48.02822],[89.569132,48.037825],[89.599313,48.015811],[89.595617,47.973359],[89.645508,47.947711],[89.651052,47.913627],[89.735435,47.89758],[89.761921,47.835751],[89.86971,47.834144],[89.957789,47.842982],[89.960253,47.885942],[90.040941,47.874704],[90.066195,47.883534],[90.086521,47.86547],[90.070506,47.820483],[90.07605,47.777469],[90.13518,47.723147],[90.180144,47.72516],[90.216484,47.70543],[90.331665,47.681663],[90.384635,47.644179],[90.346447,47.637324],[90.376012,47.603036],[90.398186,47.547724],[90.468403,47.497611],[90.474562,47.462422],[90.459164,47.43895],[90.468403,47.404937],[90.507823,47.400076],[90.526301,47.379007],[90.488113,47.317374],[90.521374,47.2845],[90.56141,47.206903],[90.579888,47.198364],[90.653801,47.111681],[90.691989,47.080717],[90.767134,46.992617],[90.830575,46.995883],[90.901408,46.960768],[90.92235,46.938707],[90.929742,46.893331],[90.958075,46.879425],[90.942676,46.82581],[90.992567,46.790583],[90.992567,46.769682],[91.019053,46.766402],[91.054161,46.717598],[91.036299,46.670393],[91.017821,46.58244],[91.068328,46.579149],[91.079415,46.558989],[91.060937,46.516999],[91.038147,46.500936],[91.025828,46.444057],[90.996263,46.419309],[90.983328,46.374734],[90.900177,46.31235],[90.955611,46.233752],[90.94822,46.219262],[90.98456,46.160431],[91.021517,46.121038],[91.014741,46.06667],[91.028292,46.023054],[90.890937,45.921566],[90.799778,45.834905],[90.714779,45.728895],[90.676591,45.582488],[90.671047,45.487747],[90.723402,45.464667],[90.772677,45.432338],[90.773909,45.405874],[90.813329,45.32851],[90.804706,45.29484],[90.831807,45.300313],[90.877387,45.280946],[90.897713,45.249776],[90.866916,45.209314],[90.881698,45.192025],[90.96177,45.201303],[91.007966,45.218589],[91.050466,45.208892],[91.129922,45.21606],[91.17119,45.199616],[91.195827,45.159118],[91.230936,45.153632],[91.242023,45.13717],[91.33503,45.129571],[91.37753,45.11099],[91.429268,45.156586],[91.448978,45.156586],[91.500101,45.103809],[91.561695,45.075501],[91.694738,45.065357],[91.803144,45.082685],[91.885679,45.078882],[92.056911,45.086911],[92.100026,45.081417],[92.240461,45.015881],[92.315605,45.028994],[92.348866,45.014188],[92.414155,45.018419],[92.501003,45.001072],[92.547814,45.018419],[92.683937,45.02561],[92.779407,45.050561],[92.847777,45.038721],[92.884117,45.046756],[92.922921,45.03703],[92.932776,45.017573],[93.002377,45.009958],[93.062124,45.018419],[93.100312,45.007419],[93.174225,45.015458],[93.252449,44.991761],[93.314043,44.980333],[93.314659,44.995147],[93.376869,44.985412],[93.434767,44.955351],[93.509296,44.968055],[93.613389,44.926546],[93.716251,44.894334],[93.723642,44.865498],[94.066105,44.732154],[94.152336,44.684944],[94.215162,44.667921],[94.227481,44.645785],[94.279836,44.603617],[94.329727,44.582734],[94.359292,44.515775],[94.390705,44.521749],[94.470777,44.509373],[94.557008,44.462408],[94.606283,44.448311],[94.673421,44.397021],[94.722696,44.34055],[94.768275,44.34055],[94.826174,44.320001],[94.945666,44.292592],[94.998637,44.253169],[95.1286,44.269884],[95.238853,44.277169],[95.41378,44.298589],[95.43041,44.281882],[95.4107,44.245024],[95.376208,44.227444],[95.355882,44.166087],[95.35157,44.090054],[95.326932,44.028554],[95.377439,44.025972],[95.426099,44.009618],[95.527113,44.007466],[95.623199,43.855756],[95.645373,43.787966],[95.705735,43.67077],[95.735916,43.597569],[95.857872,43.417436],[95.880046,43.28035],[95.921314,43.229789],[96.363558,42.900562],[96.386348,42.727592],[96.742361,42.75704],[96.968411,42.756161],[97.172903,42.795257],[97.28254,42.782081],[97.831958,42.706047],[98.195362,42.653251],[98.546447,42.638284],[98.962822,42.607018],[99.51224,42.568244],[99.969267,42.647969],[100.004376,42.648849],[100.272309,42.636523],[100.32528,42.690213],[100.826655,42.675255],[100.862995,42.671295],[101.291689,42.586312],[101.557775,42.529887],[101.770274,42.509597],[101.803534,42.503861],[101.877447,42.432345],[102.070236,42.232374],[102.093642,42.223512],[102.449039,42.144133],[102.540814,42.162323],[102.621502,42.154338],[102.712045,42.153007],[103.021862,42.028212],[103.20726,41.96283],[103.418527,41.882233],[103.454868,41.877332],[103.868779,41.802427],[104.080046,41.805104],[104.30856,41.840782],[104.418813,41.860397],[104.530298,41.875104],[104.524138,41.661745],[104.68921,41.6452],[104.803775,41.652355],[104.923267,41.654143],[105.009498,41.583007],[105.230621,41.751103],[105.291599,41.749763],[105.385221,41.797073],[105.589713,41.888471],[105.74185,41.949033],[106.01348,42.032213],[106.344855,42.149457],[106.372572,42.161436],[106.612789,42.241679],[106.785867,42.291281],[107.051337,42.319166],[107.271844,42.364285],[107.303872,42.412465],[107.46648,42.458842],[107.501589,42.456635],[107.57427,42.412907],[107.736262,42.415116],[107.939522,42.403628],[107.986949,42.413349],[108.022058,42.433229],[108.089195,42.436321],[108.238252,42.460167],[108.298614,42.438529],[108.532671,42.442945],[108.705134,42.413349],[108.798757,42.415116],[108.845569,42.395673],[108.983539,42.449128],[109.026039,42.458401],[109.291509,42.435879],[109.486761,42.458842],[109.544044,42.472528],[109.683862,42.558988],[109.733753,42.579262],[109.906216,42.635643],[110.108244,42.642687],[110.139657,42.674815],[110.34846,42.742098],[110.437156,42.781203],[110.469801,42.839156],[110.631177,42.936061],[110.689691,43.02144],[110.687227,43.036314],[110.736502,43.089657],[110.769763,43.099272],[110.82027,43.149067],[111.02045,43.329998],[111.069725,43.357852],[111.151029,43.38004],[111.183674,43.396132],[111.354289,43.436125],[111.400485,43.472618],[111.456535,43.494329],[111.564325,43.490422],[111.606209,43.513863],[111.79407,43.672068],[111.891388,43.6738],[111.951135,43.693275],[111.970845,43.748205],[111.959758,43.823382],[111.870447,43.940279],[111.773128,44.010479],[111.702295,44.034147],[111.662875,44.061247],[111.559397,44.171238],[111.541535,44.206855],[111.534144,44.26217],[111.507042,44.294305],[111.428818,44.319573],[111.415883,44.35724],[111.427586,44.394455],[111.478709,44.488884],[111.514434,44.507666],[111.530448,44.55033],[111.569868,44.57634],[111.560629,44.647062],[111.585267,44.705789],[111.624687,44.778477],[111.69244,44.859983],[111.764505,44.969325],[111.903707,45.052252],[112.002874,45.090713],[112.071243,45.096206],[112.113743,45.072965],[112.396459,45.064512],[112.438959,45.071697],[112.540589,45.001072],[112.599719,44.930783],[112.712436,44.879494],[112.850406,44.840466],[112.937869,44.840042],[113.037652,44.822641],[113.11526,44.799714],[113.503918,44.777628],[113.540874,44.759358],[113.631417,44.745333],[113.712105,44.788247],[113.798953,44.849377],[113.861778,44.863377],[113.907358,44.915104],[114.065038,44.931206],[114.116777,44.957045],[114.158045,44.994301],[114.19069,45.036607],[114.313262,45.107189],[114.347139,45.119436],[114.409348,45.179371],[114.459855,45.21353],[114.519602,45.283893],[114.539928,45.325985],[114.551014,45.387383],[114.600906,45.403773],[114.745035,45.438217],[114.920578,45.386122],[114.983404,45.379397],[115.178041,45.396209],[115.36467,45.392427],[115.586408,45.440317],[115.699741,45.45963],[115.864197,45.572853],[115.936878,45.632727],[116.026805,45.661177],[116.035428,45.685013],[116.1155,45.679577],[116.17463,45.688775],[116.217746,45.72221],[116.22329,45.747273],[116.260862,45.776082],[116.286731,45.775247],[116.278108,45.831152],[116.288579,45.839074],[116.243,45.876169],[116.271949,45.966926],[116.414231,46.133896],[116.439484,46.137628],[116.536187,46.23251],[116.573143,46.258998],[116.585462,46.292504],[116.673541,46.325163],[116.745606,46.327642],[116.81336,46.355737],[116.834302,46.384229],[116.876801,46.375559],[117.097308,46.356976],[117.247597,46.366888],[117.372017,46.36028],[117.383719,46.394962],[117.375712,46.416421],[117.392343,46.463023],[117.447777,46.528117],[117.42006,46.582029],[117.49582,46.600535],[117.596218,46.603414],[117.622704,46.596012],[117.641182,46.558166],[117.704008,46.516587],[117.748355,46.521941],[117.769913,46.537586],[117.813645,46.530588],[117.870927,46.549935],[117.868464,46.575447],[117.914659,46.607936],[117.982412,46.614925],[117.992883,46.631366],[118.04647,46.631366],[118.124078,46.678195],[118.192448,46.682711],[118.238643,46.709392],[118.274984,46.715957],[118.316252,46.73934],[118.41049,46.728265],[118.446831,46.704467],[118.586033,46.692975],[118.639004,46.721291],[118.677192,46.6979],[118.788061,46.687227],[118.788061,46.717598],[118.845343,46.771731],[118.914329,46.77501],[118.912481,46.733188],[118.951285,46.722111],[119.011647,46.745902],[119.073857,46.676552],[119.123132,46.642872],[119.152081,46.658072],[119.20074,46.648213],[119.26295,46.649034],[119.325776,46.608759],[119.357805,46.619447],[119.374435,46.603414],[119.431718,46.638763],[119.491464,46.629311],[119.557985,46.633832],[119.598637,46.618214],[119.656535,46.625612],[119.682405,46.605058],[119.677477,46.584908],[119.739687,46.615336],[119.783419,46.626023],[119.8136,46.66834],[119.804361,46.68189],[119.859179,46.669572],[119.911534,46.669572],[119.93494,46.712674],[119.917078,46.758203],[119.936172,46.790173],[119.920157,46.853238],[119.926933,46.903963],[119.859795,46.917046],[119.845013,46.964852],[119.795122,47.013024],[119.79081,47.04525],[119.806825,47.055037],[119.763093,47.13082],[119.716282,47.195518],[119.627586,47.247544],[119.56784,47.248357],[119.559217,47.303172],[119.450812,47.353065],[119.437877,47.378602],[119.386138,47.397645],[119.365812,47.423161],[119.32208,47.42721],[119.365812,47.47739],[119.205052,47.520249],[119.152081,47.540453],[119.134219,47.664335],[118.773278,47.771034],[118.568171,47.992187],[118.441903,47.995791],[118.422193,48.01461],[118.37415,48.016612],[118.351976,48.006203],[118.284839,48.011007],[118.238027,48.031422],[118.238643,48.041826],[118.150564,48.036224],[118.124694,48.047427],[118.107448,48.031021],[118.052014,48.01421],[117.96147,48.011007],[117.886942,48.025418],[117.813645,48.016212],[117.529081,47.782697],[117.519226,47.761782],[117.493357,47.758563],[117.384335,47.641356],[117.094844,47.8241],[116.879265,47.893968],[116.791186,47.89758],[116.669846,47.890758],[116.453035,47.837358],[116.26579,47.876711],[116.130283,47.823296],[116.111189,47.811642],[115.968291,47.689721],[115.939342,47.683275],[115.580249,47.921649],[115.539597,48.104607],[115.545141,48.134971],[115.529126,48.155336],[115.81061,48.257042],[115.822929,48.259432],[115.799523,48.514982],[115.83032,48.560156],[116.069305,48.811437],[116.077928,48.822471],[116.048363,48.873274],[116.428397,49.430659],[116.717889,49.847288],[116.736367,49.847674],[117.068974,49.695389],[117.278394,49.636512],[117.485349,49.633024],[117.638102,49.574847],[117.809333,49.521263],[117.849369,49.551557],[117.866,49.591532],[117.950999,49.596187],[117.995963,49.623332],[118.011362,49.614803],[118.082811,49.616741],[118.129622,49.669446],[118.156723,49.660149],[118.211542,49.690744],[118.220781,49.729831],[118.284223,49.743755],[118.315636,49.766953],[118.384005,49.783958],[118.398787,49.802502],[118.385853,49.827217],[118.443751,49.835709],[118.483787,49.830691],[118.485019,49.866194],[118.531214,49.887791],[118.574946,49.931342],[118.605127,49.926719],[118.672264,49.955991],[118.739402,49.946364],[118.761576,49.959456],[118.791757,49.955606],[118.964836,49.988708],[118.982082,49.979087],[119.090487,49.985629],[119.12498,50.019095],[119.163168,50.027554],[119.193965,50.069826],[119.190269,50.087877],[119.236465,50.075204],[119.290052,50.121655],[119.309762,50.161161],[119.350414,50.166145],[119.339327,50.192206],[119.358421,50.197953],[119.319001,50.220933],[119.339943,50.244668],[119.35103,50.303953],[119.381827,50.324208],[119.358421,50.358965],[119.322696,50.352474],[119.277117,50.366218],[119.259871,50.345218],[119.232153,50.365455],[119.188422,50.347509],[119.155777,50.364691],[119.176719,50.378814],[119.125596,50.389118],[119.165016,50.422683],[119.217371,50.414675],[119.22353,50.441363],[119.250631,50.448604],[119.262334,50.490124],[119.264182,50.536933],[119.295595,50.573814],[119.281428,50.601551],[119.298059,50.616743],[119.361501,50.632689],[119.394145,50.667219],[119.385522,50.682769],[119.430486,50.684286],[119.450196,50.695281],[119.506862,50.763846],[119.496391,50.771795],[119.515485,50.814165],[119.498855,50.827776],[119.491464,50.87878],[119.569688,50.933879],[119.598637,50.984767],[119.630666,51.00925],[119.678093,51.016404],[119.726753,51.051028],[119.719361,51.075099],[119.764325,51.092017],[119.752622,51.117193],[119.771716,51.124331],[119.788346,51.174636],[119.760629,51.212516],[119.784035,51.22601],[119.821607,51.21439],[119.797586,51.243622],[119.828383,51.263099],[119.811136,51.281071],[119.885049,51.302777],[119.883817,51.336813],[119.946643,51.360736],[119.914614,51.374187],[119.910918,51.390994],[119.97128,51.40033],[119.982983,51.445112],[120.002693,51.459283],[119.982367,51.482396],[119.985447,51.505125],[120.017476,51.52114],[120.052584,51.560967],[120.035954,51.583657],[120.05936,51.634203],[120.100628,51.649058],[120.087077,51.678013],[120.172693,51.679868],[120.226279,51.717703],[120.294649,51.752171],[120.317438,51.785873],[120.363634,51.789945],[120.40675,51.81659],[120.40059,51.833605],[120.480046,51.855049],[120.481278,51.885719],[120.549032,51.882394],[120.548416,51.907877],[120.656821,51.926333],[120.66298,51.958061],[120.704864,51.983501],[120.717799,52.015556],[120.691929,52.026973],[120.690698,52.047221],[120.717183,52.072978],[120.753523,52.085483],[120.76769,52.10938],[120.760299,52.136937],[120.786784,52.15787],[120.745516,52.20594],[120.755371,52.258355],[120.715951,52.261286],[120.695625,52.290214],[120.653741,52.302658],[120.627256,52.323878],[120.62356,52.361172],[120.653741,52.371038],[120.64943,52.3904],[120.688234,52.427637],[120.68269,52.464479],[120.706712,52.492909],[120.687002,52.511489],[120.734429,52.536977],[120.690698,52.547532],[120.658669,52.56718],[120.62664,52.570818],[120.605082,52.589364],[120.56135,52.595544],[120.483742,52.630066],[120.462184,52.64532],[120.396895,52.616261],[120.289721,52.623527],[120.194866,52.578819],[120.125265,52.586819],[120.07599,52.586092],[120.049505,52.598453],[120.035338,52.646409],[120.071063,52.70628],[120.031642,52.773674],[120.101244,52.788877],[120.14128,52.813119],[120.181316,52.806969],[120.222584,52.84277],[120.297112,52.869872],[120.295265,52.891542],[120.350699,52.906343],[120.363018,52.94134],[120.411061,52.957927],[120.452945,53.01017],[120.529321,53.045803],[120.562582,53.082845],[120.643886,53.106923],[120.659901,53.137091],[120.687002,53.142476],[120.690698,53.174771],[120.736277,53.204892],[120.821893,53.241797],[120.838523,53.239648],[120.820661,53.269007],[120.867472,53.278669],[120.882871,53.294411],[120.936457,53.28833],[120.950624,53.29763],[121.055334,53.29155],[121.098449,53.306929],[121.129246,53.277238],[121.155732,53.285468],[121.227797,53.280459],[121.308485,53.301565],[121.336818,53.325877],[121.416274,53.319443],[121.499426,53.337314],[121.589969,53.350891],[121.697758,53.392666],[121.754425,53.389454],[121.816019,53.41336],[121.875765,53.426556],[122.026054,53.428339],[122.077177,53.422277],[122.111054,53.426913],[122.161561,53.468614],[122.227466,53.461845],[122.266886,53.470039],[122.350038,53.505647],[122.37406,53.47467],[122.435038,53.444739],[122.496016,53.458638],[122.5379,53.453293],[122.608117,53.465408],[122.673406,53.459351],[122.763949,53.463626],[122.826775,53.457213],[122.894528,53.462914],[122.943804,53.483929],[123.052209,53.506715],[123.093477,53.508138],[123.137209,53.498172],[123.179092,53.509918],[123.231447,53.549404],[123.274563,53.563269],[123.309672,53.56078],[123.394055,53.538024],[123.454417,53.536602],[123.47228,53.509206],[123.499381,53.497816],[123.510468,53.509206],[123.490758,53.542648],[123.517243,53.558292],[123.546808,53.551537],[123.557895,53.531978],[123.53141,53.507071],[123.569598,53.505291],[123.58746,53.546915],[123.620721,53.550115],[123.668764,53.533756],[123.698329,53.498528],[123.746373,53.500308],[123.797495,53.489983],[123.865249,53.489627],[123.985973,53.434401],[124.01369,53.403371],[124.058038,53.404085],[124.125791,53.348033],[124.19416,53.37339],[124.239124,53.379817],[124.327819,53.331954],[124.375863,53.258984],[124.412203,53.248601],[124.435609,53.223886],[124.487348,53.217436],[124.496587,53.207759],[124.563108,53.201666],[124.590209,53.208476],[124.678905,53.207043],[124.720789,53.192344],[124.712165,53.162574],[124.734339,53.146783],[124.787926,53.140681],[124.832889,53.145347],[124.87231,53.099018],[124.909266,53.118059],[124.887708,53.164368],[124.970244,53.194137],[125.038613,53.202741],[125.142091,53.204175],[125.195062,53.198439],[125.252344,53.18051],[125.315786,53.144989],[125.343503,53.14463],[125.452524,53.107641],[125.503647,53.095424],[125.504263,53.061271],[125.530749,53.0512],[125.588647,53.081047],[125.613901,53.083564],[125.640386,53.06199],[125.643466,53.039686],[125.684118,53.00801],[125.742632,52.993964],[125.737088,52.943504],[125.665023,52.913561],[125.666871,52.869872],[125.678574,52.86084],[125.722306,52.880347],[125.751255,52.88143],[125.772197,52.89804],[125.827631,52.899123],[125.854117,52.891542],[125.855349,52.866259],[125.923718,52.815651],[125.937269,52.786705],[125.966834,52.759914],[125.985312,52.758465],[126.02042,52.795753],[126.052449,52.800095],[126.116507,52.768243],[126.112195,52.757016],[126.044442,52.739628],[126.072775,52.691048],[126.061688,52.673271],[125.995783,52.675085],[125.971145,52.654033],[125.968682,52.630429],[125.989008,52.603178],[126.030891,52.576273],[126.055529,52.582455],[126.066616,52.603905],[126.147304,52.573],[126.213209,52.525327],[126.192883,52.492181],[126.205202,52.466302],[126.268644,52.475051],[126.326542,52.424353],[126.353644,52.389304],[126.348716,52.357882],[126.320999,52.342163],[126.327774,52.310342],[126.4331,52.298632],[126.436795,52.277034],[126.401071,52.279597],[126.357955,52.264216],[126.312992,52.235271],[126.306832,52.205574],[126.34502,52.192002],[126.403535,52.185031],[126.457121,52.165212],[126.499005,52.16044],[126.556288,52.136203],[126.563679,52.119302],[126.514404,52.037282],[126.487918,52.041699],[126.450962,52.027709],[126.447882,52.009294],[126.468208,51.982395],[126.462665,51.948471],[126.510092,51.922274],[126.555056,51.874266],[126.580925,51.824728],[126.622809,51.777357],[126.658534,51.762544],[126.6727,51.73179],[126.724439,51.7266],[126.734294,51.711399],[126.723823,51.679126],[126.741069,51.642374],[126.67886,51.602246],[126.69549,51.57845],[126.837156,51.536033],[126.843931,51.521885],[126.812518,51.493948],[126.784185,51.448095],[126.791577,51.432428],[126.835308,51.413769],[126.908605,51.407423],[126.930163,51.359241],[126.904293,51.340552],[126.837156,51.345038],[126.813134,51.311756],[126.820526,51.281071],[126.863025,51.248492],[126.908605,51.246619],[126.92154,51.259729],[126.908605,51.283691],[126.877808,51.300906],[126.887047,51.321856],[126.970815,51.332327],[126.98375,51.318863],[126.976358,51.291551],[126.926467,51.246244],[126.899982,51.200518],[126.917844,51.138977],[126.922772,51.061937],[126.985597,51.029202],[127.052119,50.962911],[127.113713,50.93765],[127.143894,50.910111],[127.236285,50.781256],[127.295415,50.755139],[127.305886,50.733932],[127.28864,50.699451],[127.294799,50.663426],[127.370559,50.581415],[127.36132,50.547582],[127.323132,50.52552],[127.293567,50.46575],[127.30527,50.45432],[127.3644,50.438314],[127.369944,50.403996],[127.332371,50.340634],[127.371791,50.29669],[127.44632,50.270686],[127.603385,50.239309],[127.60708,50.178794],[127.58737,50.137768],[127.501755,50.056764],[127.495595,49.994479],[127.543638,49.944438],[127.547334,49.928645],[127.529472,49.864265],[127.531936,49.826059],[127.583059,49.786277],[127.653892,49.780094],[127.674833,49.764247],[127.677913,49.697712],[127.705015,49.665185],[127.782007,49.630698],[127.815268,49.593859],[127.897804,49.579116],[127.949542,49.596187],[128.001281,49.592307],[128.070882,49.556604],[128.122005,49.55311],[128.185447,49.53952],[128.243345,49.563203],[128.287077,49.566309],[128.343128,49.544956],[128.389939,49.58998],[128.500192,49.593859],[128.537764,49.604332],[128.619684,49.593471],[128.656025,49.577564],[128.715155,49.564756],[128.744104,49.595023],[128.802618,49.58222],[128.813089,49.558157],[128.763198,49.515824],[128.76135,49.482009],[128.792147,49.473065],[128.871604,49.492506],[128.932582,49.46801],[129.013886,49.457119],[129.061929,49.374189],[129.084719,49.359769],[129.143849,49.357431],[129.180805,49.386657],[129.215298,49.399122],[129.266421,49.396006],[129.320623,49.3586],[129.358196,49.355871],[129.379138,49.367175],[129.374826,49.414309],[129.390224,49.432605],[129.448739,49.441167],[129.51834,49.423652],[129.546057,49.395227],[129.562687,49.299706],[129.604571,49.279018],[129.696962,49.298535],[129.730223,49.288387],[129.761636,49.25754],[129.753629,49.208692],[129.784426,49.184054],[129.847867,49.181316],[129.864498,49.158621],[129.855259,49.133567],[129.866962,49.113985],[129.913157,49.1085],[129.934715,49.078717],[129.9187,49.060681],[129.937179,49.040285],[130.020946,49.021058],[130.059135,48.979047],[130.113337,48.956653],[130.219895,48.893739],[130.237757,48.868551],[130.279641,48.866976],[130.412068,48.905148],[130.471198,48.905541],[130.501995,48.865795],[130.559277,48.861071],[130.609168,48.881146],[130.680617,48.881146],[130.689856,48.849651],[130.622103,48.783842],[130.576524,48.688719],[130.538951,48.635751],[130.538335,48.612016],[130.605473,48.594207],[130.615944,48.575601],[130.620871,48.49595],[130.647357,48.484844],[130.711414,48.511414],[130.767465,48.507846],[130.776704,48.480084],[130.745907,48.449131],[130.747755,48.404256],[130.785327,48.357353],[130.81982,48.341444],[130.845073,48.296473],[130.817972,48.265409],[130.787791,48.256643],[130.769313,48.231136],[130.765617,48.18926],[130.673842,48.12818],[130.666451,48.105007],[130.699711,48.044227],[130.737284,48.034223],[130.770544,47.998194],[130.870943,47.943301],[130.891269,47.927263],[130.961486,47.828118],[130.966413,47.733211],[130.983659,47.713081],[131.029855,47.694555],[131.115471,47.689721],[131.183224,47.702611],[131.236811,47.733211],[131.273767,47.738846],[131.359998,47.730796],[131.456085,47.747297],[131.543548,47.736028],[131.559563,47.724757],[131.568186,47.682469],[131.59036,47.660707],[131.641483,47.663932],[131.690142,47.707041],[131.741881,47.706638],[131.825649,47.677231],[131.900793,47.685692],[131.976554,47.673201],[132.000575,47.712276],[132.086191,47.703013],[132.157024,47.70543],[132.19706,47.714289],[132.242639,47.70986],[132.272205,47.718718],[132.288835,47.742065],[132.325175,47.762184],[132.371987,47.765402],[132.469305,47.726368],[132.558,47.718316],[132.6005,47.740858],[132.599268,47.792347],[132.621442,47.82852],[132.662094,47.854227],[132.687348,47.88514],[132.662094,47.922451],[132.661478,47.944905],[132.691043,47.962941],[132.723072,47.962941],[132.769268,47.93849],[132.819159,47.936887],[132.883216,48.002599],[132.992238,48.035424],[133.016259,48.054228],[133.02673,48.085421],[133.053216,48.110202],[133.130208,48.134971],[133.182563,48.135769],[133.239845,48.126583],[133.302055,48.103009],[133.407997,48.124585],[133.451728,48.112999],[133.545967,48.121389],[133.573068,48.182078],[133.59709,48.194846],[133.667307,48.183275],[133.693177,48.186866],[133.740604,48.254651],[133.791111,48.261026],[133.824372,48.277359],[133.876111,48.282536],[133.940784,48.302047],[133.995603,48.303639],[134.029479,48.327519],[134.0689,48.338659],[134.116327,48.333089],[134.150819,48.346217],[134.20379,48.3824],[134.369478,48.382797],[134.438463,48.405448],[134.501905,48.418954],[134.578281,48.405448],[134.696542,48.407037],[134.764295,48.370076],[134.820961,48.37604],[134.848679,48.393925],[134.886867,48.437618],[134.927519,48.451513],[134.996504,48.439603],[135.035924,48.440795],[135.068569,48.459451],[135.09567,48.437618],[135.090743,48.403461],[135.009439,48.365703],[134.864077,48.332293],[134.77107,48.288908],[134.679295,48.256245],[134.67252,48.170505],[134.632484,48.099412],[134.551796,48.032622],[134.55426,47.982173],[134.599839,47.947711],[134.607846,47.909214],[134.658969,47.901191],[134.677448,47.884738],[134.670056,47.864667],[134.678679,47.819278],[134.772918,47.763391],[134.779694,47.7159],[134.689766,47.63813],[134.678064,47.588507],[134.627556,47.546512],[134.576434,47.519036],[134.568426,47.478199],[134.522847,47.468086],[134.490202,47.446235],[134.339297,47.439759],[134.307268,47.428829],[134.266616,47.391974],[134.263536,47.371307],[134.203174,47.347389],[134.177305,47.326299],[134.156979,47.248357],[134.210566,47.210155],[134.230276,47.182097],[134.232739,47.134892],[134.222268,47.105164],[134.142812,47.093349],[134.118175,47.061968],[134.10216,47.005678],[134.063972,46.979962],[134.076291,46.938298],[134.042414,46.886787],[134.041182,46.848326],[134.025168,46.810657],[134.052885,46.779928],[134.033175,46.759023],[134.030711,46.708981],[134.011001,46.637941],[133.919842,46.596012],[133.890893,46.525235],[133.849625,46.475389],[133.852089,46.450242],[133.902596,46.446119],[133.948791,46.401153],[133.940784,46.38134],[133.876726,46.362345],[133.869335,46.338386],[133.922922,46.330948],[133.908139,46.308216],[133.91861,46.280924],[133.909987,46.254447],[133.867487,46.250722],[133.87919,46.233752],[133.849625,46.203939],[133.814517,46.230854],[133.794807,46.193583],[133.764626,46.17328],[133.706111,46.163333],[133.690713,46.133896],[133.745531,46.075389],[133.740604,46.048812],[133.681474,45.986473],[133.676546,45.94321],[133.614952,45.942794],[133.618032,45.903662],[133.583539,45.868669],[133.55459,45.893249],[133.51209,45.887001],[133.491764,45.867002],[133.494228,45.840325],[133.467743,45.834905],[133.469591,45.799451],[133.505315,45.785681],[133.469591,45.777751],[133.486837,45.740173],[133.454192,45.731819],[133.445569,45.705077],[133.484989,45.691702],[133.485605,45.658667],[133.448649,45.647372],[133.471438,45.631053],[133.412924,45.618079],[133.423395,45.584163],[133.393214,45.580393],[133.342707,45.554836],[133.333468,45.562379],[133.246005,45.517528],[133.201657,45.515431],[133.170244,45.465506],[133.164701,45.437377],[133.143759,45.430658],[133.144991,45.367205],[133.119121,45.352908],[133.128976,45.336924],[133.097563,45.281788],[133.109266,45.232077],[133.124665,45.222805],[133.137599,45.178105],[133.139447,45.127459],[133.107418,45.124504],[133.089556,45.097473],[133.070462,45.097051],[133.045824,45.066203],[132.986078,45.031109],[132.954049,45.023072],[132.916477,45.031109],[132.867202,45.061976],[132.76434,45.081417],[132.394161,45.16376],[132.17427,45.216903],[132.003655,45.25441],[131.976554,45.277156],[131.93159,45.287683],[131.917423,45.339448],[131.887858,45.342393],[131.82996,45.311677],[131.825649,45.291472],[131.788692,45.245984],[131.79362,45.211844],[131.759127,45.213952],[131.721555,45.234606],[131.681519,45.215217],[131.650722,45.159962],[131.687678,45.1511],[131.695685,45.132104],[131.63286,45.075078],[131.566338,45.045487],[131.529382,45.012073],[131.484418,44.99557],[131.501664,44.977793],[131.464708,44.963397],[131.409889,44.985836],[131.380324,44.978216],[131.355071,44.990068],[131.313803,44.965938],[131.311955,44.94688],[131.274999,44.919766],[131.263296,44.929935],[131.207861,44.913833],[131.20355,44.932901],[131.16105,44.948151],[131.090217,44.924427],[131.10192,44.898997],[131.07913,44.881614],[130.965181,44.85065],[130.972573,44.820094],[131.016304,44.814575],[131.016304,44.789521],[131.064348,44.786973],[131.069275,44.759783],[131.093297,44.746183],[131.090833,44.717272],[131.111775,44.710042],[131.310723,44.046623],[131.26576,44.034578],[131.245434,43.95579],[131.26268,43.948897],[131.254057,43.893289],[131.2171,43.836334],[131.213405,43.801357],[131.232499,43.742585],[131.215869,43.72745],[131.221412,43.682024],[131.239274,43.670337],[131.216485,43.613169],[131.222028,43.593234],[131.20047,43.532089],[131.276847,43.495632],[131.304564,43.502144],[131.31873,43.499539],[131.314419,43.461325],[131.295941,43.441774],[131.314419,43.392653],[131.275615,43.369165],[131.269455,43.297775],[131.255289,43.265099],[131.206014,43.237202],[131.201086,43.203185],[131.218948,43.191405],[131.207861,43.1316],[131.173985,43.111506],[131.171521,43.06955],[131.120398,43.068238],[131.102536,43.021002],[131.11855,43.007875],[131.115471,42.975482],[131.151195,42.968475],[131.14442,42.939566],[131.114855,42.915027],[131.034167,42.929051],[131.017536,42.915027],[131.045869,42.866796],[130.981812,42.857145],[130.949783,42.876884],[130.890653,42.852758],[130.845073,42.881269],[130.801957,42.879515],[130.784095,42.842227],[130.75453,42.845738],[130.719422,42.831695],[130.708335,42.846615],[130.665835,42.847932],[130.603625,42.819405],[130.562357,42.815015],[130.532792,42.787352],[130.46627,42.772417],[130.40714,42.731548],[130.425003,42.706926],[130.464423,42.688453],[130.529096,42.703408],[130.592538,42.671295],[130.633806,42.603494],[130.622719,42.573092],[130.570364,42.557224],[130.565437,42.506509],[130.599929,42.486211],[130.600545,42.450453],[130.645509,42.426603],[130.581451,42.435437],[130.585763,42.485328],[130.558661,42.495919],[130.556198,42.523712],[130.520473,42.583228],[130.522937,42.622433],[130.482285,42.626837],[130.459495,42.588075],[130.476125,42.570007],[130.435474,42.553257],[130.423771,42.574855],[130.44656,42.607459],[130.420691,42.617148],[130.388046,42.603054],[130.373264,42.630799],[130.333228,42.64973],[130.290112,42.702968],[130.257467,42.710884],[130.242069,42.738582],[130.245148,42.799209],[130.258083,42.860655],[130.277793,42.892232],[130.258083,42.90626],[130.21004,42.902315],[130.17062,42.912397],[130.136127,42.90363],[130.10225,42.922916],[130.127504,42.932556],[130.120729,42.954461],[130.144134,42.976357],[130.10841,42.989929],[130.072685,42.971541],[130.027106,42.9676],[130.002468,42.981174],[129.963664,42.978547],[129.954425,43.010938],[129.897143,43.001748],[129.903918,42.968475],[129.868193,42.97373],[129.856491,42.951833],[129.874969,42.923792],[129.846636,42.918533],[129.835549,42.866796],[129.816454,42.851003],[129.810911,42.795257],[129.78381,42.762752],[129.767179,42.707806],[129.796744,42.681854],[129.754245,42.645768],[129.786889,42.615387],[129.746237,42.58455],[129.749933,42.546644],[129.738846,42.500332],[129.748701,42.471204],[129.704354,42.427045],[129.643991,42.43102],[129.624281,42.459284],[129.60026,42.41114],[129.546057,42.361632],[129.49863,42.412023],[129.452434,42.441179],[129.400695,42.449128],[129.368051,42.425719],[129.376058,42.447803],[129.344029,42.451777],[129.356348,42.427045],[129.331094,42.429695],[129.30892,42.403628],[129.326167,42.389927],[129.240551,42.376223],[129.231312,42.356325],[129.260261,42.335536],[129.208522,42.293052],[129.231312,42.283755],[129.215914,42.265157],[129.183269,42.262056],[129.181421,42.242122],[129.209138,42.237692],[129.215914,42.208442],[129.166639,42.188047],[129.113668,42.140583],[129.048378,42.137476],[129.039139,42.107736],[129.008958,42.09175],[128.971386,42.097079],[128.954755,42.083756],[128.952908,42.025545],[128.898089,42.016653],[128.795227,42.042436],[128.779213,42.033546],[128.737945,42.050435],[128.70222,42.02021],[128.658489,42.018876],[128.637547,42.035324],[128.60675,42.02999],[128.598127,42.007315],[128.49896,42.000644],[128.466316,42.020654],[128.405338,42.018876],[128.294468,42.026434],[128.090593,42.022877],[128.033926,42.000199],[128.106607,41.949923],[128.115846,41.896935],[128.104143,41.843457],[128.112766,41.793504],[128.147875,41.78101],[128.163889,41.721628],[128.208853,41.688565],[128.248889,41.681414],[128.30186,41.627756],[128.317874,41.575844],[128.301244,41.544498],[128.238418,41.497898],[128.243345,41.477276],[128.203925,41.410882],[128.169433,41.404149],[128.114614,41.364186],[128.090593,41.374516],[128.110919,41.393375],[128.040085,41.393375],[128.000049,41.442741],[127.991426,41.421204],[127.970484,41.438704],[127.93168,41.444984],[127.909506,41.42973],[127.882405,41.448124],[127.86947,41.4037],[127.854688,41.420755],[127.780159,41.427038],[127.684073,41.422999],[127.636645,41.413575],[127.618783,41.432871],[127.563964,41.432871],[127.547334,41.477276],[127.526392,41.467859],[127.465414,41.479069],[127.459255,41.461581],[127.419835,41.460235],[127.405668,41.478621],[127.360088,41.479518],[127.360704,41.466065],[127.296031,41.486243],[127.253531,41.486691],[127.28864,41.501932],[127.241212,41.520754],[127.188241,41.527475],[127.164836,41.542706],[127.14143,41.530163],[127.125416,41.566442],[127.178386,41.600015],[127.135887,41.600463],[127.127263,41.622388],[127.093387,41.629993],[127.103242,41.647883],[127.037952,41.676944],[127.057662,41.703758],[127.050887,41.744852],[127.005923,41.749317],[126.979438,41.776993],[126.940018,41.773423],[126.952953,41.804212],[126.931395,41.812687],[126.861178,41.768067],[126.83962,41.727435],[126.809439,41.749317],[126.8002,41.702865],[126.723207,41.753335],[126.694874,41.751103],[126.690562,41.728328],[126.724439,41.710907],[126.688099,41.674262],[126.644983,41.661297],[126.608027,41.669345],[126.592628,41.624624],[126.564295,41.608965],[126.582773,41.563307],[126.559983,41.548081],[126.497158,41.406842],[126.539041,41.366881],[126.524259,41.349362],[126.497158,41.374965],[126.437411,41.353405],[126.373354,41.289133],[126.35426,41.244599],[126.332086,41.236949],[126.295129,41.171661],[126.188572,41.114875],[126.187956,41.113072],[126.16763,41.094583],[126.124514,41.092327],[126.133753,41.063906],[126.099877,41.036376],[126.1085,41.011995],[126.066,40.997542],[126.08263,40.976762],[126.051833,40.96185],[126.041362,40.928851],[126.008102,40.936537],[125.959442,40.88181],[125.921254,40.882715],[125.875059,40.908501],[125.860892,40.888597],[125.817161,40.866877],[125.778356,40.897645],[125.707523,40.866877],[125.648393,40.826133],[125.641002,40.798503],[125.67611,40.788082],[125.685349,40.769048],[125.61698,40.763609],[125.585567,40.788535],[125.551075,40.761796],[125.544915,40.729605],[125.49564,40.728697],[125.459916,40.707379],[125.453756,40.676522],[125.418648,40.673345],[125.422343,40.635661],[125.375532,40.658365],[125.329337,40.643835],[125.305315,40.661089],[125.279445,40.655187],[125.262815,40.620218],[125.181511,40.611132],[125.113758,40.569322],[125.076801,40.562048],[125.015823,40.533853],[125.004737,40.496091],[125.042925,40.483802],[125.044157,40.466503],[124.985642,40.475153],[124.945606,40.45603],[124.913578,40.481981],[124.834121,40.423235],[124.739267,40.371733],[124.722636,40.321561],[124.62655,40.291896],[124.513833,40.22019],[124.490427,40.18408],[124.457782,40.177679],[124.428217,40.144291],[124.346913,40.079756],[124.336442,40.049985],[124.372167,40.021576],[124.349377,39.989029],[124.288399,39.962888],[124.286551,39.931689],[124.241588,39.928477],[124.216334,39.89313],[124.214486,39.865116],[124.173218,39.841225],[124.151045,39.74558],[124.099306,39.777323],[124.103001,39.823302],[124.002603,39.800316],[123.95148,39.817786],[123.812278,39.831115],[123.795032,39.822842],[123.687858,39.808132],[123.674924,39.826979],[123.645358,39.823761],[123.642279,39.796178],[123.612714,39.775023],[123.579453,39.781002],[123.546808,39.756163],[123.536337,39.788361],[123.484598,39.763063],[123.477823,39.74696],[123.392823,39.723949],[123.388512,39.74742]]],[[[114.031778,22.503923],[114.082285,22.512216],[114.095219,22.534329],[114.156813,22.543726],[114.166052,22.559201],[114.222719,22.553122],[114.232574,22.539857],[114.232574,22.528801],[114.260291,22.547595],[114.263371,22.541515],[114.263987,22.541515],[114.28924,22.52272],[114.309566,22.497288],[114.340979,22.50337],[114.2529,22.445304],[114.23319,22.466875],[114.205473,22.449729],[114.220255,22.427603],[114.278769,22.435901],[114.325581,22.479041],[114.376088,22.436454],[114.406269,22.433688],[114.406269,22.432582],[114.385327,22.41156],[114.394566,22.361757],[114.356994,22.340171],[114.323733,22.384447],[114.323733,22.385001],[114.323117,22.385554],[114.322501,22.385554],[114.283081,22.386661],[114.278153,22.328546],[114.315726,22.299756],[114.315726,22.299203],[114.313262,22.264315],[114.284929,22.263761],[114.262139,22.294773],[114.248588,22.274837],[114.265835,22.200608],[114.203009,22.206703],[114.200545,22.232188],[114.164821,22.226648],[114.120473,22.272068],[114.145726,22.300864],[114.121089,22.320795],[114.069966,22.326885],[114.034857,22.300864],[114.029314,22.262653],[114.004676,22.239389],[114.026234,22.229418],[113.996669,22.206149],[113.981271,22.229972],[113.935691,22.205041],[113.899351,22.215568],[113.852539,22.191188],[113.8433,22.229418],[113.889496,22.271514],[113.898119,22.308615],[113.969568,22.321349],[113.955401,22.298649],[114.026234,22.34792],[113.980039,22.366185],[113.941235,22.355116],[113.920293,22.367845],[113.918445,22.418199],[113.977575,22.45692],[114.000981,22.491206],[114.031778,22.503923]]],[[[122.673406,39.269531],[122.67895,39.268605],[122.57732,39.269994],[122.497248,39.300566],[122.540979,39.308439],[122.593334,39.278334],[122.641993,39.288061],[122.673406,39.269531]]],[[[122.335256,39.149894],[122.316161,39.185157],[122.343263,39.203246],[122.393154,39.213448],[122.383299,39.190723],[122.398697,39.16196],[122.366053,39.174951],[122.335256,39.149894]]],[[[122.691884,39.23292],[122.691268,39.23431],[122.690037,39.234774],[122.628443,39.231993],[122.635834,39.241727],[122.740544,39.248679],[122.751631,39.229675],[122.696812,39.206492],[122.691884,39.23292]]],[[[122.759022,39.025404],[122.732536,39.013779],[122.704819,39.044463],[122.725145,39.048181],[122.759022,39.025404]]],[[[110.106396,20.026812],[110.144585,20.074598],[110.243135,20.077408],[110.28933,20.056047],[110.318279,20.108882],[110.387265,20.113378],[110.495054,20.077408],[110.526467,20.07516],[110.562191,20.110006],[110.655814,20.134169],[110.687843,20.163947],[110.717408,20.148778],[110.744509,20.074036],[110.778386,20.068415],[110.808567,20.035808],[110.871393,20.01163],[110.940994,20.028499],[110.966248,20.018377],[111.013675,19.850159],[111.043856,19.763448],[111.071573,19.628784],[111.061718,19.612436],[111.008747,19.60398],[110.920668,19.552668],[110.888023,19.518827],[110.844292,19.449996],[110.787009,19.399765],[110.729727,19.378878],[110.706321,19.320153],[110.676756,19.286264],[110.619474,19.152334],[110.585597,18.88075],[110.590525,18.838841],[110.578206,18.784458],[110.499366,18.751592],[110.499366,18.651824],[110.367555,18.631977],[110.329366,18.642185],[110.246215,18.609859],[110.214186,18.578662],[110.116867,18.506602],[110.090382,18.399309],[110.070672,18.376025],[110.022629,18.360121],[109.919767,18.375457],[109.785492,18.339672],[109.749767,18.193618],[109.726362,18.177698],[109.661688,18.175424],[109.584696,18.143579],[109.527413,18.169169],[109.467051,18.173718],[109.441182,18.199303],[109.355566,18.215221],[109.287813,18.264671],[109.17448,18.260125],[109.138756,18.268081],[109.108575,18.323766],[109.006329,18.323198],[108.944735,18.314107],[108.905315,18.389087],[108.881293,18.416344],[108.776583,18.441894],[108.68912,18.447571],[108.644772,18.486738],[108.641077,18.565614],[108.663866,18.67337],[108.65278,18.740258],[108.593033,18.809386],[108.595497,18.872256],[108.637997,18.924346],[108.630606,19.003017],[108.598577,19.055633],[108.591186,19.141592],[108.609048,19.276661],[108.644772,19.349518],[108.694047,19.387346],[108.765496,19.400894],[108.806148,19.450561],[108.855424,19.469182],[108.92872,19.524468],[108.993394,19.587065],[109.048829,19.619764],[109.093792,19.68965],[109.147379,19.704863],[109.169553,19.736411],[109.159082,19.79048],[109.231147,19.863105],[109.255784,19.867045],[109.25948,19.898561],[109.300748,19.917693],[109.349407,19.898561],[109.411001,19.895184],[109.498464,19.873236],[109.526797,19.943573],[109.585312,19.98801],[109.657993,20.01163],[109.712195,20.017253],[109.76147,19.981261],[109.814441,19.993072],[109.855093,19.984073],[109.898825,19.994196],[109.965346,19.993634],[109.997375,19.980136],[110.042339,19.991384],[110.106396,20.026812]]],[[[120.443706,22.441432],[120.297112,22.531565],[120.274323,22.560307],[120.20041,22.721039],[120.149287,22.896468],[120.133272,23.000625],[120.029795,23.048544],[120.018708,23.073322],[120.081534,23.291728],[120.108019,23.341191],[120.12157,23.504836],[120.095084,23.58768],[120.102476,23.701162],[120.175156,23.807427],[120.245989,23.840276],[120.278018,23.92783],[120.316206,23.984708],[120.391967,24.118055],[120.451713,24.182493],[120.470807,24.242533],[120.520698,24.311816],[120.546568,24.370159],[120.589068,24.43229],[120.642654,24.490033],[120.68885,24.600542],[120.762147,24.658208],[120.82374,24.688118],[120.89211,24.767482],[120.914899,24.864715],[120.961095,24.940167],[121.009754,24.993878],[121.024537,25.040517],[121.102145,25.075214],[121.132942,25.078466],[121.209318,25.12724],[121.319572,25.140785],[121.371926,25.159746],[121.413194,25.238806],[121.444607,25.27074],[121.53515,25.307535],[121.585041,25.309159],[121.62323,25.29455],[121.655259,25.242054],[121.700222,25.226896],[121.707613,25.191701],[121.745186,25.161912],[121.782142,25.160287],[121.841888,25.135367],[121.917033,25.138076],[121.947214,25.031841],[121.98109,25.030757],[122.012503,25.001471],[121.933047,24.938539],[121.844968,24.836476],[121.841272,24.734329],[121.86283,24.671261],[121.892395,24.617953],[121.88562,24.529784],[121.867758,24.47914],[121.82649,24.423572],[121.809243,24.339083],[121.689135,24.174303],[121.678048,24.133895],[121.643556,24.097843],[121.63986,24.064514],[121.65957,24.007125],[121.621382,23.920718],[121.587505,23.760878],[121.522832,23.538858],[121.5216,23.483431],[121.497578,23.419744],[121.479716,23.322507],[121.440296,23.271937],[121.415042,23.196047],[121.430441,23.137175],[121.409499,23.1025],[121.370695,23.084334],[121.35468,23.00999],[121.324499,22.945526],[121.276456,22.877171],[121.237652,22.836362],[121.21055,22.770711],[121.170514,22.723247],[121.078739,22.669691],[121.03316,22.650914],[121.014682,22.584069],[120.981421,22.528248],[120.914899,22.302525],[120.903197,22.12634],[120.912436,22.086418],[120.907508,22.033171],[120.86624,21.984345],[120.873016,21.897191],[120.854537,21.883309],[120.781857,21.923843],[120.743052,21.915515],[120.701784,21.927174],[120.667908,21.983235],[120.651277,22.033171],[120.661748,22.067007],[120.659285,22.154056],[120.640806,22.241605],[120.569973,22.361757],[120.517619,22.408793],[120.443706,22.441432]]],[[[117.145351,23.455983],[117.142887,23.400522],[117.124409,23.389537],[117.081909,23.409309],[117.050496,23.400522],[117.027091,23.41535],[116.946402,23.42194],[116.944555,23.440061],[116.982743,23.460924],[117.022779,23.436767],[117.058503,23.47355],[117.093612,23.459277],[117.129336,23.483431],[117.145351,23.455983]]],[[[122.163408,29.988137],[122.118445,29.986582],[122.106742,30.005759],[122.027902,29.991247],[121.978011,30.059125],[121.989714,30.077252],[121.983554,30.100554],[121.934895,30.161631],[121.955221,30.183878],[122.048844,30.147141],[122.095655,30.158008],[122.152938,30.113497],[122.293988,30.100554],[122.288444,30.073109],[122.310002,30.039958],[122.343879,30.020269],[122.341415,29.976733],[122.322321,29.940438],[122.279205,29.937326],[122.239785,29.962735],[122.163408,29.988137]]],[[[118.412338,24.514538],[118.451758,24.506915],[118.477012,24.437738],[118.457918,24.412128],[118.405563,24.427931],[118.353208,24.415398],[118.329802,24.382152],[118.282375,24.413218],[118.31194,24.424661],[118.298389,24.477506],[118.318715,24.486765],[118.374766,24.458986],[118.412338,24.514538]]],[[[122.213915,30.186464],[122.168336,30.138343],[122.143698,30.163183],[122.152938,30.19112],[122.178807,30.199396],[122.213915,30.186464]]],[[[122.229314,29.711995],[122.231162,29.710435],[122.269966,29.685482],[122.210836,29.700559],[122.229314,29.711995]]],[[[122.427646,30.738422],[122.445509,30.745109],[122.475074,30.714243],[122.528045,30.725047],[122.532972,30.696748],[122.427031,30.697777],[122.427646,30.738422]]],[[[124.542782,25.903886],[124.566804,25.941563],[124.584666,25.908731],[124.542782,25.903886]]],[[[122.162793,30.329654],[122.176343,30.351863],[122.191126,30.329654],[122.228082,30.329654],[122.247176,30.30124],[122.231778,30.234562],[122.154169,30.244903],[122.058083,30.291938],[122.162793,30.329654]]],[[[112.853486,21.740515],[112.83316,21.736624],[112.804826,21.686583],[112.821457,21.655994],[112.798667,21.610933],[112.817145,21.590345],[112.775261,21.564189],[112.730914,21.613715],[112.780189,21.671568],[112.734609,21.666562],[112.70566,21.679354],[112.724138,21.719945],[112.782653,21.739959],[112.840551,21.776644],[112.876275,21.772753],[112.853486,21.740515]]],[[[122.317393,30.249556],[122.333408,30.272817],[122.40732,30.272817],[122.417175,30.238699],[122.365437,30.255242],[122.358661,30.236113],[122.277973,30.242835],[122.317393,30.249556]]],[[[112.530733,21.583667],[112.535045,21.628737],[112.57077,21.645982],[112.560299,21.666562],[112.592327,21.693256],[112.663776,21.714386],[112.66624,21.683803],[112.639139,21.67268],[112.665624,21.642644],[112.621277,21.606482],[112.571385,21.619835],[112.563378,21.591458],[112.530733,21.583667]]],[[[122.026054,29.178333],[122.036525,29.20759],[122.075945,29.176243],[122.056851,29.158476],[122.013119,29.151681],[122.026054,29.178333]]],[[[112.208597,3.876129],[112.219068,3.908969],[112.260336,3.917925],[112.280046,3.86777],[112.241858,3.845677],[112.208597,3.876129]]],[[[123.445178,25.726102],[123.445794,25.749822],[123.479055,25.768687],[123.512316,25.755212],[123.50862,25.722867],[123.469816,25.712623],[123.445178,25.726102]]],[[[122.372212,29.893234],[122.362973,29.894272],[122.353734,29.89946],[122.338951,29.911911],[122.330944,29.937845],[122.351886,29.959105],[122.398081,29.9394],[122.411632,29.951846],[122.43319,29.919173],[122.433806,29.883376],[122.401777,29.869884],[122.415944,29.828877],[122.386379,29.834069],[122.372212,29.893234]]],[[[119.646064,23.550928],[119.609108,23.503738],[119.578927,23.502641],[119.562297,23.530627],[119.566608,23.584937],[119.601717,23.575613],[119.61034,23.604132],[119.678093,23.600294],[119.691028,23.547087],[119.646064,23.550928]]],[[[119.471138,25.197116],[119.444036,25.20199],[119.44342,25.238806],[119.473601,25.259916],[119.501319,25.21715],[119.540739,25.20199],[119.566608,25.210112],[119.549362,25.161912],[119.52534,25.157579],[119.507478,25.183036],[119.471138,25.197116]]],[[[123.666916,25.914114],[123.689706,25.939949],[123.706952,25.91519],[123.666916,25.914114]]],[[[122.43011,30.408655],[122.352502,30.422074],[122.318625,30.407106],[122.281669,30.418461],[122.277973,30.471603],[122.37406,30.461802],[122.432574,30.445294],[122.43011,30.408655]]],[[[114.142647,22.213906],[114.166668,22.205041],[114.154965,22.177888],[114.120473,22.177888],[114.123553,22.238836],[114.142647,22.213906]]],[[[123.022644,39.546507],[123.036194,39.533123],[122.995542,39.495264],[122.945035,39.520198],[122.96105,39.551122],[123.022644,39.546507]]],[[[121.837577,28.770484],[121.861598,28.814016],[121.86283,28.782024],[121.837577,28.770484]]],[[[114.305871,22.372273],[114.305255,22.372826],[114.332972,22.353455],[114.313878,22.340724],[114.305871,22.372273]]],[[[119.580159,25.627398],[119.580775,25.650059],[119.611572,25.669479],[119.580159,25.627398]]],[[[120.729502,37.947065],[120.76461,37.923937],[120.76461,37.895134],[120.721495,37.917328],[120.729502,37.947065]]],[[[122.265038,29.84549],[122.319241,29.829397],[122.299531,29.819532],[122.325401,29.781621],[122.310002,29.766557],[122.248408,29.804473],[122.221307,29.832512],[122.265038,29.84549]]],[[[119.506246,23.625518],[119.52534,23.62497],[119.519181,23.559705],[119.47237,23.556962],[119.506246,23.577259],[119.506246,23.625518]]],[[[119.976824,26.191005],[119.970665,26.217852],[119.998998,26.235569],[120.016244,26.217316],[119.976824,26.191005]]],[[[114.231342,22.016528],[114.239965,22.03539],[114.302791,22.050368],[114.311414,22.041493],[114.231342,22.016528]]],[[[121.790765,29.082144],[121.82033,29.099402],[121.84312,29.082144],[121.832649,29.050236],[121.790765,29.082144]]],[[[110.435308,21.182995],[110.445163,21.184669],[110.499366,21.213125],[110.525235,21.190249],[110.589293,21.194713],[110.632409,21.210893],[110.582517,21.094801],[110.544945,21.083633],[110.508605,21.140579],[110.434076,21.168485],[110.435308,21.182995]]],[[[112.435263,21.663781],[112.458669,21.68992],[112.456205,21.648763],[112.435263,21.663781]]],[[[120.692545,37.983867],[120.724574,37.987641],[120.732581,37.961694],[120.692545,37.983867]]],[[[122.503407,39.241263],[122.547755,39.229211],[122.502175,39.224112],[122.503407,39.241263]]],[[[110.517844,21.079166],[110.560344,21.061295],[110.539402,20.987557],[110.535706,20.922727],[110.511684,20.916578],[110.47288,20.983087],[110.407591,20.990351],[110.347845,20.984763],[110.309656,20.963529],[110.201251,20.938378],[110.211106,20.986999],[110.27578,21.033369],[110.305961,21.0881],[110.352772,21.079724],[110.398352,21.096476],[110.459946,21.062971],[110.517844,21.079166]]],[[[118.230636,24.401228],[118.233716,24.445911],[118.273752,24.441007],[118.230636,24.401228]]],[[[121.889315,28.471569],[121.881924,28.502603],[121.918881,28.497344],[121.889315,28.471569]]],[[[113.554425,22.107489],[113.554425,22.142416],[113.534715,22.174009],[113.53841,22.209473],[113.558736,22.212244],[113.575983,22.194513],[113.6037,22.132438],[113.554425,22.107489]]],[[[122.182503,29.650642],[122.138155,29.662083],[122.095655,29.716673],[122.074097,29.701599],[122.047612,29.719791],[122.083952,29.78318],[122.13138,29.788893],[122.146778,29.749412],[122.200365,29.712515],[122.211452,29.692241],[122.182503,29.650642]]],[[[119.906607,26.68989],[119.950954,26.692563],[119.926933,26.664756],[119.906607,26.68989]]],[[[121.779062,31.310247],[121.727939,31.35472],[121.572107,31.435944],[121.509897,31.4824],[121.520984,31.494137],[121.567179,31.48342],[121.585657,31.454836],[121.742106,31.407345],[121.792613,31.363408],[121.793845,31.31945],[121.779062,31.310247]]],[[[122.461523,29.944068],[122.459059,29.938882],[122.467067,29.928509],[122.462755,29.927991],[122.457827,29.927472],[122.45598,29.926435],[122.452284,29.935252],[122.4529,29.936807],[122.449204,29.9394],[122.450436,29.940956],[122.451052,29.940956],[122.451668,29.943031],[122.460291,29.947179],[122.459675,29.944586],[122.461523,29.944068]]],[[[118.204151,24.504737],[118.19368,24.463344],[118.143173,24.420847],[118.084042,24.435559],[118.068644,24.463344],[118.093281,24.540672],[118.14502,24.560814],[118.191832,24.536861],[118.204151,24.504737]]],[[[122.570544,30.644244],[122.546523,30.651967],[122.559457,30.679764],[122.570544,30.644244]]],[[[120.786784,40.473787],[120.774465,40.48016],[120.805262,40.525666],[120.8299,40.516112],[120.83298,40.491995],[120.786784,40.473787]]],[[[119.642985,26.129231],[119.606028,26.15287],[119.62697,26.173282],[119.665159,26.155556],[119.642985,26.129231]]],[[[119.929397,26.134067],[119.919542,26.172208],[119.960194,26.146961],[119.929397,26.134067]]],[[[121.869605,28.423685],[121.889931,28.45105],[121.910873,28.44],[121.869605,28.423685]]],[[[123.086702,39.426881],[123.054057,39.457847],[123.090397,39.450915],[123.086702,39.426881]]],[[[113.765076,21.962145],[113.74167,21.991559],[113.774315,21.998218],[113.765076,21.962145]]],[[[119.497623,23.38679],[119.516717,23.349982],[119.495159,23.349982],[119.497623,23.38679]]],[[[121.850511,29.977251],[121.844968,29.982953],[121.84004,30.047211],[121.848663,30.101072],[121.88562,30.094859],[121.924424,30.052391],[121.933047,29.994875],[121.874533,29.964809],[121.850511,29.977251]]],[[[113.266165,8.125929],[113.293882,8.176284],[113.353628,8.237887],[113.354244,8.304217],[113.386273,8.289412],[113.386273,8.238479],[113.349933,8.172137],[113.288955,8.119412],[113.343157,8.193463],[113.311129,8.177469],[113.266165,8.125929]]],[[[122.065474,30.179739],[122.025438,30.161631],[122.017431,30.186464],[122.055619,30.200431],[122.065474,30.179739]]],[[[122.391306,29.970512],[122.3679,29.980361],[122.378371,30.023896],[122.411632,30.025969],[122.391306,29.970512]]],[[[119.557369,23.666634],[119.586318,23.675952],[119.615268,23.661153],[119.608492,23.620035],[119.557369,23.666634]]],[[[121.952141,29.187738],[121.976779,29.191918],[121.979243,29.160043],[121.952141,29.187738]]],[[[113.723192,21.922177],[113.71888,21.951599],[113.742902,21.950489],[113.723192,21.922177]]],[[[121.066421,27.478475],[121.067036,27.478475],[121.107073,27.443958],[121.066421,27.461483],[121.066421,27.478475]]],[[[113.142977,21.831653],[113.136818,21.868869],[113.167615,21.876644],[113.203955,21.861093],[113.162071,21.853873],[113.142977,21.831653]]],[[[120.034106,26.488667],[120.035954,26.515981],[120.071679,26.521336],[120.066751,26.498308],[120.034106,26.488667]]],[[[122.038373,29.759284],[122.02975,29.716673],[122.011271,29.746294],[122.038373,29.759284]]],[[[119.662079,25.646822],[119.716898,25.664624],[119.718745,25.634952],[119.673782,25.632794],[119.662079,25.646822]]],[[[121.957685,30.287804],[121.921344,30.30744],[121.94167,30.33327],[121.989098,30.339985],[122.0008,30.308473],[121.957685,30.287804]]],[[[121.940438,30.114533],[121.962612,30.106249],[121.945982,30.064304],[121.910257,30.089163],[121.940438,30.114533]]],[[[111.463311,17.077491],[111.452224,17.092936],[111.542151,17.11982],[111.559397,17.087788],[111.4861,17.058039],[111.536607,17.104949],[111.463311,17.077491]]],[[[111.99733,3.848065],[112.03367,3.892251],[112.073707,3.865979],[112.064467,3.830152],[112.015192,3.823583],[111.99733,3.848065]]],[[[121.801852,31.356765],[121.792613,31.377715],[121.845584,31.37465],[121.951525,31.337343],[122.040837,31.324051],[122.116597,31.320984],[122.122756,31.307179],[122.097503,31.255522],[122.016199,31.282121],[121.932431,31.283144],[121.840656,31.295418],[121.8037,31.328652],[121.801852,31.356765]]],[[[113.819894,22.396068],[113.786634,22.413773],[113.813735,22.419858],[113.819894,22.396068]]],[[[122.155401,29.970512],[122.154169,29.97103],[122.152322,29.97103],[122.163408,29.988137],[122.196053,29.960661],[122.155401,29.970512]]],[[[117.708319,15.182712],[117.715095,15.222561],[117.748355,15.230068],[117.782848,15.187333],[117.838899,15.15903],[117.784696,15.16885],[117.74466,15.217941],[117.720638,15.195418],[117.72495,15.131302],[117.827812,15.111659],[117.726798,15.105303],[117.712631,15.118592],[117.708319,15.182712]]],[[[114.190074,21.986564],[114.180835,22.00987],[114.229494,21.995443],[114.190074,21.986564]]],[[[122.066706,25.6247],[122.092575,25.639268],[122.087032,25.61067],[122.066706,25.6247]]],[[[120.990044,36.413239],[120.950624,36.414684],[120.978341,36.428649],[120.990044,36.413239]]],[[[114.153734,21.97491],[114.124169,21.985455],[114.171596,22.000437],[114.153734,21.97491]]],[[[119.760629,26.613402],[119.796354,26.630523],[119.818527,26.616613],[119.776644,26.600025],[119.760629,26.613402]]],[[[121.468013,22.67687],[121.514824,22.676318],[121.513592,22.631582],[121.474788,22.643734],[121.468013,22.67687]]],[[[122.287828,29.723949],[122.251488,29.731225],[122.2133,29.771752],[122.241633,29.784738],[122.258263,29.753569],[122.301379,29.748373],[122.287828,29.723949]]],[[[123.160614,39.025404],[123.143984,39.038885],[123.145832,39.091857],[123.20065,39.077921],[123.205578,39.057011],[123.160614,39.025404]]],[[[121.510513,22.086972],[121.575802,22.0842],[121.575186,22.037055],[121.604752,22.022631],[121.594281,21.995443],[121.533918,22.022076],[121.507433,22.048704],[121.510513,22.086972]]],[[[112.241858,3.942404],[112.254177,3.97942],[112.288053,3.97345],[112.292365,3.946583],[112.241858,3.942404]]],[[[116.769628,20.771721],[116.820135,20.780674],[116.88604,20.775638],[116.925461,20.726949],[116.934084,20.676565],[116.905135,20.619443],[116.862635,20.588633],[116.796113,20.582471],[116.749302,20.600958],[116.849084,20.628405],[116.889736,20.683284],[116.87249,20.738143],[116.761005,20.750456],[116.769628,20.771721]]],[[[121.134174,27.787051],[121.13479,27.787051],[121.134174,27.785992],[121.134174,27.787051]]],[[[111.734324,16.19732],[111.790374,16.220307],[111.789758,16.250186],[111.716462,16.249036],[111.782367,16.273741],[111.813164,16.261676],[111.81686,16.224329],[111.779903,16.19732],[111.734324,16.19732]]],[[[113.025333,21.847762],[113.007471,21.869424],[113.045659,21.882753],[113.025333,21.847762]]],[[[122.097503,25.499987],[122.122141,25.495666],[122.110438,25.465952],[122.097503,25.499987]]],[[[122.454132,29.956513],[122.455364,29.955994],[122.458443,29.951846],[122.459059,29.950809],[122.447972,29.947698],[122.446741,29.951327],[122.445509,29.952365],[122.447972,29.955994],[122.454132,29.956513]]],[[[111.649324,16.255931],[111.681353,16.262251],[111.598817,16.198469],[111.606825,16.177779],[111.690592,16.211112],[111.611136,16.156511],[111.56802,16.162834],[111.577875,16.208239],[111.649324,16.255931]]],[[[113.896887,7.607204],[113.921524,7.639235],[114.029314,7.670078],[114.095219,7.721082],[114.211632,7.786904],[114.268298,7.870501],[114.414892,7.952895],[114.47279,7.968898],[114.511594,7.966527],[114.540543,7.945783],[114.555326,7.891249],[114.540543,7.862201],[114.464167,7.814771],[114.419819,7.765557],[114.407501,7.683126],[114.368696,7.638642],[114.289856,7.617288],[114.157429,7.561525],[114.058879,7.537794],[113.98743,7.536014],[113.919677,7.566865],[113.896887,7.607204]]],[[[122.264423,30.269716],[122.300147,30.271266],[122.315545,30.250073],[122.253952,30.237147],[122.264423,30.269716]]],[[[122.282901,29.860542],[122.301379,29.883895],[122.343263,29.882857],[122.343263,29.860542],[122.30877,29.849642],[122.282901,29.860542]]],[[[113.976959,8.872888],[113.989894,8.878801],[114.041017,8.843913],[114.060111,8.816119],[114.035473,8.783591],[114.013299,8.836817],[113.976959,8.872888]]],[[[120.135736,26.550784],[120.117874,26.568984],[120.153598,26.604841],[120.167149,26.571661],[120.135736,26.550784]]],[[[113.956017,8.840365],[113.977575,8.841548],[114.012068,8.798376],[113.975111,8.793054],[113.956017,8.840365]]],[[[122.781196,30.694175],[122.757174,30.713728],[122.778732,30.729677],[122.799674,30.716301],[122.781196,30.694175]]],[[[121.098449,27.937311],[121.038087,27.948942],[121.0695,27.984357],[121.120623,27.986471],[121.152652,27.961629],[121.098449,27.937311]]],[[[109.088249,21.014934],[109.088865,21.031134],[109.09256,21.057386],[109.138756,21.067439],[109.144299,21.041189],[109.117814,21.017727],[109.11227,21.02499],[109.088249,21.014934]]],[[[110.405127,20.678245],[110.414366,20.710157],[110.437772,20.677685],[110.405127,20.678245]]],[[[111.739251,16.452898],[111.765737,16.495366],[111.759577,16.545857],[111.786679,16.520039],[111.766969,16.470116],[111.739251,16.452898]]],[[[120.750444,38.150188],[120.742436,38.199116],[120.7874,38.158658],[120.750444,38.150188]]],[[[112.216604,8.866383],[112.180264,8.862244],[112.206133,8.88767],[112.216604,8.866383]]],[[[113.792177,7.373422],[113.829134,7.383511],[113.828518,7.362145],[113.792177,7.373422]]],[[[111.97454,16.323715],[112.002874,16.350707],[112.047221,16.360469],[112.074938,16.349558],[112.07617,16.323715],[112.002258,16.306484],[111.97454,16.323715]]],[[[120.159142,35.765198],[120.172077,35.785591],[120.193019,35.756942],[120.169613,35.740428],[120.159142,35.765198]]],[[[120.918595,38.345236],[120.895189,38.36307],[120.914899,38.373393],[120.918595,38.345236]]],[[[114.194386,8.764664],[114.222103,8.784773],[114.248588,8.724442],[114.201161,8.727991],[114.194386,8.764664]]],[[[112.232619,16.996239],[112.266496,16.993949],[112.292981,16.96762],[112.222764,16.960751],[112.207981,16.987081],[112.232619,16.996239]]],[[[121.185913,27.963215],[121.17113,27.978543],[121.197616,28.000739],[121.237652,27.988056],[121.185913,27.963215]]],[[[123.716807,39.74512],[123.719887,39.763063],[123.756843,39.754322],[123.716807,39.74512]]],[[[119.421247,23.216949],[119.453275,23.216399],[119.436029,23.186146],[119.421247,23.216949]]],[[[114.689601,10.345648],[114.717318,10.380381],[114.747499,10.37214],[114.725941,10.319154],[114.702536,10.312677],[114.689601,10.345648]]],[[[114.617536,9.965688],[114.685905,9.979245],[114.672355,9.927963],[114.642173,9.917351],[114.617536,9.965688]]],[[[115.837712,9.709775],[115.870972,9.778785],[115.901153,9.795888],[115.925791,9.781734],[115.901153,9.67084],[115.867277,9.650191],[115.861117,9.694438],[115.837712,9.709775]]],[[[113.769387,7.636862],[113.831597,7.644573],[113.814967,7.603051],[113.773699,7.601865],[113.769387,7.636862]]],[[[109.463972,7.344339],[109.536037,7.448792],[109.653065,7.559745],[109.72205,7.575763],[109.816289,7.572797],[109.904984,7.55144],[109.948716,7.522962],[109.938861,7.504569],[109.791651,7.524742],[109.709115,7.511095],[109.654297,7.479648],[109.571761,7.373422],[109.513247,7.320002],[109.463972,7.315254],[109.463972,7.344339]]],[[[120.62664,37.94565],[120.602002,37.978678],[120.631567,37.981037],[120.62664,37.94565]]],[[[120.360554,26.916909],[120.319286,26.944654],[120.327909,26.963858],[120.363018,26.967592],[120.394431,26.933984],[120.360554,26.916909]]],[[[122.836014,30.698806],[122.807681,30.714243],[122.831087,30.728648],[122.836014,30.698806]]],[[[116.273181,8.879392],[116.305826,8.917233],[116.332311,8.901269],[116.294123,8.858105],[116.273181,8.879392]]],[[[110.644727,20.935584],[110.646575,20.917137],[110.611467,20.860106],[110.562807,20.861224],[110.548641,20.908752],[110.584365,20.948998],[110.644727,20.935584]]],[[[112.476531,16.001247],[112.448814,16.005274],[112.462364,16.043813],[112.588016,16.070844],[112.612037,16.039212],[112.570154,16.011027],[112.476531,16.001247]]],[[[112.537509,8.846278],[112.598487,8.859288],[112.639755,8.818484],[112.57077,8.815527],[112.537509,8.846278]]],[[[120.802183,38.284193],[120.816349,38.318008],[120.848378,38.305799],[120.802183,38.284193]]],[[[114.469095,10.836261],[114.55471,10.900911],[114.587355,10.909138],[114.593514,10.856245],[114.565181,10.836261],[114.513442,10.848605],[114.475254,10.814512],[114.469095,10.836261]]],[[[121.489571,37.577086],[121.488955,37.578035],[121.489571,37.578509],[121.489571,37.577561],[121.489571,37.577086]]],[[[119.668238,26.628383],[119.651608,26.657269],[119.673782,26.680799],[119.712586,26.6685],[119.748926,26.681334],[119.758781,26.659408],[119.720593,26.635873],[119.668238,26.628383]]],[[[122.200365,29.969475],[122.239785,29.960142],[122.273662,29.93214],[122.233626,29.946661],[122.200365,29.969475]]],[[[112.409393,16.294996],[112.509176,16.317397],[112.536893,16.312228],[112.531349,16.285805],[112.475915,16.288677],[112.411241,16.2634],[112.383524,16.265698],[112.409393,16.294996]]],[[[121.487723,37.578509],[121.488339,37.578509],[121.488955,37.578509],[121.488955,37.578035],[121.487723,37.577561],[121.487723,37.578509]]],[[[121.485875,37.578509],[121.487723,37.578509],[121.487723,37.578035],[121.485875,37.578509]]],[[[122.471378,29.927472],[122.47261,29.927472],[122.473226,29.925397],[122.470762,29.925916],[122.471378,29.927472]]],[[[121.626925,31.445135],[121.579498,31.479848],[121.631853,31.456878],[121.626925,31.445135]]],[[[114.320037,22.381127],[114.320037,22.38168],[114.319421,22.382234],[114.322501,22.385554],[114.323117,22.385554],[114.323733,22.385001],[114.323733,22.384447],[114.320037,22.381127]]],[[[110.556648,20.32734],[110.586213,20.381205],[110.593604,20.360447],[110.556648,20.32734]]],[[[111.500267,16.45175],[111.538455,16.461507],[111.545847,16.43453],[111.49534,16.4374],[111.500267,16.45175]]],[[[121.943518,31.215608],[121.950909,31.228915],[122.008808,31.221238],[121.995873,31.160828],[121.959533,31.159291],[121.943518,31.215608]]],[[[112.349031,16.912088],[112.30222,16.963041],[112.334249,16.962469],[112.360734,16.925257],[112.349031,16.912088]]],[[[116.48876,10.395686],[116.526332,10.426883],[116.542346,10.41982],[116.514629,10.34918],[116.637817,10.365076],[116.644592,10.335051],[116.566368,10.304434],[116.511549,10.297957],[116.467202,10.309144],[116.461658,10.34918],[116.48876,10.395686]]],[[[122.029134,29.954957],[122.058699,29.955994],[122.043916,29.930584],[122.029134,29.954957]]],[[[115.500177,9.897897],[115.518039,9.933857],[115.581481,9.917351],[115.585177,9.896128],[115.54822,9.869007],[115.500177,9.897897]]],[[[121.044247,27.979072],[121.073812,28.007608],[121.089826,27.998625],[121.044247,27.979072]]],[[[118.869365,39.142932],[118.857662,39.098824],[118.82009,39.108576],[118.869365,39.142932]]],[[[114.669891,8.210048],[114.726557,8.21064],[114.74134,8.189316],[114.691449,8.18517],[114.669891,8.210048]]],[[[114.507899,8.120004],[114.595978,8.15792],[114.624311,8.149626],[114.595978,8.120596],[114.530073,8.103415],[114.507899,8.120004]]],[[[113.895039,8.00505],[113.940003,8.018088],[113.969568,7.974825],[113.9708,7.944597],[113.904894,7.963564],[113.895039,8.00505]]],[[[115.16757,8.386523],[115.202678,8.395403],[115.299381,8.370537],[115.315395,8.356326],[115.285214,8.314876],[115.235939,8.321982],[115.18112,8.345668],[115.16757,8.386523]]],[[[115.436119,9.393447],[115.456445,9.417064],[115.469996,9.3592],[115.450286,9.345028],[115.436119,9.393447]]],[[[120.355011,22.327439],[120.383344,22.355669],[120.395663,22.342385],[120.355011,22.327439]]],[[[113.638192,8.976942],[113.644968,8.989355],[113.719496,9.020092],[113.730583,9.004133],[113.654823,8.962163],[113.638192,8.976942]]],[[[116.457347,9.174326],[116.500462,9.164282],[116.477057,9.137103],[116.457347,9.174326]]],[[[122.152322,29.97103],[122.154169,29.97103],[122.155401,29.970512],[122.152322,29.97103]]],[[[114.62,11.432264],[114.621232,11.518479],[114.661884,11.522584],[114.652644,11.436957],[114.62,11.432264]]],[[[114.910723,10.863298],[114.934129,10.902674],[114.959998,10.902087],[114.931049,10.841551],[114.910723,10.863298]]],[[[111.572948,16.470116],[111.592658,16.490775],[111.614216,16.44027],[111.578491,16.447158],[111.572948,16.470116]]],[[[114.696992,11.004322],[114.710543,11.039567],[114.766593,11.110045],[114.799854,11.10476],[114.793079,11.07657],[114.710543,11.001972],[114.696992,11.004322]]],[[[109.936397,7.848566],[109.953027,7.888878],[110.0331,7.944597],[110.078063,7.949339],[110.082991,7.896584],[110.050346,7.846194],[109.988136,7.8124],[109.936397,7.823665],[109.936397,7.848566]]],[[[113.939387,8.875253],[113.916597,8.837999],[113.893807,8.862836],[113.912285,8.888853],[113.939387,8.875253]]],[[[116.727128,11.501473],[116.738215,11.514961],[116.772092,11.445755],[116.765316,11.430504],[116.727128,11.501473]]],[[[111.690592,16.587731],[111.717078,16.59404],[111.724469,16.560198],[111.690592,16.587731]]],[[[121.88254,31.240684],[121.923808,31.234032],[121.909026,31.195133],[121.88254,31.240684]]],[[[112.507328,16.466098],[112.499321,16.493645],[112.575081,16.537251],[112.586784,16.525777],[112.507328,16.466098]]],[[[111.761425,16.061642],[111.829795,16.070844],[111.828563,16.049565],[111.791606,16.028859],[111.761425,16.061642]]],[[[113.845764,10.018733],[113.856851,10.12185],[113.872249,10.123029],[113.865474,10.00341],[113.845764,10.018733]]],[[[116.557129,9.745167],[116.593469,9.723932],[116.566368,9.718623],[116.557129,9.745167]]],[[[114.791847,8.160882],[114.818332,8.141332],[114.812173,8.110524],[114.777064,8.114079],[114.791847,8.160882]]],[[[115.28275,10.191951],[115.28891,10.211388],[115.333257,10.200198],[115.288294,10.172513],[115.28275,10.191951]]],[[[116.832454,10.476908],[116.868794,10.495739],[116.855243,10.468669],[116.832454,10.476908]]],[[[114.703151,16.170307],[114.704383,16.199044],[114.802934,16.215135],[114.816484,16.198469],[114.703151,16.170307]]],[[[115.97753,9.321997],[115.999088,9.293649],[115.976298,9.268252],[115.943037,9.269433],[115.926407,9.311366],[115.97753,9.321997]]],[[[113.660366,9.231039],[113.697323,9.225722],[113.676997,9.202683],[113.660366,9.231039]]],[[[114.665579,7.590001],[114.703767,7.614915],[114.72163,7.59178],[114.671739,7.563898],[114.665579,7.590001]]],[[[117.770529,10.773361],[117.775457,10.809222],[117.801942,10.839788],[117.831507,10.838612],[117.835819,10.803931],[117.798862,10.753371],[117.770529,10.773361]]],[[[114.493116,10.717504],[114.539312,10.793349],[114.562717,10.778064],[114.513442,10.722208],[114.493116,10.717504]]],[[[114.688985,11.469217],[114.720398,11.49209],[114.737644,11.463938],[114.722246,11.429331],[114.688985,11.469217]]],[[[114.242429,10.242014],[114.265219,10.275581],[114.312646,10.300901],[114.326197,10.284414],[114.263371,10.239658],[114.242429,10.242014]]],[[[116.638433,10.503977],[116.699411,10.517511],[116.70865,10.492797],[116.653215,10.491031],[116.638433,10.503977]]],[[[110.459946,8.116449],[110.461793,8.128298],[110.568351,8.17273],[110.599764,8.156735],[110.554184,8.093935],[110.471032,8.072012],[110.459946,8.116449]]],[[[113.221817,8.073789],[113.269861,8.120004],[113.283411,8.111117],[113.235984,8.068456],[113.221817,8.073789]]],[[[115.258113,8.509652],[115.296301,8.510836],[115.271048,8.477098],[115.258113,8.509652]]],[[[111.463311,8.52504],[111.509506,8.550489],[111.497187,8.523857],[111.463311,8.52504]]],[[[114.305871,22.369506],[114.305255,22.372826],[114.305871,22.372273],[114.305871,22.369506]]],[[[114.074893,10.929118],[114.096451,10.947921],[114.110002,10.918541],[114.064422,10.904437],[114.074893,10.929118]]],[[[117.258068,10.320331],[117.274698,10.358011],[117.299952,10.343293],[117.299336,10.313855],[117.258068,10.320331]]],[[[115.943037,21.097592],[115.965211,21.123832],[116.024341,21.12439],[116.044051,21.110434],[116.067457,21.04063],[116.040356,21.02052],[115.989233,21.035603],[115.953508,21.064088],[115.943037,21.097592]]],[[[114.212864,16.040937],[114.268914,16.059342],[114.306487,16.057616],[114.31203,16.034611],[114.212864,16.040937]]],[[[110.609003,8.010976],[110.622553,8.041199],[110.641648,8.031125],[110.642879,7.989049],[110.609003,8.010976]]],[[[115.509416,8.490712],[115.514344,8.519122],[115.558691,8.523265],[115.569162,8.49012],[115.55438,8.461115],[115.521735,8.460523],[115.509416,8.490712]]],[[[111.539071,7.54432],[111.566788,7.606017],[111.612368,7.592374],[111.583419,7.543134],[111.542767,7.524742],[111.539071,7.54432]]],[[[111.657947,8.672974],[111.697368,8.67889],[111.717694,8.6499],[111.665955,8.622683],[111.657947,8.672974]]],[[[110.460561,7.799948],[110.485199,7.827815],[110.511684,7.805878],[110.487663,7.783346],[110.460561,7.799948]]],[[[112.345952,8.926101],[112.384756,8.946793],[112.392763,8.919598],[112.345952,8.926101]]],[[[111.925265,8.070827],[111.95483,8.106377],[112.013344,8.093342],[112.018888,8.065494],[111.994866,8.047125],[111.949287,8.05068],[111.925265,8.070827]]],[[[116.469665,9.810041],[116.490607,9.821246],[116.50847,9.79117],[116.47952,9.785272],[116.469665,9.810041]]],[[[113.600004,6.961929],[113.62341,6.942325],[113.580294,6.920344],[113.600004,6.961929]]],[[[115.926407,20.981411],[115.954124,20.99985],[116.000936,20.948439],[115.999088,20.922727],[115.970139,20.919373],[115.939342,20.945644],[115.926407,20.981411]]],[[[114.985252,11.078332],[115.021592,11.085967],[115.013585,11.063062],[114.985252,11.078332]]],[[[114.457392,15.599305],[114.491884,15.59354],[114.466631,15.576823],[114.457392,15.599305]]],[[[116.045283,10.095338],[116.070537,10.12892],[116.09579,10.09357],[116.067457,10.065876],[116.045283,10.095338]]],[[[114.10569,16.004124],[114.132176,16.007575],[114.110618,15.978235],[114.10569,16.004124]]],[[[117.266691,10.69163],[117.293176,10.735144],[117.369553,10.7422],[117.418212,10.702803],[117.404661,10.671047],[117.348611,10.672811],[117.266691,10.69163]]],[[[114.854057,7.244611],[114.869455,7.198895],[114.819564,7.192957],[114.854057,7.244611]]],[[[112.207981,8.835634],[112.241242,8.852783],[112.235699,8.827355],[112.207981,8.835634]]],[[[111.670266,7.651098],[111.691208,7.711593],[111.726317,7.729977],[111.749722,7.703884],[111.707223,7.648725],[111.670266,7.651098]]],[[[112.823305,8.910729],[112.873196,8.908364],[112.859645,8.889444],[112.823305,8.910729]]],[[[112.527654,5.79444],[112.562146,5.820637],[112.562762,5.75931],[112.531965,5.766455],[112.527654,5.79444]]],[[[114.599058,8.846278],[114.61692,8.881166],[114.665579,8.900087],[114.68221,8.881166],[114.645869,8.844504],[114.599058,8.846278]]],[[[114.868223,7.983715],[114.883006,8.011569],[114.914419,8.00742],[114.907643,7.951117],[114.868223,7.983715]]],[[[112.945261,8.410204],[112.949572,8.432701],[112.985297,8.429149],[112.945261,8.410204]]],[[[117.347995,10.090624],[117.373864,10.106532],[117.385567,10.063519],[117.354154,10.06293],[117.347995,10.090624]]],[[[116.695099,16.345538],[116.717889,16.373676],[116.747454,16.360469],[116.738831,16.303612],[116.708034,16.299591],[116.695099,16.345538]]],[[[115.834632,22.722695],[115.835248,22.722695],[115.834632,22.722143],[115.834632,22.722695]]],[[[114.315726,22.299203],[114.315726,22.299756],[114.316342,22.30031],[114.316958,22.298649],[114.315726,22.299203]]],[[[112.993304,19.472003],[112.980369,19.496263],[112.993304,19.52616],[113.029028,19.52898],[113.048123,19.506417],[113.038883,19.480466],[112.993304,19.472003]]],[[[114.448153,16.034035],[114.465399,16.067393],[114.521449,16.056466],[114.485109,16.034611],[114.448153,16.034035]]],[[[113.832213,19.158552],[113.799568,19.19925],[113.80696,19.222986],[113.875945,19.237113],[113.920293,19.223551],[113.914749,19.172119],[113.874097,19.151203],[113.832213,19.158552]]],[[[112.650842,5.106941],[112.678559,5.121247],[112.719211,5.075944],[112.682871,5.048522],[112.655769,5.055676],[112.650842,5.106941]]],[[[111.638853,7.907254],[111.651788,7.932743],[111.713382,7.927408],[111.712766,7.887099],[111.665339,7.887099],[111.638853,7.907254]]],[[[112.244322,8.874662],[112.288669,8.885896],[112.281278,8.855148],[112.244322,8.874662]]],[[[112.89229,7.844416],[112.93171,7.867537],[112.929862,7.827815],[112.89229,7.844416]]],[[[112.583088,5.56159],[112.616349,5.568737],[112.642834,5.489512],[112.614501,5.465683],[112.606494,5.51751],[112.583088,5.56159]]],[[[112.523342,5.656289],[112.528886,5.687257],[112.56153,5.677133],[112.565842,5.63068],[112.5449,5.616386],[112.523342,5.656289]]],[[[113.596924,10.240836],[113.638192,10.243192],[113.617866,10.22199],[113.596924,10.240836]]],[[[115.361591,13.948985],[115.377605,13.968732],[115.423185,13.977443],[115.438583,13.943757],[115.397315,13.92517],[115.361591,13.948985]]],[[[113.860546,15.477068],[113.890112,15.490909],[113.893807,15.463802],[113.860546,15.477068]]],[[[114.319421,22.382234],[114.320037,22.38168],[114.320037,22.381127],[114.319421,22.382234]]],[[[115.834632,22.723247],[115.835248,22.722695],[115.834632,22.722695],[115.834632,22.723247]]],[[[112.907072,4.993079],[112.910768,5.038388],[112.952652,5.047926],[112.943413,4.991887],[112.907072,4.993079]]],[[[112.557219,5.109326],[112.601567,5.120055],[112.610806,5.091443],[112.568922,5.071771],[112.557219,5.109326]]],[[[112.350263,5.621747],[112.385372,5.643187],[112.385988,5.615791],[112.350263,5.621747]]],[[[112.233851,15.69612],[112.20367,15.71398],[112.240626,15.741055],[112.25972,15.734718],[112.233851,15.69612]]],[[[112.226459,16.759147],[112.211061,16.795819],[112.262184,16.778057],[112.254177,16.751698],[112.226459,16.759147]]],[[[114.372392,22.32301],[114.372392,22.323564],[114.373008,22.323564],[114.372392,22.32301]]],[[[112.472219,5.73966],[112.498089,5.775387],[112.496857,5.736683],[112.472219,5.73966]]],[[[112.612037,5.367973],[112.62374,5.401935],[112.690878,5.406702],[112.685334,5.371548],[112.640371,5.347715],[112.612037,5.367973]]],[[[113.217506,6.306249],[113.243991,6.325878],[113.230441,6.285429],[113.217506,6.306249]]],[[[116.152457,9.579384],[116.187565,9.595317],[116.189413,9.565221],[116.152457,9.579384]]],[[[114.948911,7.508722],[115.013585,7.525928],[115.012353,7.484988],[114.960614,7.484988],[114.948911,7.508722]]],[[[111.553854,7.807656],[111.603745,7.861608],[111.619759,7.840265],[111.585267,7.771487],[111.553854,7.807656]]],[[[113.938771,15.8355],[113.9708,15.83953],[113.973263,15.805558],[113.938771,15.8355]]],[[[114.926122,16.036911],[114.910723,16.001823],[114.895325,16.036336],[114.926122,16.036911]]],[[[114.323733,22.297541],[114.323733,22.298095],[114.324349,22.297541],[114.323733,22.297541]]],[[[116.749302,9.056736],[116.740679,9.028367],[116.70865,9.024229],[116.699411,9.049053],[116.749302,9.056736]]],[[[112.64653,16.385733],[112.660081,16.426494],[112.681639,16.400661],[112.64653,16.385733]]],[[[115.758256,10.461018],[115.801987,10.463372],[115.776118,10.434534],[115.758256,10.461018]]],[[[111.203384,19.92557],[111.204,19.926132],[111.204,19.92557],[111.203384,19.925007],[111.203384,19.92557]]],[[[117.21372,10.735144],[117.206945,10.707507],[117.187235,10.741612],[117.21372,10.735144]]],[[[115.782277,10.541046],[115.805067,10.524571],[115.795212,10.499858],[115.782277,10.541046]]],[[[112.671784,16.331755],[112.677943,16.35932],[112.701349,16.331755],[112.671784,16.331755]]],[[[113.586453,22.201162],[113.575983,22.194513],[113.575983,22.201162],[113.586453,22.201162]]],[[[112.512255,9.544566],[112.567074,9.554008],[112.568922,9.516826],[112.50856,9.525679],[112.512255,9.544566]]],[[[114.610145,15.649447],[114.610761,15.615444],[114.581195,15.625242],[114.610145,15.649447]]],[[[117.691073,11.048965],[117.690457,11.016658],[117.655965,11.024882],[117.653501,11.046029],[117.691073,11.048965]]],[[[117.299336,11.077745],[117.304263,11.027232],[117.284553,11.02547],[117.264227,11.063062],[117.299336,11.077745]]],[[[114.166668,9.38459],[114.194386,9.391676],[114.195617,9.350933],[114.175291,9.342075],[114.166668,9.38459]]],[[[114.714854,9.736909],[114.704999,9.700337],[114.680978,9.707416],[114.693296,9.741038],[114.714854,9.736909]]],[[[112.554139,5.97839],[112.575697,5.971247],[112.553523,5.942676],[112.554139,5.97839]]],[[[122.51865306,23.46078502],[122.51742454,23.45790762],[122.51536697,23.45555069],[122.51268178,23.45394494],[122.50963181,23.45324755],[122.5065156,23.45352678],[122.5036382,23.45475531],[122.50128127,23.45681287],[122.49967552,23.45949807],[122.49897813,23.46254804],[122.49925737,23.46566424],[122.77921829,24.57855302],[122.78044682,24.58143041],[122.78250438,24.58378734],[122.78518957,24.5853931],[122.78823955,24.58609049],[122.79135575,24.58581125],[122.79423315,24.58458272],[122.79659008,24.58252516],[122.79819583,24.57983997],[122.79889322,24.57678999],[122.79861399,24.57367379],[122.51865306,23.46078502]]],[[[121.17202617,20.8054593],[121.16966862,20.80340244],[121.16679085,20.80217478],[121.16367457,20.80189649],[121.1606248,20.8025948],[121.1579401,20.80420136],[121.15588324,20.80655891],[121.15465558,20.80943668],[121.15437729,20.81255297],[121.1550756,20.81560273],[121.15668216,20.81828744],[121.89404403,21.70026162],[121.89640158,21.70231847],[121.89927934,21.70354613],[121.90239563,21.70382443],[121.9054454,21.70312611],[121.9081301,21.70151955],[121.91018696,21.699162],[121.91141462,21.69628423],[121.91169291,21.69316794],[121.9109946,21.69011818],[121.90938804,21.68743347],[121.17202617,20.8054593]]],[[[119.47366172,18.00707291],[119.47175735,18.00459056],[119.46917909,18.0028182],[119.46617933,18.0019293],[119.4630517,18.00201089],[119.46010237,18.00305497],[119.45762002,18.00495935],[119.45584765,18.00753761],[119.45495876,18.01053737],[119.45504035,18.01366499],[119.45608443,18.01661433],[120.00812005,19.0335793],[120.01002443,19.03606165],[120.01260269,19.03783401],[120.01560245,19.03872291],[120.01873007,19.03864132],[120.02167941,19.03759723],[120.02416175,19.03569286],[120.02593412,19.0331146],[120.02682302,19.03011484],[120.02674143,19.02698721],[120.02569734,19.02403788],[119.47366172,18.00707291]]],[[[119.0726757,15.04098494],[119.0726746,15.04083704],[119.07218171,15.00751424],[119.07164663,15.00443165],[119.07018516,15.00166528],[119.06794036,14.99948592],[119.06513198,14.99810691],[119.06203491,14.99766324],[119.05895232,14.99819832],[119.05618595,14.99965979],[119.05400659,15.00190458],[119.05262758,15.00471297],[119.0521839,15.00781004],[119.0526757,15.04105889],[119.0526757,16.04388528],[119.05316513,16.04697545],[119.05458553,16.04976313],[119.05679784,16.05197545],[119.05958553,16.05339584],[119.0626757,16.05388528],[119.06576587,16.05339584],[119.06855355,16.05197545],[119.07076587,16.04976313],[119.07218626,16.04697545],[119.0726757,16.04388528],[119.0726757,15.04098494]]],[[[118.68646749,11.18959191],[118.85557939,11.6136711],[118.9698053,11.99151854],[118.97116801,11.99433487],[118.97333431,11.99659227],[118.97609216,11.99806975],[118.9791716,11.99862269],[118.98227119,11.99819697],[118.98508753,11.99683427],[118.98734492,11.99466796],[118.9888224,11.99191011],[118.98937534,11.98883067],[118.98894963,11.98573108],[118.87459939,11.60747236],[118.87431591,11.606662],[118.70476212,11.18147468],[118.70409227,11.18010771],[118.54242469,10.9053354],[118.54043581,10.90292022],[118.53779795,10.90123786],[118.53476931,10.90045298],[118.53164636,10.90064241],[118.5287348,10.90178762],[118.52631962,10.9037765],[118.52463726,10.90641436],[118.52385237,10.909443],[118.52404181,10.91256595],[118.52518702,10.91547751],[118.68646749,11.18959191]]],[[[115.54466883,7.14672265],[115.54229721,7.14468204],[115.53941108,7.14347417],[115.53629295,7.14321728],[115.53324806,7.14393652],[115.53057445,7.14556148],[115.52853383,7.1479331],[115.52732596,7.15081924],[115.52706908,7.15393736],[115.52778832,7.15698226],[115.52941328,7.15965587],[116.23523025,7.99221221],[116.23760187,7.99425282],[116.240488,7.99546069],[116.24360613,7.99571758],[116.24665102,7.99499834],[116.24932463,7.99337338],[116.25136525,7.99100176],[116.25257312,7.98811563],[116.25283001,7.9849975],[116.25211077,7.98195261],[116.2504858,7.979279],[115.54466883,7.14672265]]],[[[112.30705249,3.53487257],[112.51501594,3.59753306],[112.84361424,3.7506962],[112.84662187,3.75155809],[112.84974864,3.7514484],[112.85268847,3.75037785],[112.8551536,3.74845124],[112.85690272,3.74585715],[112.85776462,3.74284952],[112.85765492,3.73972276],[112.85658437,3.73678292],[112.85465776,3.7343178],[112.85206367,3.73256867],[112.52281386,3.57910186],[112.52147408,3.5785908],[112.31248917,3.51562254],[112.31181658,3.51544515],[111.79132585,3.39736822],[111.78820398,3.39716187],[111.78517113,3.39793033],[111.78252419,3.39959839],[111.78052226,3.40200275],[111.77936129,3.40490807],[111.77915495,3.40802995],[111.77992341,3.41106279],[111.78159146,3.41370973],[111.78399583,3.41571167],[111.78690114,3.41687263],[112.30705249,3.53487257]]],[[[108.26055972,6.08912451],[108.26004031,6.09098419],[108.23638164,6.22427602],[108.23630689,6.22476797],[108.19687578,6.53630242],[108.19679674,6.53760583],[108.1987683,6.95072469],[108.19897125,6.95268198],[108.22460147,7.07791743],[108.22570055,7.08084671],[108.22765103,7.083293],[108.230262,7.08501682],[108.23327786,7.08584944],[108.23640341,7.08570936],[108.2393327,7.08461028],[108.24177899,7.0826598],[108.24350281,7.08004883],[108.24433543,7.07703297],[108.24419535,7.07390742],[108.21876335,6.94964057],[108.21679964,6.53816468],[108.25611734,6.22752625],[108.279563,6.09543449],[108.30878645,6.01987736],[108.30944469,6.0168187],[108.30912553,6.01370633],[108.30786022,6.01084492],[108.30577262,6.00851455],[108.30306706,6.00694335],[108.3000084,6.00628511],[108.29689603,6.00660426],[108.29403462,6.00786957],[108.29170425,6.00995718],[108.29013305,6.01266273],[108.26055972,6.08912451]]],[[[110.12822847,11.36894451],[110.18898148,11.48996382],[110.23982347,11.61066468],[110.28485499,11.78705054],[110.3083549,11.94803461],[110.3142445,12.14195265],[110.312278,12.23998238],[110.31270536,12.24308175],[110.31406956,12.24589736],[110.31623706,12.2481536],[110.3189957,12.24962962],[110.32207543,12.25018094],[110.32517479,12.24975358],[110.3279904,12.24838938],[110.33024665,12.24622187],[110.33172267,12.24346324],[110.33227398,12.24038351],[110.33424553,12.14210167],[110.33424294,12.14159753],[110.32832827,11.94685414],[110.32822801,11.94571326],[110.30456934,11.78364161],[110.30436343,11.7826124],[110.25901765,11.60499559],[110.25854422,11.60358735],[110.20728377,11.48189306],[110.20700505,11.48128846],[110.14588682,11.35954163],[110.14541497,11.35870461],[110.07246741,11.24270688],[110.07040803,11.24035153],[110.0677216,11.23874785],[110.06467109,11.23805281],[110.0615551,11.23833444],[110.05867865,11.23956519],[110.05632331,11.24162456],[110.05471962,11.24431099],[110.05402458,11.2473615],[110.05430621,11.25047749],[110.05553696,11.25335394],[110.12822847,11.36894451]]],[[[109.82951587,15.22896754],[109.77065019,15.44468789],[109.67264555,15.66561455],[109.57455994,15.82609887],[109.51574449,15.91095759],[109.29314007,16.19491896],[109.29161878,16.19765288],[109.29101677,16.20072311],[109.29139298,16.2038291],[109.29271057,16.20666681],[109.29484059,16.20895848],[109.29757451,16.21047978],[109.30064474,16.21108179],[109.30375073,16.21070558],[109.30658844,16.20938798],[109.30888011,16.20725797],[109.53166592,15.92306523],[109.53201478,15.92259221],[109.59116145,15.8372556],[109.59147511,15.83677407],[109.6900529,15.67548445],[109.69066131,15.67432448],[109.7892391,15.45210582],[109.78974541,15.45068337],[109.84889209,15.23393326],[109.84903675,15.23333003],[109.8648092,15.15722425],[109.86495704,15.15409906],[109.86413191,15.15108113],[109.86241457,15.1484659],[109.85997314,15.14650935],[109.85704658,15.145403],[109.85392139,15.14525516],[109.85090347,15.14608029],[109.84828823,15.14779763],[109.84633168,15.15023907],[109.84522534,15.15316562],[109.82951587,15.22896754]]]]}}],jf={type:qf,features:Yf},Kf=()=>{const n=new ie;return jf.features.forEach(e=>{const t=new ie;e.geometry.coordinates.forEach(r=>{r.forEach(s=>{if(s.length>200){let o=[];for(let u=0;u<s.length;u++){let h=Jt(s[u][0],s[u][1]);o.push(h)}let a=new M7(o,!1),l=new N(.5999758518718452,.7798940272761521,.6181903838257632),c=Zf(a,{speed:.5,color:l,number:3,length:.2,size:3},5e3);t.add(c)}})}),n.add(t)}),n},Zf=(n,e,t)=>{const i=n.getPoints(t),r=new Se().setFromPoints(i),s=i.length;let o=new Float32Array(s);for(let c=0;c<i.length;c+=1)o[c]=c/s;r.setAttribute("percent",new tt(o,1));const a=$f(e);return new M9(r,a)},$f=n=>{const e=n&&Number(n.number)||1,t=n&&Number(n.speed)||1,i=n&&Number(n.length)||.5,r=n&&Number(n.size)||3,s=n?n.color||new N(0,1,1):new N(0,1,1);return new Lt({uniforms:{time:{type:"f",value:0},number:{type:"f",value:e},speed:{type:"f",value:t},length:{type:"f",value:i},size:{type:"f",value:r},color:{type:"v3",value:s}},vertexShader:`
      varying vec2 vUv;
      attribute float percent;
      uniform float time;
      uniform float number;
      uniform float speed;
      uniform float length;
      varying float opacity;
      uniform float size;
      void main()
      {
          vUv = uv;
          vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );
          float l = clamp(1.0-length,0.0,1.0);
          gl_PointSize = clamp(fract(percent*number + l - time*number*speed)-l ,0.0,1.) * size * (1./length);
          opacity = gl_PointSize/size;
          gl_Position = projectionMatrix * mvPosition;
      }
    `,fragmentShader:`
      #ifdef GL_ES
      precision mediump float;
      #endif
      varying float opacity;
      uniform vec3 color;
      void main(){
          if(opacity <=0.2){
              discard;
          }
          gl_FragColor = vec4(color,1.0);
      }
    `,transparent:!0,blending:q0})},Jf=n=>{n==null||n.children.forEach(e=>{e.children.forEach(t=>{t.material.uniforms.time.value+=.007})})},U7="/assets/biaozhu-OZlHTPi1.png",Qf="/assets/bzguangquan-cPBDN4G-.png",ed=n=>{const e=new qe;e.name="cityPointWaveGroup";const t=new qe;t.name="cityPointGroup";let i=new Dt().load(U7),r=new Dt().load(Qf);for(const s in n){let o=n[s],a=o.longitude,l=o.latitude,c=Jt(a,l),u=td(c,r),h=nd(c,i);e.add(u),t.add(h)}return{waveMeshArr:e,pointMeshArr:t}},td=(n,e)=>{const t=new e2(1,1),i=new A2({color:"#6edade",map:e,transparent:!0,opacity:1,depthWrite:!1});let r=new Be(t,i),s=k1.earthRadius*.045;r.size=s,r.scale.set(s,s,s),r._s=Math.random()*1+1,r.position.set(n.x,n.y,n.z),r.privateType="cityPointWave",r.layerType="city";let o=new N(n.x,n.y,n.z).normalize(),a=new N(0,0,1);return r.quaternion.setFromUnitVectors(a,o),r},nd=(n,e)=>{const t=new e2(1,1),i=new A2({color:"#6edade",map:e,transparent:!0,opacity:1,depthWrite:!1});let r=new Be(t,i),s=k1.earthRadius*.035;r.scale.set(s,s,s),r.position.set(n.x,n.y,n.z),r.privateType="cityPoint",r.layerType="city";let o=new N(n.x,n.y,n.z).normalize(),a=new N(0,0,1);return r.quaternion.setFromUnitVectors(a,o),r},id=n=>{var e;if(!n||!((e=n==null?void 0:n.children)!=null&&e.length))return!1;n.children.forEach(t=>{t._s+=.005,t.scale.set(t.size*t._s,t.size*t._s,t.size*t._s),t._s<=1.3?t.material.opacity=(t._s-1)*2:t._s>1.3&&t._s<=1.6?t.material.opacity=1-(t._s-1.3)*2:t._s=1})},rd="/assets/guangzhu-a1pVoPh4.png",sd=n=>{const e=new qe;e.name="cityLightWaveGroup";const t=new qe;t.name="cityLightGroup";const i=new Dt().load(U7),r=new Dt().load(rd);for(const s in n){const o=n[s];let a=Jt(o.longitude,o.latitude),l=od(i),c=ad(r,a);e.add(l),t.add(c)}return{waveLightMeshArr:e,lightWeshArr:t}},od=n=>{let e=new e2(1,1),t=new A2({color:"#22ffcc",map:n,transparent:!0,depthWrite:!1}),i=new Be(e,t),r=k1.earthRadius*.035;return i.scale.set(r,r,r),i.privateType="cityLightWave",i.layerType="city",i},ad=(n,e)=>{let t=k1.earthRadius*.1,i=new e2(k1.earthRadius*.05,t);i.rotateX(Math.PI/2),i.translate(0,0,t/2);let r=new A2({map:n,color:"#0dfdf8",transparent:!0,side:ot,depthWrite:!1}),s=new Be(i,r);s.privateType="cityLight",s.layerType="city";let o=new qe;o.add(s,s.clone().rotateZ(Math.PI/2)),o.position.set(e.x,e.y,e.z);let a=new N(e.x,e.y,e.z).normalize(),l=new N(0,0,1);return o.quaternion.setFromUnitVectors(l,a),o},ld=(n,e)=>{const t=new qe;return e.forEach(i=>{const r=n[i.from],s=Jt(r.longitude,r.latitude);i.to.forEach(o=>{let a=n[o],l=Jt(a.longitude,a.latitude),c=cd(s,l);t.add(c)})}),t},cd=(n,e)=>{const{v1:t,v2:i}=D7(n,e);let s=new b9(n,t,i,e).getSpacedPoints(50),o=[],a=[],l=new K1;for(let f=0;f<s.length;f++)l.setHSL(.31666+f*.005,.7,.5),a.push(l.r,l.g,l.b),o.push(s[f].x,s[f].y,s[f].z);let c=new Se().setFromPoints(s);c.setAttribute("position",new fe(o,3)),c.setAttribute("color",new fe(a,3));let u=new m4({linewidth:.0016,vertexColors:!0});return new y9(c,u)};class ud{constructor({texture:e}){Q1(this,"flyId");Q1(this,"flyArr");Q1(this,"baicSpeed");Q1(this,"texture");Q1(this,"flyShader");this.flyId=0,this.flyArr=[],this.baicSpeed=1,this.texture=0,e&&!e.isTexture?this.texture=new Dt().load(e):this.texture=e,this.flyShader={vertexshader:` 
        uniform float size; 
        uniform float time; 
        uniform float u_len; 
        attribute float u_index;
        varying float u_opacitys;
        void main() { 
            if( u_index < time + u_len && u_index > time){
                float u_scale = 1.0 - (time + u_len - u_index) /u_len;
                u_opacitys = u_scale;
                vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);
                gl_Position = projectionMatrix * mvPosition;
                gl_PointSize = size * u_scale * 300.0 / (-mvPosition.z);
            } 
        }
        `,fragmentshader:` 
        uniform sampler2D u_map;
        uniform float u_opacity;
        uniform vec3 color;
        uniform float isTexture;
        varying float u_opacitys;
        void main() {
            vec4 u_color = vec4(color,u_opacity * u_opacitys);
            if( isTexture != 0.0 ){
                gl_FragColor = u_color * texture2D(u_map, vec2(gl_PointCoord.x, 1.0 - gl_PointCoord.y));
            }else{
                gl_FragColor = u_color;
            }
        }`}}addFly({color:e="rgba(255,255,255,1)",curve:t=[],width:i=1,length:r=10,speed:s=1,repeat:o=1,texture:a=null,callback:l}){let c=this.getColorArr(e),u=new Se,h=new Lt({uniforms:{color:{value:c[0],type:"v3"},size:{value:i,type:"f"},u_map:{value:a||this.texture,type:"t2"},u_len:{value:r,type:"f"},u_opacity:{value:c[1],type:"f"},time:{value:-r,type:"f"},isTexture:{value:1,type:"f"}},transparent:!1,depthTest:!0,vertexShader:this.flyShader.vertexshader,fragmentShader:this.flyShader.fragmentshader});const[f,m]=[[],[]];t.forEach((v,p)=>{f.push(v.x,v.y,v.z),m.push(p)}),u.setAttribute("position",new fe(f,3)),u.setAttribute("u_index",new fe(m,1));let g=new M9(u,h);return g.name="fly",g._flyId=this.flyId,g._speed=s,g._repeat=o,g._been=0,g._total=t.length,g._callback=l,this.flyId++,this.flyArr.push(g),g}tranformPath(e,t=1){const i=[];for(let r=1;r<e.length;r++){let s=e[r-1],o=e[r],a=new N(s.x,s.y,s.z),l=new N(o.x,o.y,o.z),c=a.distanceTo(l)*t;for(let u=0;u<=c;u++)i.push(a.clone().lerp(l,u/c))}return i}remove(e){e.material.dispose(),e.geometry.dispose(),this.flyArr=this.flyArr.filter(t=>t._flyId!=e._flyId),e.parent.remove(e),e=null}animation(e=.015){e>.2||this.flyArr.forEach(t=>{if(t.parent)if(t._been>t._repeat)t.visible=!1,typeof t._callback=="function"&&t._callback(t),this.remove(t);else{let i=t.material.uniforms;i.time.value<t._total?i.time.value+=e*(this.baicSpeed/e)*t._speed:(t._been+=1,i.time.value=-i.u_len.value)}})}color(e="rgba(255,255,255,1)"){return new K1(e)}getColorArr(e){if(Array.isArray(e))return e;let t=[];if(e=(e+"").toLowerCase().replace(/\s/g,""),/^((?:rgba)?)\(\s*([^\)]*)/.test(e)){let r=e.replace(/rgba\(|\)/gi,"").split(","),s=[i(Math.round(r[0]*1||0).toString(16)),i(Math.round(r[1]*1||0).toString(16)),i(Math.round(r[2]*1||0).toString(16))];t[0]=this.color("#"+s.join("")),t[1]=Math.max(0,Math.min(1,r[3]*1||0))}else e==="transparent"?(t[0]=this.color(),t[1]=0):(t[0]=this.color(e),t[1]=1);function i(r){return r.length==1?"0"+r:""+r}return t}}const hd="/assets/point-PfB81gAC.png",fd=(n,e,t)=>{let i=null;return i==null&&(i=new ud({texture:hd})),t.forEach(r=>{r.to.forEach(s=>{dd(n,i,e[r.from],e[s],r.color)})}),i},dd=(n,e,t,i,r)=>{setTimeout(function(){pd(n,e,t,i,r)},Math.ceil(Math.random()*15e3))},pd=(n,e,t,i,r)=>{const s=new Array;let o=Jt(t.longitude,t.latitude),a=Jt(i.longitude,i.latitude);s.push(new N(o.x,o.y,o.z));let l=Math.sqrt((o.x-a.x)*(o.x-a.x)+(o.y-a.y)*(o.y-a.y)+(o.z-a.z)*(o.z-a.z))/k1.earthRadius,c=3+Math.ceil(l*3);const{v1:u,v2:h}=D7(o,a);let f=new b9(o,u,h,a),m=Math.ceil(500*c),g=f.getPoints(m),v=e.addFly({curve:g,color:r,width:4,length:Math.ceil(g.length*3/15),speed:c+20,repeat:1/0});n.add(v)},md=(n,e)=>{const t=new ie,i=new Dt().load(Of),r=new Dt().load(Ff);let s=null,o,a;const l=new A9(k1.earthRadius,100,100),c=new P7({map:i,lightMap:r,flatShading:!0,fog:!1}),u=new Be(l,c);if(u.name="earth",t.add(u),k1.default.earth.sprite){const h=zf();t.add(h)}if(k1.default.city.stroke){const{cityStroke:h}=Xf();t.add(h)}if(k1.default.earth.outLine&&(s=Kf(),t.add(s)),k1.default.city.point){const{waveMeshArr:h,pointMeshArr:f}=ed(n);a=h,t.add(h),t.add(f)}if(k1.default.city.light){const{waveLightMeshArr:h,lightWeshArr:f}=sd(n);t.add(h),t.add(f)}if(k1.default.city.flyLine&&(o=fd(t,n,e)),k1.default.city.line){const h=ld(n,e);console.log(h),t.add(h)}return{earthObj:t,earthOutLine:s,waveMeshObj:a,flyManager:o}};class gd{constructor(e,t,i=3e3,r,s){Q1(this,"time");Q1(this,"camera");Q1(this,"controls");Q1(this,"tween");Q1(this,"posArr");Q1(this,"config",{ease:"Quadratic",type:"InOut"});this.camera=e,this.controls=t,this.time=i,this.posArr=r,this.config=s}load(){var e,t;if(this.tween&&this.tween.stop(),!(this.posArr.length<1))return this.posArr.length===1&&this.posArr.unshift(this.camera.position),this.tween=new Rn.Tween(this.posArr[0]).to(this.posArr[1],this.time).easing(Rn.Easing[((e=this.config)==null?void 0:e.ease)||"Quadratic"][((t=this.config)==null?void 0:t.type)||"InOut"]),this}start(){return this.tween.start(),this}stop(){return this.tween.stop(),this}setUpdate(e){return this.tween.onUpdate(e),this}setComplete(e){return this.tween.onComplete(e),this}get(){return this.tween}}const _d=(n,e,t,i,r)=>{n.domElement.addEventListener("click",s=>{s.preventDefault();const o=new Af;let a=s.clientX/i.clientWidth*2-1,l=-(s.clientY/i.clientHeight)*2+1;o.setFromCamera(new p1(a,l),e);const c=t.children.filter(h=>h.type==="Group");o.intersectObjects(c||[]).length>0&&(vd(e,r),setTimeout(()=>{t.visible=!1},3e3))})},vd=(n,e)=>{var r,s;const t=new gd(n,e,3e3,[k1.chinaCamaPositions[1]]),i=()=>{n.position.set(n.position.x,n.position.y,n.position.z),e.update()};e.minDistance=50,(s=(r=t.load())==null?void 0:r.start())==null||s.setUpdate(i).setComplete(()=>{e.maxDistance=300})},xd=n=>{const e=new A7;n.forEach((r,s)=>{const[o,a]=I7(r);s===0&&e.moveTo(o,-a),e.lineTo(o,-a)});const t=new T9(e,{depth:-2,bevelEnabled:!1}),i=new A2({color:"#ff0000",transparent:!0,opacity:1});return new Be(t,i)},yd=()=>{const n=new ie;n.name="province";const e=new ie;e.name="provinceLine";const t=new m4({color:15832403});return L7.features.forEach(i=>{const r=new qe,s=new qe;r.name=i.properties.name,s.name=i.properties.name,i.geometry.coordinates.forEach(a=>{a.forEach(l=>{const c=xd(l);c.rotateX(Math.PI/2),c.rotateY(Math.PI),c.position.y=2.1;const u=kf(l,t);u.rotateX(Math.PI/2),u.rotateY(Math.PI),r.add(c),s.add(u)})}),n.add(r),e.add(s)}),{provinceObj:n,provinceLine:e}},Md=()=>{const n=new ie,e=new e2(550,275);e.rotateX(Math.PI/2);const t=new P7({side:ot}),i=new Be(e,t);n.add(i);const{provinceObj:r,provinceLine:s}=yd();return n.add(r),n.add(s),{chinaObj:n}};class Sd{constructor(e,t,i,r){Q1(this,"stats");Q1(this,"width");Q1(this,"height");Q1(this,"parentDom");Q1(this,"scene");Q1(this,"camera");Q1(this,"renderer");Q1(this,"orbitControl");Q1(this,"stars");Q1(this,"earthObj");Q1(this,"earthOutLine");Q1(this,"waceMeshArr",[]);Q1(this,"cityList");Q1(this,"relationList");Q1(this,"flyManager",null);this.parentDom=document.getElementById(e),this.width=this.parentDom.offsetWidth,this.height=this.parentDom.offsetHeight,k1.earthRadius=(r==null?void 0:r.radius)??k1.earthRadius,k1.default=Object.assign({},k1.default,r||{}),this.cityList=t,this.relationList=i,this.init()}init(){this.renderer=Cf(this.width,this.height),this.scene=wf(),this.camera=Rf(this.width,this.height),this.parentDom.appendChild(this.renderer.domElement),Pf(this.scene),this.orbitControl=If(this.camera,this.renderer),k1.default.showStats&&(this.stats=new w3,this.parentDom.appendChild(this.stats.dom))}load(){k1.default.star.show&&(this.stars=Nf(this.scene));const{earthObj:e,earthOutLine:t,waveMeshObj:i,flyManager:r}=md(this.cityList,this.relationList);this.waceMeshArr=i,this.earthOutLine=t,this.earthObj=e,this.flyManager=r,this.scene.add(e);const{chinaObj:s}=Md();this.scene.add(s),k1.default.enterAnimation&&this.enterAnimate(3e3),this.animate(),window.onresize=()=>{this.resize()},_d(this.renderer,this.camera,this.earthObj,this.parentDom,this.orbitControl)}enterAnimate(e){const t=new P4.Tween(k1.camaPositions[0]).to(k1.camaPositions[1],e).easing(P4.Easing.Quadratic.InOut),i=()=>{this.camera.position.set(k1.camaPositions[0].x,k1.camaPositions[0].y,k1.camaPositions[0].z)};t.onUpdate(i),t.start()}animate(){k1.default.star.show&&k1.default.star.autoRotate&&this.stars&&(this.stars.rotation.y+=1e-4),k1.default.earth.autoRotate&&this.earthObj&&(this.earthObj.rotation.y+=.001),this.stats&&k1.default.showStats&&this.stats.update(),this.renderer.clear(),this.renderer.render(this.scene,this.camera),requestAnimationFrame(this.animate.bind(this)),this.afterAnimate()}afterAnimate(){P4.update(),this.flyManager!=null&&this.flyManager.animation(),k1.default.earth.outLine&&this.earthOutLine!=null&&Jf(this.earthOutLine),id(this.waceMeshArr)}resize(){this.width=this.parentDom.offsetWidth,this.height=this.parentDom.offsetHeight,this.camera.aspect=this.width/this.height,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.width,this.height)}}const Ed={id:"container",class:"container"},bd=j6({__name:"App",setup(n){const e={北京:{name:"北京",longitude:116.3,latitude:39.9},上海:{name:"上海",longitude:121,latitude:31},西安:{name:"西安",longitude:108,latitude:34},成都:{name:"成都",longitude:103,latitude:31},乌鲁木齐:{name:"乌鲁木齐",longitude:87,latitude:43},拉萨:{name:"拉萨",longitude:91.06,latitude:29.36},广州:{name:"广州",longitude:113,latitude:23.06},哈尔滨:{name:"哈尔滨",longitude:127,latitude:45.5},沈阳:{name:"沈阳",longitude:123.43,latitude:41.8},武汉:{name:"武汉",longitude:114,latitude:30},海口:{name:"海口",longitude:110,latitude:20.03},纽约:{name:"纽约",longitude:-74.5,latitude:40.5},伦敦:{name:"伦敦",longitude:.1,latitude:51.3},巴黎:{name:"巴黎",longitude:2.2,latitude:48.5},开普敦:{name:"开普敦",longitude:18.25,latitude:-33.5},悉尼:{name:"悉尼",longitude:151.1,latitude:-33.51},东京:{name:"东京",longitude:139.69,latitude:35.69},里约热内卢:{name:"里约热内卢",longitude:-43.11,latitude:-22.54}},t=[{from:"北京",to:["上海","西安","成都","乌鲁木齐","拉萨","广州","哈尔滨"],color:"rgba(255, 255, 255, 1)"}];return Ai(()=>{new Sd("container",e,t,{showStats:!1,enterAnimation:!0,star:{show:!0,autoRotate:!0},earth:{autoRotate:!1,sprite:!0,outLine:!0},city:{stroke:!0,flyLine:!0,line:!0,point:!0}}).load()}),(i,r)=>(Tr(),Rr("div",Ed))}});ds(bd).mount("#app");
